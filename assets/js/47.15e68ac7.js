(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{456:function(e,t,r){"use strict";r.r(t);var a=r(5),s=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("ol",[t("li",[e._v("[213] Cache Coherence for GPU Architectures")])]),e._v(" "),t("hr"),e._v(" "),t("h3",{attrs:{id:"_1-213-cache-coherence-for-gpu-architectures"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-213-cache-coherence-for-gpu-architectures"}},[e._v("#")]),e._v(" 1. [213] Cache Coherence for GPU Architectures")]),e._v(" "),t("h4",{attrs:{id:"another-design-in-cpu-llc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#another-design-in-cpu-llc"}},[e._v("#")]),e._v(" Another Design in CPU LLC")]),e._v(" "),t("p",[e._v("Library Cache Coherence (LCC), that implements sequential consistency on CMPs by stalling writes to cache blocks until they have been self-invalidated by all sharers.")]),e._v(" "),t("p",[e._v("Library Cache Coherence (LCC) [34, 54] is a time-based hardware coherence proposal that stores timestamps in a directory structure and delays stores to unexpired blocks to enforce sequential consistency on CMPs."),t("br"),e._v("\nThe TC-Strong implementation of the TC framework is similar to LCC as both enforce write atomicity by stalling writes at the shared last level cache.")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://github.com/user-attachments/assets/3e7e13cc-7d64-4234-897b-03754489dd1f",alt:"image"}})]),e._v(" "),t("h4",{attrs:{id:"background"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#background"}},[e._v("#")]),e._v(" Background")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://github.com/user-attachments/assets/2e62c5ed-574b-4cc2-9f85-8b269dc80358",alt:"image"}})]),e._v(" "),t("p",[e._v("We propose TC-Weak and a novel time-based memory fence mechanism to eliminate all write-stalling, improve performance, and reduce interconnect traffic compared to TC-Strong.")]),e._v(" "),t("ul",[t("li",[e._v("We find that the stalling of writes in TC-Strong causes poor performance on a GPU.")]),e._v(" "),t("li",[e._v("We also show that unlike for CPU applications [34, 54], the fixed timestamp prediction proposed by LCC is not suited for GPU applications.")])]),e._v(" "),t("h4",{attrs:{id:"gpu-memory-system"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gpu-memory-system"}},[e._v("#")]),e._v(" GPU Memory System")]),e._v(" "),t("p",[e._v("Both thread-private and global memory are stored in off-chip GDDR DRAM and cached in the multi-level cache hierarchy, however only "),t("strong",[e._v("global memory requires coherence")]),e._v(".")]),e._v(" "),t("p",[e._v("Memory accesses to the same cache block from different threads within a wavefront are merged into a single wide access by the Coalescing Unit."),t("br"),e._v("\nA memory instruction generates one memory access for every unique cache line accessed by the wavefront."),t("br"),e._v("\nAll requests are handled in FIFO order by the in-order memory stage of a GPU core."),t("br"),e._v(" "),t("strong",[e._v("Writes to the same word by multiple scalar threads in a single wavefront do not have a defined behaviour [46]; only one write will succeed")]),e._v(".")])])}),[],!1,null,null,null);t.default=s.exports}}]);