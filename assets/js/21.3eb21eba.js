(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{431:function(e,t,n){"use strict";n.r(t);var s=n(5),a=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"chap5-llvm-intermediate-representation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chap5-llvm-intermediate-representation"}},[e._v("#")]),e._v(" Chap5. LLVM Intermediate Representation")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("This IR has three equivalent forms:"),t("br"),e._v("\n• An in-memory representation (the Instruction class, among others)"),t("br"),e._v("\n• An on-disk representation that is encoded in a space-efficient form  (the bitcode files)"),t("br"),e._v("\n• An on-disk representation in a human-readable text form (the LLVM assembly files)"),t("br")])]),e._v(" "),t("li",[t("p",[e._v("LLVM still conveys some target-specific aspects"),t("br"),e._v("\nProgram might implicitly include target-specific headers, like "),t("strong",[e._v("bits")]),e._v(" linux header folder.")])]),e._v(" "),t("li",[t("p",[e._v("commands"),t("br")])])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("clang *.c -emit-llvm -c -o *.bc\nclang *.c -emit-llvm -S -c -o *.ll\nllvm-as *.ll -o *.bc\nllvm-dis *.bc -o *.ll\n\n//extract function from IR module\nllvm-extract -func=* *.bc -o *.bc\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("ol",{attrs:{start:"4"}},[t("li",[e._v("LLVM IR Language Syntax"),t("br"),e._v("\nmodule -> function -> block -> instruction\n• SSA(Static Single Assignment) Form\n• Thress Address Instruction\n• Infinite number of registers")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"\n\n// type:<size>:<abi>:<preferred>\n// pointer 64bit 64bit 64 bit\n// p:64:64:64\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("ol",{attrs:{start:"6"}},[t("li")])])}),[],!1,null,null,null);t.default=a.exports}}]);