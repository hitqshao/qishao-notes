(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{513:function(t,a,e){"use strict";e.r(a);var s=e(8),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h4",{attrs:{id:"env"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#env"}},[t._v("#")]),t._v(" env")]),t._v(" "),a("h5",{attrs:{id:"install-software"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-software"}},[t._v("#")]),t._v(" Install Software")]),t._v(" "),a("p",[t._v("ubuntu 20.4")]),t._v(" "),a("p",[t._v("sudo apt-get install  -y wget build-essential  bison zlib1g-dev flex libglu1-mesa-dev libssl-dev libxml2-dev libboost-all-dev git g++ vim python-setuptools python-dev build-essential xutils-dev")]),t._v(" "),a("p",[t._v("pip3 install pyyaml plotly psutil")]),t._v(" "),a("p",[a("strong",[t._v("In case you meet bug: release/cuda-sim/Makefile.makedepend: No such file or directory")])]),t._v(" "),a("p",[t._v("sudo apt install xutils-dev")]),t._v(" "),a("h5",{attrs:{id:"install-cuda"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-cuda"}},[t._v("#")]),t._v(" Install CUDA")]),t._v(" "),a("p",[t._v("wget http://developer.download.nvidia.com/compute/cuda/11.0.2/local_installers/cuda_11.0.2_450.51.05_linux.run")]),t._v(" "),a("p",[t._v("sudo sh cuda_11.0.2_450.51.05_linux.run")]),t._v(" "),a("h5",{attrs:{id:"install-driver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-driver"}},[t._v("#")]),t._v(" Install driver")]),t._v(" "),a("p",[t._v("sudo ubuntu-drivers devices")]),t._v(" "),a("p",[t._v("sudo apt install nvidia-driver-535")]),t._v(" "),a("p",[t._v("nvidia-smi")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/user-attachments/assets/0f88d528-b906-4970-ba7d-12239eadfe6e",alt:"image"}})]),t._v(" "),a("p",[a("strong",[t._v("nvcc --version")])]),t._v(" "),a("p",[t._v("nvcc: NVIDIA (R) Cuda compiler driver"),a("br"),t._v("\nCopyright (c) 2005-2020 NVIDIA Corporation"),a("br"),t._v("\nBuilt on Thu_Jun_11_22:26:38_PDT_2020"),a("br"),t._v("\nCuda compilation tools, release 11.0, V11.0.194"),a("br"),t._v("\nBuild cuda_11.0_bu.TC445_37.28540450_0")]),t._v(" "),a("h4",{attrs:{id:"install-cudnn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-cudnn"}},[t._v("#")]),t._v(" Install cuDNN")]),t._v(" "),a("p",[t._v("wget https://developer.download.nvidia.com/compute/cudnn/9.0.0/local_installers/cudnn-local-repo-ubuntu2004-9.0.0_1.0-1_amd64.deb")]),t._v(" "),a("p",[t._v("sudo dpkg -i cudnn-local-repo-ubuntu2004-9.0.0_1.0-1_amd64.deb")]),t._v(" "),a("p",[t._v("sudo cp /var/cudnn-local-repo-ubuntu2004-9.0.0/cudnn-*-keyring.gpg /usr/share/keyrings/")]),t._v(" "),a("p",[t._v("sudo apt-get update")]),t._v(" "),a("p",[t._v("sudo apt-get -y install cudnn-cuda-12")]),t._v(" "),a("h4",{attrs:{id:"gpu-app-collection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gpu-app-collection"}},[t._v("#")]),t._v(" GPU-APP-Collection")]),t._v(" "),a("p",[t._v("git clone https://github.com/accel-sim/gpu-app-collection.git")]),t._v(" "),a("p",[t._v("make -C ./gpu-app-collection/src data")]),t._v(" "),a("p",[t._v("gpu app support compile of sm_10. compute_10, remove the versions below 50.")]),t._v(" "),a("p",[t._v('find ./gpu-app-collection/src/cuda/GPU_Microbenchmark/* -name "Makefile"|xargs sed -i "s/sm_30/sm_50/g"')]),t._v(" "),a("p",[t._v('find ./gpu-app-collection/src/cuda/GPU_Microbenchmark/* -name "Makefile"|xargs sed -i "s/compute_30/compute_50/g"')]),t._v(" "),a("p",[t._v("./accel")]),t._v(" "),a("p",[t._v("-----./accel-sim-framework")]),t._v(" "),a("p",[t._v("-----./gpu-app-collection/src/cuda")]),t._v(" "),a("p",[t._v("-----./gpu-app-collection/bin/11.0/release/"),a("strong",[t._v("BINARY")])]),t._v(" "),a("p",[t._v("in ./gpu-app-collection/src, you could use:")]),t._v(" "),a("ul",[a("li",[t._v("make lonestargpu-2.0")]),t._v(" "),a("li",[t._v("make GPU_Microbenchmark")]),t._v(" "),a("li",[t._v("make DeepBench")]),t._v(" "),a("li",[t._v("make rodinia-2.0-ft")]),t._v(" "),a("li",[t._v("make parboil")]),t._v(" "),a("li",[t._v("make shoc")]),t._v(" "),a("li",[t._v("make ispass-2009")]),t._v(" "),a("li",[t._v("make polybench")])]),t._v(" "),a("h4",{attrs:{id:"bashrc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bashrc"}},[t._v("#")]),t._v(" .bashrc")]),t._v(" "),a("p",[t._v("export PATH=/usr/local/cuda-11.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin")]),t._v(" "),a("p",[t._v("export LD_LIBRARY_PATH=/usr/local/cuda-11.0/lib64")]),t._v(" "),a("p",[t._v("export CUDA_INSTALL_PATH=/usr/local/cuda-11.0")]),t._v(" "),a("p",[t._v("export PATH=$CUDA_INSTALL_PATH/bin:$PATH\nexport GPUAPPS_ROOT=/home/qishao/Project/gpu_simulator/accel/gpu-app-collection")]),t._v(" "),a("h4",{attrs:{id:"collect-and-run-trace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#collect-and-run-trace"}},[t._v("#")]),t._v(" Collect and run trace:")]),t._v(" "),a("p",[t._v("./util/tracer_nvbit/run_hw_trace.py -B polybench -D 0")]),t._v(" "),a("p",[t._v("./gpu-simulator/bin/release/accel-sim.out -trace ./hw_run/traces/device-0/11.0/nw-rodinia-2.0-ft/128_10___data_result_128_10_txt/traces/kernelslist.g -config ./gpu-simulator/gpgpu-sim/configs/tested-cfgs/SM7_QV100/gpgpusim.config -config ./gpu-simulator/configs/tested-cfgs/SM7_QV100/trace.config")]),t._v(" "),a("h4",{attrs:{id:"pytorch-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pytorch-docker"}},[t._v("#")]),t._v(" Pytorch docker")]),t._v(" "),a("h5",{attrs:{id:"install-pytorch-gpu-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-pytorch-gpu-docker"}},[t._v("#")]),t._v(" Install pytorch gpu docker")]),t._v(" "),a("p",[t._v("curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg   && curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list |     sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' |     sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list")]),t._v(" "),a("p",[t._v("sudo apt-get update")]),t._v(" "),a("p",[t._v("sudo apt-get install -y nvidia-container-toolkit")]),t._v(" "),a("p",[t._v("sudo nvidia-ctk runtime configure --runtime=docker\nsudo systemctl restart docker")]),t._v(" "),a("h5",{attrs:{id:"run-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-docker"}},[t._v("#")]),t._v(" run docker")]),t._v(" "),a("p",[t._v("sudo docker run --gpus all -it --rm     -v "),a("code",[t._v("pwd")]),t._v(":/workspace     -e LOCAL_UID=$(id -u $USER)     -e LOCAL_GID=$(id -g $USER)     pinto0309/pytorch-build:11.3.0-cudnn8-devel-ubuntu20.04 bash")]),t._v(" "),a("h5",{attrs:{id:"success-fully-pytorch-compiled"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#success-fully-pytorch-compiled"}},[t._v("#")]),t._v(" Success Fully Pytorch Compiled")]),t._v(" "),a("p",[t._v("conda install python 3.12 version")]),t._v(" "),a("p",[t._v('This works for "239d87af5e5fecec452214a5e6e5e204b51c0597"')]),t._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/user-attachments/assets/feb87afb-454b-4de4-af1f-6075b57a757e",alt:"image"}})])])}),[],!1,null,null,null);a.default=r.exports}}]);