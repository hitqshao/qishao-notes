(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{428:function(e,o,s){"use strict";s.r(o);var i=s(5),r=Object(i.a)({},(function(){var e=this,o=e._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("ol",[o("li",[e._v("Unified Compilation for Lossless Compression and Sparse Computing")])]),e._v(" "),o("p",[e._v("compute in compressed data && compression on sparse matrix")]),e._v(" "),o("ol",{attrs:{start:"2"}},[o("li",[e._v("Memory Access Granularity Aware Lossless Compression for GPUs")]),e._v(" "),o("li",[e._v("Linearly Compressed Pages: A Low-Complexity, Low-Latency Main Memory Compression Framework")]),e._v(" "),o("li",[e._v("FlatPack: Flexible Compaction of Compressed Memory")]),e._v(" "),o("li",[e._v("Compresso: Pragmatic Main Memory Compression")]),e._v(" "),o("li",[e._v("Compacted CPU/GPU Data Compression via Modified Virtual Address Translation")]),e._v(" "),o("li",[e._v("CMH: Compression Management for Improving Capacity in the Hybrid Memory Cube")]),e._v(" "),o("li",[e._v("Buri: Scaling Big-Memory Computing with Hardware-Based Memory Expansion")]),e._v(" "),o("li",[e._v("Compress Objects, Not Cache Lines: An Object-Based Compressed Memory Hierarchy")]),e._v(" "),o("li",[e._v("Base-Delta-Immediate Compression:Practical Data Compression for On-Chip Caches")]),e._v(" "),o("li",[e._v("Frequent Pattern Compression: A Significance-Based Compression Scheme for L2 Caches")])])])}),[],!1,null,null,null);o.default=r.exports}}]);