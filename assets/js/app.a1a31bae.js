(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function t(t){for(var r,o,s=t[0],c=t[1],l=t[2],h=0,d=[];h<s.length;h++)o=s[h],Object.prototype.hasOwnProperty.call(a,o)&&a[o]&&d.push(a[o][0]),a[o]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(e[r]=c[r]);for(u&&u(t);d.length;)d.shift()();return i.push.apply(i,l||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],r=!0,s=1;s<n.length;s++){var c=n[s];0!==a[c]&&(r=!1)}r&&(i.splice(t--,1),e=o(o.s=n[0]))}return e}var r={},a={1:0},i=[];function o(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.e=function(e){var t=[],n=a[e];if(0!==n)if(n)t.push(n[2]);else{var r=new Promise((function(t,r){n=a[e]=[t,r]}));t.push(n[2]=r);var i,s=document.createElement("script");s.charset="utf-8",s.timeout=120,o.nc&&s.setAttribute("nonce",o.nc),s.src=function(e){return o.p+"assets/js/"+({}[e]||e)+"."+{2:"46a2acb6",3:"d3ec56e8",4:"e05a2450",5:"69e902c2",6:"53e0ea77",7:"f6346033",8:"b00617ec",9:"c66d6036",10:"8f5a1a37",11:"fbab4e7d",12:"07d36f58",13:"9cc6ab59",14:"563c0a42",15:"fe81b066",16:"d037890d",17:"0a299410",18:"fea131ce",19:"674bccad",20:"85ef104c",21:"c5984a65",22:"c0dd2944",23:"11a41b92",24:"f048a49b",25:"46563462",26:"4cbc2afd",27:"2b1186ed",28:"02915199",29:"d2278361",30:"c198a9a0",31:"34e75674",32:"3563fa71",33:"6e294d3a",34:"3a265c40",35:"36ea0c61",36:"be3b4500",37:"420b7cfc",38:"9af1b4e1"}[e]+".js"}(e);var c=new Error;i=function(t){s.onerror=s.onload=null,clearTimeout(l);var n=a[e];if(0!==n){if(n){var r=t&&("load"===t.type?"missing":t.type),i=t&&t.target&&t.target.src;c.message="Loading chunk "+e+" failed.\n("+r+": "+i+")",c.name="ChunkLoadError",c.type=r,c.request=i,n[1](c)}a[e]=void 0}};var l=setTimeout((function(){i({type:"timeout",target:s})}),12e4);s.onerror=s.onload=i,document.head.appendChild(s)}return Promise.all(t)},o.m=e,o.c=r,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="/qishao-notes/",o.oe=function(e){throw console.error(e),e};var s=window.webpackJsonp=window.webpackJsonp||[],c=s.push.bind(s);s.push=t,s=s.slice();for(var l=0;l<s.length;l++)t(s[l]);var u=c;i.push([127,0]),n()}([function(e,t,n){"use strict";var r=n(102),a=Object.prototype.toString;function i(e){return"[object Array]"===a.call(e)}function o(e){return void 0===e}function s(e){return null!==e&&"object"==typeof e}function c(e){if("[object Object]"!==a.call(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}function l(e){return"[object Function]"===a.call(e)}function u(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),i(e))for(var n=0,r=e.length;n<r;n++)t.call(null,e[n],n,e);else for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.call(null,e[a],a,e)}e.exports={isArray:i,isArrayBuffer:function(e){return"[object ArrayBuffer]"===a.call(e)},isBuffer:function(e){return null!==e&&!o(e)&&null!==e.constructor&&!o(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:s,isPlainObject:c,isUndefined:o,isDate:function(e){return"[object Date]"===a.call(e)},isFile:function(e){return"[object File]"===a.call(e)},isBlob:function(e){return"[object Blob]"===a.call(e)},isFunction:l,isStream:function(e){return s(e)&&l(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:u,merge:function e(){var t={};function n(n,r){c(t[r])&&c(n)?t[r]=e(t[r],n):c(n)?t[r]=e({},n):i(n)?t[r]=n.slice():t[r]=n}for(var r=0,a=arguments.length;r<a;r++)u(arguments[r],n);return t},extend:function(e,t,n){return u(t,(function(t,a){e[a]=n&&"function"==typeof t?r(t,n):t})),e},trim:function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}}},function(e,t,n){"use strict";var r=function(e){return e&&e.Math===Math&&e};e.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof global&&global)||r("object"==typeof this&&this)||function(){return this}()||Function("return this")()},function(e,t,n){"use strict";var r="object"==typeof document&&document.all;e.exports=void 0===r&&void 0!==r?function(e){return"function"==typeof e||e===r}:function(e){return"function"==typeof e}},function(e,t,n){"use strict";var r=n(31),a=Function.prototype,i=a.call,o=r&&a.bind.bind(i,i);e.exports=r?o:function(e){return function(){return i.apply(e,arguments)}}},function(e,t,n){"use strict";e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){"use strict";function r(e,t,n,r,a,i,o,s){var c,l="function"==typeof e?e.options:e;if(t&&(l.render=t,l.staticRenderFns=n,l._compiled=!0),r&&(l.functional=!0),i&&(l._scopeId="data-v-"+i),o?(c=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),a&&a.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(o)},l._ssrRegister=c):a&&(c=s?function(){a.call(this,(l.functional?this.parent:this).$root.$options.shadowRoot)}:a),c)if(l.functional){l._injectStyles=c;var u=l.render;l.render=function(e,t){return c.call(t),u(e,t)}}else{var h=l.beforeCreate;l.beforeCreate=h?[].concat(h,c):[c]}return{exports:e,options:l}}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";var r=n(4);e.exports=!r((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,t){var n=Array.isArray;e.exports=n},function(e,t,n){var r=n(76),a="object"==typeof self&&self&&self.Object===Object&&self,i=r||a||Function("return this")();e.exports=i},function(e,t,n){"use strict";var r=n(2);e.exports=function(e){return"object"==typeof e?null!==e:r(e)}},function(e,t,n){"use strict";var r=n(3),a=n(36),i=r({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return i(a(e),t)}},function(e,t,n){var r=n(186),a=n(189);e.exports=function(e,t){var n=a(e,t);return r(n)?n:void 0}},function(e,t,n){"use strict";var r=SyntaxError,a=Function,i=TypeError,o=function(e){try{return a('"use strict"; return ('+e+").constructor;")()}catch(e){}},s=Object.getOwnPropertyDescriptor;if(s)try{s({},"")}catch(e){s=null}var c=function(){throw new i},l=s?function(){try{return c}catch(e){try{return s(arguments,"callee").get}catch(e){return c}}}():c,u=n(270)(),h=n(272)(),d=Object.getPrototypeOf||(h?function(e){return e.__proto__}:null),p={},f="undefined"!=typeof Uint8Array&&d?d(Uint8Array):void 0,m={"%AggregateError%":"undefined"==typeof AggregateError?void 0:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer,"%ArrayIteratorPrototype%":u&&d?d([][Symbol.iterator]()):void 0,"%AsyncFromSyncIteratorPrototype%":void 0,"%AsyncFunction%":p,"%AsyncGenerator%":p,"%AsyncGeneratorFunction%":p,"%AsyncIteratorPrototype%":p,"%Atomics%":"undefined"==typeof Atomics?void 0:Atomics,"%BigInt%":"undefined"==typeof BigInt?void 0:BigInt,"%BigInt64Array%":"undefined"==typeof BigInt64Array?void 0:BigInt64Array,"%BigUint64Array%":"undefined"==typeof BigUint64Array?void 0:BigUint64Array,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?void 0:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%eval%":eval,"%EvalError%":EvalError,"%Float32Array%":"undefined"==typeof Float32Array?void 0:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?void 0:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?void 0:FinalizationRegistry,"%Function%":a,"%GeneratorFunction%":p,"%Int8Array%":"undefined"==typeof Int8Array?void 0:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?void 0:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?void 0:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":u&&d?d(d([][Symbol.iterator]())):void 0,"%JSON%":"object"==typeof JSON?JSON:void 0,"%Map%":"undefined"==typeof Map?void 0:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&u&&d?d((new Map)[Symbol.iterator]()):void 0,"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?void 0:Promise,"%Proxy%":"undefined"==typeof Proxy?void 0:Proxy,"%RangeError%":RangeError,"%ReferenceError%":ReferenceError,"%Reflect%":"undefined"==typeof Reflect?void 0:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?void 0:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&u&&d?d((new Set)[Symbol.iterator]()):void 0,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":u&&d?d(""[Symbol.iterator]()):void 0,"%Symbol%":u?Symbol:void 0,"%SyntaxError%":r,"%ThrowTypeError%":l,"%TypedArray%":f,"%TypeError%":i,"%Uint8Array%":"undefined"==typeof Uint8Array?void 0:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?void 0:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?void 0:Uint32Array,"%URIError%":URIError,"%WeakMap%":"undefined"==typeof WeakMap?void 0:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?void 0:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?void 0:WeakSet};if(d)try{null.error}catch(e){var g=d(d(e));m["%Error.prototype%"]=g}var y={"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},v=n(51),b=n(274),w=v.call(Function.call,Array.prototype.concat),_=v.call(Function.apply,Array.prototype.splice),x=v.call(Function.call,String.prototype.replace),k=v.call(Function.call,String.prototype.slice),C=v.call(Function.call,RegExp.prototype.exec),M=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,A=/\\(\\)?/g,P=function(e){var t=k(e,0,1),n=k(e,-1);if("%"===t&&"%"!==n)throw new r("invalid intrinsic syntax, expected closing `%`");if("%"===n&&"%"!==t)throw new r("invalid intrinsic syntax, expected opening `%`");var a=[];return x(e,M,(function(e,t,n,r){a[a.length]=n?x(r,A,"$1"):t||e})),a},T=function(e,t){var n,a=e;if(b(y,a)&&(a="%"+(n=y[a])[0]+"%"),b(m,a)){var s=m[a];if(s===p&&(s=function e(t){var n;if("%AsyncFunction%"===t)n=o("async function () {}");else if("%GeneratorFunction%"===t)n=o("function* () {}");else if("%AsyncGeneratorFunction%"===t)n=o("async function* () {}");else if("%AsyncGenerator%"===t){var r=e("%AsyncGeneratorFunction%");r&&(n=r.prototype)}else if("%AsyncIteratorPrototype%"===t){var a=e("%AsyncGenerator%");a&&d&&(n=d(a.prototype))}return m[t]=n,n}(a)),void 0===s&&!t)throw new i("intrinsic "+e+" exists, but is not available. Please file an issue!");return{alias:n,name:a,value:s}}throw new r("intrinsic "+e+" does not exist!")};e.exports=function(e,t){if("string"!=typeof e||0===e.length)throw new i("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof t)throw new i('"allowMissing" argument must be a boolean');if(null===C(/^%?[^%]*%?$/,e))throw new r("`%` may not be present anywhere but at the beginning and end of the intrinsic name");var n=P(e),a=n.length>0?n[0]:"",o=T("%"+a+"%",t),c=o.name,l=o.value,u=!1,h=o.alias;h&&(a=h[0],_(n,w([0,1],h)));for(var d=1,p=!0;d<n.length;d+=1){var f=n[d],g=k(f,0,1),y=k(f,-1);if(('"'===g||"'"===g||"`"===g||'"'===y||"'"===y||"`"===y)&&g!==y)throw new r("property names with quotes must have matching quotes");if("constructor"!==f&&p||(u=!0),b(m,c="%"+(a+="."+f)+"%"))l=m[c];else if(null!=l){if(!(f in l)){if(!t)throw new i("base intrinsic for "+e+" exists, but the property is not available.");return}if(s&&d+1>=n.length){var v=s(l,f);l=(p=!!v)&&"get"in v&&!("originalValue"in v.get)?v.get:l[f]}else p=b(l,f),l=l[f];p&&!u&&(m[c]=l)}}return l}},function(e,t,n){var r=n(283),a=n(100),i=/[T ]/,o=/:/,s=/^(\d{2})$/,c=[/^([+-]\d{2})$/,/^([+-]\d{3})$/,/^([+-]\d{4})$/],l=/^(\d{4})/,u=[/^([+-]\d{4})/,/^([+-]\d{5})/,/^([+-]\d{6})/],h=/^-(\d{2})$/,d=/^-?(\d{3})$/,p=/^-?(\d{2})-?(\d{2})$/,f=/^-?W(\d{2})$/,m=/^-?W(\d{2})-?(\d{1})$/,g=/^(\d{2}([.,]\d*)?)$/,y=/^(\d{2}):?(\d{2}([.,]\d*)?)$/,v=/^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,b=/([Z+-].*)$/,w=/^(Z)$/,_=/^([+-])(\d{2})$/,x=/^([+-])(\d{2}):?(\d{2})$/;function k(e,t,n){t=t||0,n=n||0;var r=new Date(0);r.setUTCFullYear(e,0,4);var a=7*t+n+1-(r.getUTCDay()||7);return r.setUTCDate(r.getUTCDate()+a),r}e.exports=function(e,t){if(a(e))return new Date(e.getTime());if("string"!=typeof e)return new Date(e);var n=(t||{}).additionalDigits;n=null==n?2:Number(n);var C=function(e){var t,n={},r=e.split(i);o.test(r[0])?(n.date=null,t=r[0]):(n.date=r[0],t=r[1]);if(t){var a=b.exec(t);a?(n.time=t.replace(a[1],""),n.timezone=a[1]):n.time=t}return n}(e),M=function(e,t){var n,r=c[t],a=u[t];if(n=l.exec(e)||a.exec(e)){var i=n[1];return{year:parseInt(i,10),restDateString:e.slice(i.length)}}if(n=s.exec(e)||r.exec(e)){var o=n[1];return{year:100*parseInt(o,10),restDateString:e.slice(o.length)}}return{year:null}}(C.date,n),A=M.year,P=function(e,t){if(null===t)return null;var n,r,a,i;if(0===e.length)return(r=new Date(0)).setUTCFullYear(t),r;if(n=h.exec(e))return r=new Date(0),a=parseInt(n[1],10)-1,r.setUTCFullYear(t,a),r;if(n=d.exec(e)){r=new Date(0);var o=parseInt(n[1],10);return r.setUTCFullYear(t,0,o),r}if(n=p.exec(e)){r=new Date(0),a=parseInt(n[1],10)-1;var s=parseInt(n[2],10);return r.setUTCFullYear(t,a,s),r}if(n=f.exec(e))return i=parseInt(n[1],10)-1,k(t,i);if(n=m.exec(e)){i=parseInt(n[1],10)-1;var c=parseInt(n[2],10)-1;return k(t,i,c)}return null}(M.restDateString,A);if(P){var T,S=P.getTime(),O=0;if(C.time&&(O=function(e){var t,n,r;if(t=g.exec(e))return(n=parseFloat(t[1].replace(",",".")))%24*36e5;if(t=y.exec(e))return n=parseInt(t[1],10),r=parseFloat(t[2].replace(",",".")),n%24*36e5+6e4*r;if(t=v.exec(e)){n=parseInt(t[1],10),r=parseInt(t[2],10);var a=parseFloat(t[3].replace(",","."));return n%24*36e5+6e4*r+1e3*a}return null}(C.time)),C.timezone)T=6e4*function(e){var t,n;if(t=w.exec(e))return 0;if(t=_.exec(e))return n=60*parseInt(t[2],10),"+"===t[1]?-n:n;if(t=x.exec(e))return n=60*parseInt(t[2],10)+parseInt(t[3],10),"+"===t[1]?-n:n;return 0}(C.timezone);else{var E=S+O,I=new Date(E);T=r(I);var L=new Date(E);L.setDate(I.getDate()+1);var j=r(L)-r(I);j>0&&(T+=j)}return new Date(S+O+T)}return new Date(e)}},function(e,t,n){"use strict";n.d(t,"e",(function(){return r})),n.d(t,"b",(function(){return i})),n.d(t,"j",(function(){return o})),n.d(t,"g",(function(){return c})),n.d(t,"h",(function(){return l})),n.d(t,"i",(function(){return u})),n.d(t,"c",(function(){return h})),n.d(t,"f",(function(){return d})),n.d(t,"l",(function(){return p})),n.d(t,"m",(function(){return f})),n.d(t,"d",(function(){return g})),n.d(t,"k",(function(){return y})),n.d(t,"n",(function(){return v})),n.d(t,"a",(function(){return w}));n(28);const r=/#.*$/,a=/\.(md|html)$/,i=/\/$/,o=/^[a-z]+:/i;function s(e){return decodeURI(e).replace(r,"").replace(a,"")}function c(e){return o.test(e)}function l(e){return/^mailto:/.test(e)}function u(e){return/^tel:/.test(e)}function h(e){if(c(e))return e;if(!e)return"404";const t=e.match(r),n=t?t[0]:"",a=s(e);return i.test(a)?e:a+".html"+n}function d(e,t){const n=e.hash,a=function(e){const t=e&&e.match(r);if(t)return t[0]}(t);if(a&&n!==a)return!1;return s(e.path)===s(t)}function p(e,t,n){if(c(t))return{type:"external",path:t};n&&(t=function(e,t,n){const r=e.charAt(0);if("/"===r)return e;if("?"===r||"#"===r)return t+e;const a=t.split("/");n&&a[a.length-1]||a.pop();const i=e.replace(/^\//,"").split("/");for(let e=0;e<i.length;e++){const t=i[e];".."===t?a.pop():"."!==t&&a.push(t)}""!==a[0]&&a.unshift("");return a.join("/")}(t,n));const r=s(t);for(let t=0;t<e.length;t++)if(s(e[t].regularPath)===r)return Object.assign({},e[t],{type:"page",path:h(e[t].path)});return console.error(`[vuepress] No matching page found for sidebar item "${t}"`),{}}function f(e,t,n,r){const{pages:a,themeConfig:i}=n,o=r&&i.locales&&i.locales[r]||i;if("auto"===(e.frontmatter.sidebar||o.sidebar||i.sidebar))return m(e);const s=o.sidebar||i.sidebar;if(s){const{base:n,config:r}=function(e,t){if(Array.isArray(t))return{base:"/",config:t};for(const r in t)if(0===(n=e,/(\.html|\/)$/.test(n)?n:n+"/").indexOf(encodeURI(r)))return{base:r,config:t[r]};var n;return{}}(t,s);return"auto"===r?m(e):r?r.map(e=>function e(t,n,r,a=1){if("string"==typeof t)return p(n,t,r);if(Array.isArray(t))return Object.assign(p(n,t[0],r),{title:t[1]});{a>3&&console.error("[vuepress] detected a too deep nested sidebar group.");const i=t.children||[];return 0===i.length&&t.path?Object.assign(p(n,t.path,r),{title:t.title}):{type:"group",path:t.path,title:t.title,sidebarDepth:t.sidebarDepth,initialOpenGroupIndex:t.initialOpenGroupIndex,children:i.map(t=>e(t,n,r,a+1)),collapsable:!1!==t.collapsable}}}(e,a,n)):[]}return[]}function m(e){const t=g(e.headers||[]);return[{type:"group",collapsable:!1,title:e.title,path:null,children:t.map(t=>({type:"auto",title:t.title,basePath:e.path,path:e.path+"#"+t.slug,children:t.children||[]}))}]}function g(e){let t;return(e=e.map(e=>Object.assign({},e))).forEach(e=>{2===e.level?t=e:t&&(t.children||(t.children=[])).push(e)}),e.filter(e=>2===e.level)}function y(e){return Object.assign(e,{type:e.items&&e.items.length?"links":"link"})}function v(e){return Object.prototype.toString.call(e).match(/\[object (.*?)\]/)[1].toLowerCase()}function b(e){let t=e.frontmatter.date||e.lastUpdated||new Date,n=new Date(t);return"Invalid Date"==n&&t&&(n=new Date(t.replace(/-/g,"/"))),n.getTime()}function w(e,t){return b(t)-b(e)}},function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,t,n){"use strict";var r=n(268),a=n(281),i=n(52);e.exports={formats:i,parse:a,stringify:r}},function(e,t,n){var r=n(19),a=n(171),i=n(172),o=r?r.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":o&&o in Object(e)?a(e):i(e)}},function(e,t,n){"use strict";var r=n(6),a=n(20),i=n(39);e.exports=r?function(e,t,n){return a.f(e,t,i(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var r=n(8).Symbol;e.exports=r},function(e,t,n){"use strict";var r=n(6),a=n(71),i=n(122),o=n(29),s=n(62),c=TypeError,l=Object.defineProperty,u=Object.getOwnPropertyDescriptor;t.f=r?i?function(e,t,n){if(o(e),t=s(t),o(n),"function"==typeof e&&"prototype"===t&&"value"in n&&"writable"in n&&!n.writable){var r=u(e,t);r&&r.writable&&(e[t]=n.value,n={configurable:"configurable"in n?n.configurable:r.configurable,enumerable:"enumerable"in n?n.enumerable:r.enumerable,writable:!1})}return l(e,t,n)}:l:function(e,t,n){if(o(e),t=s(t),o(n),a)try{return l(e,t,n)}catch(e){}if("get"in n||"set"in n)throw new c("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){"use strict";var r=n(3),a=r({}.toString),i=r("".slice);e.exports=function(e){return i(a(e),8,-1)}},function(e,t,n){var r=n(176),a=n(177),i=n(178),o=n(179),s=n(180);function c(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=a,c.prototype.get=i,c.prototype.has=o,c.prototype.set=s,e.exports=c},function(e,t,n){var r=n(78);e.exports=function(e,t){for(var n=e.length;n--;)if(r(e[n][0],t))return n;return-1}},function(e,t,n){var r=n(11)(Object,"create");e.exports=r},function(e,t,n){var r=n(198);e.exports=function(e,t){var n=e.__data__;return r(t)?n["string"==typeof t?"string":"hash"]:n.map}},function(e,t,n){var r=n(49);e.exports=function(e){if("string"==typeof e||r(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(e,t,n){var r,a;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(a="function"==typeof(r=function(){var e,t,n={version:"0.2.0"},r=n.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function a(e,t,n){return e<t?t:e>n?n:e}function i(e){return 100*(-1+e)}n.configure=function(e){var t,n;for(t in e)void 0!==(n=e[t])&&e.hasOwnProperty(t)&&(r[t]=n);return this},n.status=null,n.set=function(e){var t=n.isStarted();e=a(e,r.minimum,1),n.status=1===e?null:e;var c=n.render(!t),l=c.querySelector(r.barSelector),u=r.speed,h=r.easing;return c.offsetWidth,o((function(t){""===r.positionUsing&&(r.positionUsing=n.getPositioningCSS()),s(l,function(e,t,n){var a;return(a="translate3d"===r.positionUsing?{transform:"translate3d("+i(e)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+i(e)+"%,0)"}:{"margin-left":i(e)+"%"}).transition="all "+t+"ms "+n,a}(e,u,h)),1===e?(s(c,{transition:"none",opacity:1}),c.offsetWidth,setTimeout((function(){s(c,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){n.remove(),t()}),u)}),u)):setTimeout(t,u)})),this},n.isStarted=function(){return"number"==typeof n.status},n.start=function(){n.status||n.set(0);var e=function(){setTimeout((function(){n.status&&(n.trickle(),e())}),r.trickleSpeed)};return r.trickle&&e(),this},n.done=function(e){return e||n.status?n.inc(.3+.5*Math.random()).set(1):this},n.inc=function(e){var t=n.status;return t?("number"!=typeof e&&(e=(1-t)*a(Math.random()*t,.1,.95)),t=a(t+e,0,.994),n.set(t)):n.start()},n.trickle=function(){return n.inc(Math.random()*r.trickleRate)},e=0,t=0,n.promise=function(r){return r&&"resolved"!==r.state()?(0===t&&n.start(),e++,t++,r.always((function(){0==--t?(e=0,n.done()):n.set((e-t)/e)})),this):this},n.render=function(e){if(n.isRendered())return document.getElementById("nprogress");l(document.documentElement,"nprogress-busy");var t=document.createElement("div");t.id="nprogress",t.innerHTML=r.template;var a,o=t.querySelector(r.barSelector),c=e?"-100":i(n.status||0),u=document.querySelector(r.parent);return s(o,{transition:"all 0 linear",transform:"translate3d("+c+"%,0,0)"}),r.showSpinner||(a=t.querySelector(r.spinnerSelector))&&d(a),u!=document.body&&l(u,"nprogress-custom-parent"),u.appendChild(t),t},n.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(r.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&d(e)},n.isRendered=function(){return!!document.getElementById("nprogress")},n.getPositioningCSS=function(){var e=document.body.style,t="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return t+"Perspective"in e?"translate3d":t+"Transform"in e?"translate":"margin"};var o=function(){var e=[];function t(){var n=e.shift();n&&n(t)}return function(n){e.push(n),1==e.length&&t()}}(),s=function(){var e=["Webkit","O","Moz","ms"],t={};function n(n){return n=n.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,t){return t.toUpperCase()})),t[n]||(t[n]=function(t){var n=document.body.style;if(t in n)return t;for(var r,a=e.length,i=t.charAt(0).toUpperCase()+t.slice(1);a--;)if((r=e[a]+i)in n)return r;return t}(n))}function r(e,t,r){t=n(t),e.style[t]=r}return function(e,t){var n,a,i=arguments;if(2==i.length)for(n in t)void 0!==(a=t[n])&&t.hasOwnProperty(n)&&r(e,n,a);else r(e,i[1],i[2])}}();function c(e,t){return("string"==typeof e?e:h(e)).indexOf(" "+t+" ")>=0}function l(e,t){var n=h(e),r=n+t;c(n,t)||(e.className=r.substring(1))}function u(e,t){var n,r=h(e);c(e,t)&&(n=r.replace(" "+t+" "," "),e.className=n.substring(1,n.length-1))}function h(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function d(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return n})?r.call(t,n,t,e):r)||(e.exports=a)},function(e,t,n){"use strict";var r=n(30),a=n(36),i=n(37),o=n(150),s=n(152);r({target:"Array",proto:!0,arity:1,forced:n(4)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(e){return e instanceof TypeError}}()},{push:function(e){var t=a(this),n=i(t),r=arguments.length;s(n+r);for(var c=0;c<r;c++)t[n]=arguments[c],n++;return o(t,n),n}})},function(e,t,n){"use strict";var r=n(9),a=String,i=TypeError;e.exports=function(e){if(r(e))return e;throw new i(a(e)+" is not an object")}},function(e,t,n){"use strict";var r=n(1),a=n(59).f,i=n(18),o=n(118),s=n(41),c=n(72),l=n(146);e.exports=function(e,t){var n,u,h,d,p,f=e.target,m=e.global,g=e.stat;if(n=m?r:g?r[f]||s(f,{}):r[f]&&r[f].prototype)for(u in t){if(d=t[u],h=e.dontCallGetSet?(p=a(n,u))&&p.value:n[u],!l(m?u:f+(g?".":"#")+u,e.forced)&&void 0!==h){if(typeof d==typeof h)continue;c(d,h)}(e.sham||h&&h.sham)&&i(d,"sham",!0),o(n,u,d,e)}}},function(e,t,n){"use strict";var r=n(4);e.exports=!r((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},function(e,t,n){"use strict";var r=n(55),a=n(60);e.exports=function(e){return r(a(e))}},function(e,t,n){"use strict";var r=n(1),a=n(2),i=function(e){return a(e)?e:void 0};e.exports=function(e,t){return arguments.length<2?i(r[e]):r[e]&&r[e][t]}},function(e,t,n){"use strict";var r=n(2),a=n(133),i=TypeError;e.exports=function(e){if(r(e))return e;throw new i(a(e)+" is not a function")}},function(e,t,n){"use strict";var r=n(1),a=n(68),i=n(10),o=n(70),s=n(66),c=n(65),l=r.Symbol,u=a("wks"),h=c?l.for||l:l&&l.withoutSetter||o;e.exports=function(e){return i(u,e)||(u[e]=s&&i(l,e)?l[e]:h("Symbol."+e)),u[e]}},function(e,t,n){"use strict";var r=n(60),a=Object;e.exports=function(e){return a(r(e))}},function(e,t,n){"use strict";var r=n(144);e.exports=function(e){return r(e.length)}},function(e,t,n){"use strict";var r=n(31),a=Function.prototype.call;e.exports=r?a.bind(a):function(){return a.apply(a,arguments)}},function(e,t,n){"use strict";e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,n){"use strict";var r=n(1),a=n(41),i=r["__core-js_shared__"]||a("__core-js_shared__",{});e.exports=i},function(e,t,n){"use strict";var r=n(1),a=Object.defineProperty;e.exports=function(e,t){try{a(r,e,{value:t,configurable:!0,writable:!0})}catch(n){r[e]=t}return t}},function(e,t,n){var r=n(170),a=n(15),i=Object.prototype,o=i.hasOwnProperty,s=i.propertyIsEnumerable,c=r(function(){return arguments}())?r:function(e){return a(e)&&o.call(e,"callee")&&!s.call(e,"callee")};e.exports=c},function(e,t,n){var r=n(11)(n(8),"Map");e.exports=r},function(e,t){e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},function(e,t,n){var r=n(190),a=n(197),i=n(199),o=n(200),s=n(201);function c(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=a,c.prototype.get=i,c.prototype.has=o,c.prototype.set=s,e.exports=c},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}},function(e,t){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,t,n){var r=n(7),a=n(49),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,o=/^\w*$/;e.exports=function(e,t){if(r(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!a(e))||(o.test(e)||!i.test(e)||null!=t&&e in Object(t))}},function(e,t,n){var r=n(17),a=n(15);e.exports=function(e){return"symbol"==typeof e||a(e)&&"[object Symbol]"==r(e)}},function(e,t){e.exports=function(e){return e}},function(e,t,n){"use strict";var r=n(273);e.exports=Function.prototype.bind||r},function(e,t,n){"use strict";var r=String.prototype.replace,a=/%20/g,i="RFC1738",o="RFC3986";e.exports={default:o,formatters:{RFC1738:function(e){return r.call(e,a,"+")},RFC3986:function(e){return String(e)}},RFC1738:i,RFC3986:o}},function(e,t,n){var r=n(288);e.exports=function(e){return r(e,{weekStartsOn:1})}},function(e,t,n){"use strict";var r=n(0),a=n(300),i=n(104),o={"Content-Type":"application/x-www-form-urlencoded"};function s(e,t){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var c,l={transitional:{silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(c=n(105)),c),transformRequest:[function(e,t){return a(t,"Accept"),a(t,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(s(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)||t&&"application/json"===t["Content-Type"]?(s(t,"application/json"),function(e,t,n){if(r.isString(e))try{return(t||JSON.parse)(e),r.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(n||JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){var t=this.transitional,n=t&&t.silentJSONParsing,a=t&&t.forcedJSONParsing,o=!n&&"json"===this.responseType;if(o||a&&r.isString(e)&&e.length)try{return JSON.parse(e)}catch(e){if(o){if("SyntaxError"===e.name)throw i(e,this,"E_JSON_PARSE");throw e}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300}};l.headers={common:{Accept:"application/json, text/plain, */*"}},r.forEach(["delete","get","head"],(function(e){l.headers[e]={}})),r.forEach(["post","put","patch"],(function(e){l.headers[e]=r.merge(o)})),e.exports=l},function(e,t,n){"use strict";var r=n(3),a=n(4),i=n(21),o=Object,s=r("".split);e.exports=a((function(){return!o("z").propertyIsEnumerable(0)}))?function(e){return"String"===i(e)?s(e,""):o(e)}:o},function(e,t,n){"use strict";e.exports={}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t){var n=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,i=/^0o[0-7]+$/i,o=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,c="object"==typeof self&&self&&self.Object===Object&&self,l=s||c||Function("return this")(),u=Object.prototype.toString,h=Math.max,d=Math.min,p=function(){return l.Date.now()};function f(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function m(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==u.call(e)}(e))return NaN;if(f(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=f(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(n,"");var s=a.test(e);return s||i.test(e)?o(e.slice(2),s?2:8):r.test(e)?NaN:+e}e.exports=function(e,t,n){var r,a,i,o,s,c,l=0,u=!1,g=!1,y=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function v(t){var n=r,i=a;return r=a=void 0,l=t,o=e.apply(i,n)}function b(e){return l=e,s=setTimeout(_,t),u?v(e):o}function w(e){var n=e-c;return void 0===c||n>=t||n<0||g&&e-l>=i}function _(){var e=p();if(w(e))return x(e);s=setTimeout(_,function(e){var n=t-(e-c);return g?d(n,i-(e-l)):n}(e))}function x(e){return s=void 0,y&&r?v(e):(r=a=void 0,o)}function k(){var e=p(),n=w(e);if(r=arguments,a=this,c=e,n){if(void 0===s)return b(c);if(g)return s=setTimeout(_,t),v(c)}return void 0===s&&(s=setTimeout(_,t)),o}return t=m(t)||0,f(n)&&(u=!!n.leading,i=(g="maxWait"in n)?h(m(n.maxWait)||0,t):i,y="trailing"in n?!!n.trailing:y),k.cancel=function(){void 0!==s&&clearTimeout(s),l=0,r=c=a=s=void 0},k.flush=function(){return void 0===s?o:x(p())},k}},function(e,t,n){"use strict";var r=n(6),a=n(38),i=n(129),o=n(39),s=n(32),c=n(62),l=n(10),u=n(71),h=Object.getOwnPropertyDescriptor;t.f=r?h:function(e,t){if(e=s(e),t=c(t),u)try{return h(e,t)}catch(e){}if(l(e,t))return o(!a(i.f,e,t),e[t])}},function(e,t,n){"use strict";var r=n(61),a=TypeError;e.exports=function(e){if(r(e))throw new a("Can't call method on "+e);return e}},function(e,t,n){"use strict";e.exports=function(e){return null==e}},function(e,t,n){"use strict";var r=n(130),a=n(63);e.exports=function(e){var t=r(e,"string");return a(t)?t:t+""}},function(e,t,n){"use strict";var r=n(33),a=n(2),i=n(64),o=n(65),s=Object;e.exports=o?function(e){return"symbol"==typeof e}:function(e){var t=r("Symbol");return a(t)&&i(t.prototype,s(e))}},function(e,t,n){"use strict";var r=n(3);e.exports=r({}.isPrototypeOf)},function(e,t,n){"use strict";var r=n(66);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,t,n){"use strict";var r=n(67),a=n(4),i=n(1).String;e.exports=!!Object.getOwnPropertySymbols&&!a((function(){var e=Symbol("symbol detection");return!i(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},function(e,t,n){"use strict";var r,a,i=n(1),o=n(131),s=i.process,c=i.Deno,l=s&&s.versions||c&&c.version,u=l&&l.v8;u&&(a=(r=u.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!a&&o&&(!(r=o.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=o.match(/Chrome\/(\d+)/))&&(a=+r[1]),e.exports=a},function(e,t,n){"use strict";var r=n(69),a=n(40);(e.exports=function(e,t){return a[e]||(a[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.35.1",mode:r?"pure":"global",copyright:"© 2014-2024 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.35.1/LICENSE",source:"https://github.com/zloirock/core-js"})},function(e,t,n){"use strict";e.exports=!1},function(e,t,n){"use strict";var r=n(3),a=0,i=Math.random(),o=r(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+o(++a+i,36)}},function(e,t,n){"use strict";var r=n(6),a=n(4),i=n(121);e.exports=!r&&!a((function(){return 7!==Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(e,t,n){"use strict";var r=n(10),a=n(139),i=n(59),o=n(20);e.exports=function(e,t,n){for(var s=a(t),c=o.f,l=i.f,u=0;u<s.length;u++){var h=s[u];r(e,h)||n&&r(n,h)||c(e,h,l(t,h))}}},function(e,t,n){"use strict";var r=n(143);e.exports=function(e){var t=+e;return t!=t||0===t?0:r(t)}},function(e,t,n){"use strict";var r=n(156),a=n(29),i=n(157);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=r(Object.prototype,"__proto__","set"))(n,[]),t=n instanceof Array}catch(e){}return function(n,r){return a(n),i(r),t?e(n,r):n.__proto__=r,n}}():void 0)},function(e,t){e.exports=function(e,t){for(var n=-1,r=t.length,a=e.length;++n<r;)e[a+n]=t[n];return e}},function(e,t){var n="object"==typeof global&&global&&global.Object===Object&&global;e.exports=n},function(e,t,n){var r=n(22),a=n(181),i=n(182),o=n(183),s=n(184),c=n(185);function l(e){var t=this.__data__=new r(e);this.size=t.size}l.prototype.clear=a,l.prototype.delete=i,l.prototype.get=o,l.prototype.has=s,l.prototype.set=c,e.exports=l},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,n){var r=n(17),a=n(44);e.exports=function(e){if(!a(e))return!1;var t=r(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}},function(e,t){var n=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return n.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,t,n){var r=n(202),a=n(15);e.exports=function e(t,n,i,o,s){return t===n||(null==t||null==n||!a(t)&&!a(n)?t!=t&&n!=n:r(t,n,i,o,e,s))}},function(e,t,n){var r=n(83),a=n(205),i=n(84);e.exports=function(e,t,n,o,s,c){var l=1&n,u=e.length,h=t.length;if(u!=h&&!(l&&h>u))return!1;var d=c.get(e),p=c.get(t);if(d&&p)return d==t&&p==e;var f=-1,m=!0,g=2&n?new r:void 0;for(c.set(e,t),c.set(t,e);++f<u;){var y=e[f],v=t[f];if(o)var b=l?o(v,y,f,t,e,c):o(y,v,f,e,t,c);if(void 0!==b){if(b)continue;m=!1;break}if(g){if(!a(t,(function(e,t){if(!i(g,t)&&(y===e||s(y,e,n,o,c)))return g.push(t)}))){m=!1;break}}else if(y!==v&&!s(y,v,n,o,c)){m=!1;break}}return c.delete(e),c.delete(t),m}},function(e,t,n){var r=n(45),a=n(203),i=n(204);function o(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new r;++t<n;)this.add(e[t])}o.prototype.add=o.prototype.push=a,o.prototype.has=i,e.exports=o},function(e,t){e.exports=function(e,t){return e.has(t)}},function(e,t,n){var r=n(215),a=n(221),i=n(89);e.exports=function(e){return i(e)?r(e):a(e)}},function(e,t,n){(function(e){var r=n(8),a=n(217),i=t&&!t.nodeType&&t,o=i&&"object"==typeof e&&e&&!e.nodeType&&e,s=o&&o.exports===i?r.Buffer:void 0,c=(s?s.isBuffer:void 0)||a;e.exports=c}).call(this,n(57)(e))},function(e,t){var n=/^(?:0|[1-9]\d*)$/;e.exports=function(e,t){var r=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==r||"symbol"!=r&&n.test(e))&&e>-1&&e%1==0&&e<t}},function(e,t,n){var r=n(218),a=n(219),i=n(220),o=i&&i.isTypedArray,s=o?a(o):r;e.exports=s},function(e,t,n){var r=n(79),a=n(47);e.exports=function(e){return null!=e&&a(e.length)&&!r(e)}},function(e,t,n){var r=n(11)(n(8),"Set");e.exports=r},function(e,t,n){var r=n(44);e.exports=function(e){return e==e&&!r(e)}},function(e,t){e.exports=function(e,t){return function(n){return null!=n&&(n[e]===t&&(void 0!==t||e in Object(n)))}}},function(e,t,n){var r=n(94),a=n(26);e.exports=function(e,t){for(var n=0,i=(t=r(t,e)).length;null!=e&&n<i;)e=e[a(t[n++])];return n&&n==i?e:void 0}},function(e,t,n){var r=n(7),a=n(48),i=n(232),o=n(235);e.exports=function(e,t){return r(e)?e:a(e,t)?[e]:i(o(e))}},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";var r=n(12)("%Object.defineProperty%",!0),a=function(){if(r)try{return r({},"a",{value:1}),!0}catch(e){return!1}return!1};a.hasArrayLengthDefineBug=function(){if(!a())return null;try{return 1!==r([],"length",{value:1}).length}catch(e){return!0}},e.exports=a},function(e,t,n){"use strict";var r=n(12)("%Object.getOwnPropertyDescriptor%",!0);if(r)try{r([],"length")}catch(e){r=null}e.exports=r},function(e,t,n){"use strict";var r=n(52),a=Object.prototype.hasOwnProperty,i=Array.isArray,o=function(){for(var e=[],t=0;t<256;++t)e.push("%"+((t<16?"0":"")+t.toString(16)).toUpperCase());return e}(),s=function(e,t){for(var n=t&&t.plainObjects?Object.create(null):{},r=0;r<e.length;++r)void 0!==e[r]&&(n[r]=e[r]);return n};e.exports={arrayToObject:s,assign:function(e,t){return Object.keys(t).reduce((function(e,n){return e[n]=t[n],e}),e)},combine:function(e,t){return[].concat(e,t)},compact:function(e){for(var t=[{obj:{o:e},prop:"o"}],n=[],r=0;r<t.length;++r)for(var a=t[r],o=a.obj[a.prop],s=Object.keys(o),c=0;c<s.length;++c){var l=s[c],u=o[l];"object"==typeof u&&null!==u&&-1===n.indexOf(u)&&(t.push({obj:o,prop:l}),n.push(u))}return function(e){for(;e.length>1;){var t=e.pop(),n=t.obj[t.prop];if(i(n)){for(var r=[],a=0;a<n.length;++a)void 0!==n[a]&&r.push(n[a]);t.obj[t.prop]=r}}}(t),e},decode:function(e,t,n){var r=e.replace(/\+/g," ");if("iso-8859-1"===n)return r.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(r)}catch(e){return r}},encode:function(e,t,n,a,i){if(0===e.length)return e;var s=e;if("symbol"==typeof e?s=Symbol.prototype.toString.call(e):"string"!=typeof e&&(s=String(e)),"iso-8859-1"===n)return escape(s).replace(/%u[0-9a-f]{4}/gi,(function(e){return"%26%23"+parseInt(e.slice(2),16)+"%3B"}));for(var c="",l=0;l<s.length;++l){var u=s.charCodeAt(l);45===u||46===u||95===u||126===u||u>=48&&u<=57||u>=65&&u<=90||u>=97&&u<=122||i===r.RFC1738&&(40===u||41===u)?c+=s.charAt(l):u<128?c+=o[u]:u<2048?c+=o[192|u>>6]+o[128|63&u]:u<55296||u>=57344?c+=o[224|u>>12]+o[128|u>>6&63]+o[128|63&u]:(l+=1,u=65536+((1023&u)<<10|1023&s.charCodeAt(l)),c+=o[240|u>>18]+o[128|u>>12&63]+o[128|u>>6&63]+o[128|63&u])}return c},isBuffer:function(e){return!(!e||"object"!=typeof e)&&!!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e))},isRegExp:function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},maybeMap:function(e,t){if(i(e)){for(var n=[],r=0;r<e.length;r+=1)n.push(t(e[r]));return n}return t(e)},merge:function e(t,n,r){if(!n)return t;if("object"!=typeof n){if(i(t))t.push(n);else{if(!t||"object"!=typeof t)return[t,n];(r&&(r.plainObjects||r.allowPrototypes)||!a.call(Object.prototype,n))&&(t[n]=!0)}return t}if(!t||"object"!=typeof t)return[t].concat(n);var o=t;return i(t)&&!i(n)&&(o=s(t,r)),i(t)&&i(n)?(n.forEach((function(n,i){if(a.call(t,i)){var o=t[i];o&&"object"==typeof o&&n&&"object"==typeof n?t[i]=e(o,n,r):t.push(n)}else t[i]=n})),t):Object.keys(n).reduce((function(t,i){var o=n[i];return a.call(t,i)?t[i]=e(t[i],o,r):t[i]=o,t}),o)}}},function(e,t){e.exports=function(e){return e instanceof Date}},function(e,t,n){var r=n(13),a=n(53);e.exports=function(e){var t=r(e),n=t.getFullYear(),i=new Date(0);i.setFullYear(n+1,0,4),i.setHours(0,0,0,0);var o=a(i),s=new Date(0);s.setFullYear(n,0,4),s.setHours(0,0,0,0);var c=a(s);return t.getTime()>=o.getTime()?n+1:t.getTime()>=c.getTime()?n:n-1}},function(e,t,n){"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},function(e,t,n){"use strict";var r=n(0);function a(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,n){if(!t)return e;var i;if(n)i=n(t);else if(r.isURLSearchParams(t))i=t.toString();else{var o=[];r.forEach(t,(function(e,t){null!=e&&(r.isArray(e)?t+="[]":e=[e],r.forEach(e,(function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),o.push(a(t)+"="+a(e))})))})),i=o.join("&")}if(i){var s=e.indexOf("#");-1!==s&&(e=e.slice(0,s)),e+=(-1===e.indexOf("?")?"?":"&")+i}return e}},function(e,t,n){"use strict";e.exports=function(e,t,n,r,a){return e.config=t,n&&(e.code=n),e.request=r,e.response=a,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},function(e,t,n){"use strict";var r=n(0),a=n(301),i=n(302),o=n(103),s=n(303),c=n(306),l=n(307),u=n(106);e.exports=function(e){return new Promise((function(t,n){var h=e.data,d=e.headers,p=e.responseType;r.isFormData(h)&&delete d["Content-Type"];var f=new XMLHttpRequest;if(e.auth){var m=e.auth.username||"",g=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";d.Authorization="Basic "+btoa(m+":"+g)}var y=s(e.baseURL,e.url);function v(){if(f){var r="getAllResponseHeaders"in f?c(f.getAllResponseHeaders()):null,i={data:p&&"text"!==p&&"json"!==p?f.response:f.responseText,status:f.status,statusText:f.statusText,headers:r,config:e,request:f};a(t,n,i),f=null}}if(f.open(e.method.toUpperCase(),o(y,e.params,e.paramsSerializer),!0),f.timeout=e.timeout,"onloadend"in f?f.onloadend=v:f.onreadystatechange=function(){f&&4===f.readyState&&(0!==f.status||f.responseURL&&0===f.responseURL.indexOf("file:"))&&setTimeout(v)},f.onabort=function(){f&&(n(u("Request aborted",e,"ECONNABORTED",f)),f=null)},f.onerror=function(){n(u("Network Error",e,null,f)),f=null},f.ontimeout=function(){var t="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),n(u(t,e,e.transitional&&e.transitional.clarifyTimeoutError?"ETIMEDOUT":"ECONNABORTED",f)),f=null},r.isStandardBrowserEnv()){var b=(e.withCredentials||l(y))&&e.xsrfCookieName?i.read(e.xsrfCookieName):void 0;b&&(d[e.xsrfHeaderName]=b)}"setRequestHeader"in f&&r.forEach(d,(function(e,t){void 0===h&&"content-type"===t.toLowerCase()?delete d[t]:f.setRequestHeader(t,e)})),r.isUndefined(e.withCredentials)||(f.withCredentials=!!e.withCredentials),p&&"json"!==p&&(f.responseType=e.responseType),"function"==typeof e.onDownloadProgress&&f.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&f.upload&&f.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){f&&(f.abort(),n(e),f=null)})),h||(h=null),f.send(h)}))}},function(e,t,n){"use strict";var r=n(104);e.exports=function(e,t,n,a,i){var o=new Error(e);return r(o,t,n,a,i)}},function(e,t,n){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,t,n){"use strict";var r=n(0);e.exports=function(e,t){t=t||{};var n={},a=["url","method","data"],i=["headers","auth","proxy","params"],o=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],s=["validateStatus"];function c(e,t){return r.isPlainObject(e)&&r.isPlainObject(t)?r.merge(e,t):r.isPlainObject(t)?r.merge({},t):r.isArray(t)?t.slice():t}function l(a){r.isUndefined(t[a])?r.isUndefined(e[a])||(n[a]=c(void 0,e[a])):n[a]=c(e[a],t[a])}r.forEach(a,(function(e){r.isUndefined(t[e])||(n[e]=c(void 0,t[e]))})),r.forEach(i,l),r.forEach(o,(function(a){r.isUndefined(t[a])?r.isUndefined(e[a])||(n[a]=c(void 0,e[a])):n[a]=c(void 0,t[a])})),r.forEach(s,(function(r){r in t?n[r]=c(e[r],t[r]):r in e&&(n[r]=c(void 0,e[r]))}));var u=a.concat(i).concat(o).concat(s),h=Object.keys(e).concat(Object.keys(t)).filter((function(e){return-1===u.indexOf(e)}));return r.forEach(h,l),n}},function(e,t,n){"use strict";function r(e){this.message=e}r.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},r.prototype.__CANCEL__=!0,e.exports=r},function(e,t,n){},function(e,t,n){},function(e,t,n){var r=n(168),a=n(173),i=n(244),o=n(252),s=n(261),c=n(126),l=i((function(e){var t=c(e);return s(t)&&(t=void 0),o(r(e,1,s,!0),a(t,2))}));e.exports=l},function(e,t,n){var r=n(282),a=n(287),i=n(101),o=n(13),s=n(290),c=n(291);var l={M:function(e){return e.getMonth()+1},MM:function(e){return d(e.getMonth()+1,2)},Q:function(e){return Math.ceil((e.getMonth()+1)/3)},D:function(e){return e.getDate()},DD:function(e){return d(e.getDate(),2)},DDD:function(e){return r(e)},DDDD:function(e){return d(r(e),3)},d:function(e){return e.getDay()},E:function(e){return e.getDay()||7},W:function(e){return a(e)},WW:function(e){return d(a(e),2)},YY:function(e){return d(e.getFullYear(),4).substr(2)},YYYY:function(e){return d(e.getFullYear(),4)},GG:function(e){return String(i(e)).substr(2)},GGGG:function(e){return i(e)},H:function(e){return e.getHours()},HH:function(e){return d(e.getHours(),2)},h:function(e){var t=e.getHours();return 0===t?12:t>12?t%12:t},hh:function(e){return d(l.h(e),2)},m:function(e){return e.getMinutes()},mm:function(e){return d(e.getMinutes(),2)},s:function(e){return e.getSeconds()},ss:function(e){return d(e.getSeconds(),2)},S:function(e){return Math.floor(e.getMilliseconds()/100)},SS:function(e){return d(Math.floor(e.getMilliseconds()/10),2)},SSS:function(e){return d(e.getMilliseconds(),3)},Z:function(e){return h(e.getTimezoneOffset(),":")},ZZ:function(e){return h(e.getTimezoneOffset())},X:function(e){return Math.floor(e.getTime()/1e3)},x:function(e){return e.getTime()}};function u(e){return e.match(/\[[\s\S]/)?e.replace(/^\[|]$/g,""):e.replace(/\\/g,"")}function h(e,t){t=t||"";var n=e>0?"-":"+",r=Math.abs(e),a=r%60;return n+d(Math.floor(r/60),2)+t+d(a,2)}function d(e,t){for(var n=Math.abs(e).toString();n.length<t;)n="0"+n;return n}e.exports=function(e,t,n){var r=t?String(t):"YYYY-MM-DDTHH:mm:ss.SSSZ",a=(n||{}).locale,i=c.format.formatters,h=c.format.formattingTokensRegExp;a&&a.format&&a.format.formatters&&(i=a.format.formatters,a.format.formattingTokensRegExp&&(h=a.format.formattingTokensRegExp));var d=o(e);return s(d)?function(e,t,n){var r,a,i=e.match(n),o=i.length;for(r=0;r<o;r++)a=t[i[r]]||l[i[r]],i[r]=a||u(i[r]);return function(e){for(var t="",n=0;n<o;n++)i[n]instanceof Function?t+=i[n](e,l):t+=i[n];return t}}(r,i,h)(d):"Invalid Date"}},function(e,t,n){e.exports=n(295)},function(e,t,n){"use strict";
/**
 * @file Embedded JavaScript templating engine. {@link http://ejs.co}
 * @author Matthew Eernisse <mde@fleegix.org>
 * @author Tiancheng "Timothy" Gu <timothygu99@gmail.com>
 * @project EJS
 * @license {@link http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0}
 */var r=n(313),a=n(314),i=n(315),o=!1,s=n(316).version,c=["delimiter","scope","context","debug","compileDebug","client","_with","rmWhitespace","strict","filename","async"],l=c.concat("cache"),u=/^\uFEFF/,h=/^[a-zA-Z_$][0-9a-zA-Z_$]*$/;function d(e,n){var a;if(n.some((function(n){return a=t.resolveInclude(e,n,!0),r.existsSync(a)})))return a}function p(e,n){var r,a=e.filename,i=arguments.length>1;if(e.cache){if(!a)throw new Error("cache option requires a filename");if(r=t.cache.get(a))return r;i||(n=m(a).toString().replace(u,""))}else if(!i){if(!a)throw new Error("Internal EJS error: no file name or template provided");n=m(a).toString().replace(u,"")}return r=t.compile(n,e),e.cache&&t.cache.set(a,r),r}function f(e,n,r){var a;if(!r){if("function"==typeof t.promiseImpl)return new t.promiseImpl((function(t,r){try{t(a=p(e)(n))}catch(e){r(e)}}));throw new Error("Please provide a callback function")}try{a=p(e)(n)}catch(e){return r(e)}r(null,a)}function m(e){return t.fileLoader(e)}function g(e,n){var a=i.shallowCopy(i.createNullProtoObjWherePossible(),n);if(a.filename=function(e,n){var a,i,o=n.views,s=/^[A-Za-z]+:\\|^\//.exec(e);if(s&&s.length)e=e.replace(/^\/*/,""),a=Array.isArray(n.root)?d(e,n.root):t.resolveInclude(e,n.root||"/",!0);else if(n.filename&&(i=t.resolveInclude(e,n.filename),r.existsSync(i)&&(a=i)),!a&&Array.isArray(o)&&(a=d(e,o)),!a&&"function"!=typeof n.includer)throw new Error('Could not find the include file "'+n.escapeFunction(e)+'"');return a}(e,a),"function"==typeof n.includer){var o=n.includer(e,a.filename);if(o&&(o.filename&&(a.filename=o.filename),o.template))return p(a,o.template)}return p(a)}function y(e,t,n,r,a){var i=t.split("\n"),o=Math.max(r-3,0),s=Math.min(i.length,r+3),c=a(n),l=i.slice(o,s).map((function(e,t){var n=t+o+1;return(n==r?" >> ":"    ")+n+"| "+e})).join("\n");throw e.path=c,e.message=(c||"ejs")+":"+r+"\n"+l+"\n\n"+e.message,e}function v(e){return e.replace(/;(\s*$)/,"$1")}function b(e,n){n=n||i.createNullProtoObjWherePossible();var r=i.createNullProtoObjWherePossible();this.templateText=e,this.mode=null,this.truncate=!1,this.currentLine=1,this.source="",r.client=n.client||!1,r.escapeFunction=n.escape||n.escapeFunction||i.escapeXML,r.compileDebug=!1!==n.compileDebug,r.debug=!!n.debug,r.filename=n.filename,r.openDelimiter=n.openDelimiter||t.openDelimiter||"<",r.closeDelimiter=n.closeDelimiter||t.closeDelimiter||">",r.delimiter=n.delimiter||t.delimiter||"%",r.strict=n.strict||!1,r.context=n.context,r.cache=n.cache||!1,r.rmWhitespace=n.rmWhitespace,r.root=n.root,r.includer=n.includer,r.outputFunctionName=n.outputFunctionName,r.localsName=n.localsName||t.localsName||"locals",r.views=n.views,r.async=n.async,r.destructuredLocals=n.destructuredLocals,r.legacyInclude=void 0===n.legacyInclude||!!n.legacyInclude,r.strict?r._with=!1:r._with=void 0===n._with||n._with,this.opts=r,this.regex=this.createRegex()}t.cache=i.cache,t.fileLoader=r.readFileSync,t.localsName="locals",t.promiseImpl=new Function("return this;")().Promise,t.resolveInclude=function(e,t,n){var r=a.dirname,i=a.extname,o=(0,a.resolve)(n?t:r(t),e);return i(e)||(o+=".ejs"),o},t.compile=function(e,t){return t&&t.scope&&(o||(console.warn("`scope` option is deprecated and will be removed in EJS 3"),o=!0),t.context||(t.context=t.scope),delete t.scope),new b(e,t).compile()},t.render=function(e,t,n){var r=t||i.createNullProtoObjWherePossible(),a=n||i.createNullProtoObjWherePossible();return 2==arguments.length&&i.shallowCopyFromList(a,r,c),p(a,e)(r)},t.renderFile=function(){var e,t,n,r=Array.prototype.slice.call(arguments),a=r.shift(),o={filename:a};return"function"==typeof arguments[arguments.length-1]&&(e=r.pop()),r.length?(t=r.shift(),r.length?i.shallowCopy(o,r.pop()):(t.settings&&(t.settings.views&&(o.views=t.settings.views),t.settings["view cache"]&&(o.cache=!0),(n=t.settings["view options"])&&i.shallowCopy(o,n)),i.shallowCopyFromList(o,t,l)),o.filename=a):t=i.createNullProtoObjWherePossible(),f(o,t,e)},t.Template=b,t.clearCache=function(){t.cache.reset()},b.modes={EVAL:"eval",ESCAPED:"escaped",RAW:"raw",COMMENT:"comment",LITERAL:"literal"},b.prototype={createRegex:function(){var e="(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)",t=i.escapeRegExpChars(this.opts.delimiter),n=i.escapeRegExpChars(this.opts.openDelimiter),r=i.escapeRegExpChars(this.opts.closeDelimiter);return e=e.replace(/%/g,t).replace(/</g,n).replace(/>/g,r),new RegExp(e)},compile:function(){var e,t,n,r=this.opts,o="",s="",c=r.escapeFunction,l=r.filename?JSON.stringify(r.filename):"undefined";if(!this.source){if(this.generateSource(),o+='  var __output = "";\n  function __append(s) { if (s !== undefined && s !== null) __output += s }\n',r.outputFunctionName){if(!h.test(r.outputFunctionName))throw new Error("outputFunctionName is not a valid JS identifier.");o+="  var "+r.outputFunctionName+" = __append;\n"}if(r.localsName&&!h.test(r.localsName))throw new Error("localsName is not a valid JS identifier.");if(r.destructuredLocals&&r.destructuredLocals.length){for(var u="  var __locals = ("+r.localsName+" || {}),\n",d=0;d<r.destructuredLocals.length;d++){var p=r.destructuredLocals[d];if(!h.test(p))throw new Error("destructuredLocals["+d+"] is not a valid JS identifier.");d>0&&(u+=",\n  "),u+=p+" = __locals."+p}o+=u+";\n"}!1!==r._with&&(o+="  with ("+r.localsName+" || {}) {\n",s+="  }\n"),s+="  return __output;\n",this.source=o+this.source+s}e=r.compileDebug?"var __line = 1\n  , __lines = "+JSON.stringify(this.templateText)+"\n  , __filename = "+l+";\ntry {\n"+this.source+"} catch (e) {\n  rethrow(e, __lines, __filename, __line, escapeFn);\n}\n":this.source,r.client&&(e="escapeFn = escapeFn || "+c.toString()+";\n"+e,r.compileDebug&&(e="rethrow = rethrow || "+y.toString()+";\n"+e)),r.strict&&(e='"use strict";\n'+e),r.debug&&console.log(e),r.compileDebug&&r.filename&&(e=e+"\n//# sourceURL="+l+"\n");try{if(r.async)try{n=new Function("return (async function(){}).constructor;")()}catch(e){throw e instanceof SyntaxError?new Error("This environment does not support async/await"):e}else n=Function;t=new n(r.localsName+", escapeFn, include, rethrow",e)}catch(e){throw e instanceof SyntaxError&&(r.filename&&(e.message+=" in "+r.filename),e.message+=" while compiling ejs\n\n",e.message+="If the above error is not helpful, you may want to try EJS-Lint:\n",e.message+="https://github.com/RyanZim/EJS-Lint",r.async||(e.message+="\n",e.message+="Or, if you meant to create an async function, pass `async: true` as an option.")),e}var f=r.client?t:function(e){return t.apply(r.context,[e||i.createNullProtoObjWherePossible(),c,function(t,n){var a=i.shallowCopy(i.createNullProtoObjWherePossible(),e);return n&&(a=i.shallowCopy(a,n)),g(t,r)(a)},y])};if(r.filename&&"function"==typeof Object.defineProperty){var m=r.filename,v=a.basename(m,a.extname(m));try{Object.defineProperty(f,"name",{value:v,writable:!1,enumerable:!1,configurable:!0})}catch(e){}}return f},generateSource:function(){this.opts.rmWhitespace&&(this.templateText=this.templateText.replace(/[\r\n]+/g,"\n").replace(/^\s+|\s+$/gm,"")),this.templateText=this.templateText.replace(/[ \t]*<%_/gm,"<%_").replace(/_%>[ \t]*/gm,"_%>");var e=this,t=this.parseTemplateText(),n=this.opts.delimiter,r=this.opts.openDelimiter,a=this.opts.closeDelimiter;t&&t.length&&t.forEach((function(i,o){var s;if(0===i.indexOf(r+n)&&0!==i.indexOf(r+n+n)&&(s=t[o+2])!=n+a&&s!="-"+n+a&&s!="_"+n+a)throw new Error('Could not find matching close tag for "'+i+'".');e.scanLine(i)}))},parseTemplateText:function(){for(var e,t=this.templateText,n=this.regex,r=n.exec(t),a=[];r;)0!==(e=r.index)&&(a.push(t.substring(0,e)),t=t.slice(e)),a.push(r[0]),t=t.slice(r[0].length),r=n.exec(t);return t&&a.push(t),a},_addOutput:function(e){if(this.truncate&&(e=e.replace(/^(?:\r\n|\r|\n)/,""),this.truncate=!1),!e)return e;e=(e=(e=(e=e.replace(/\\/g,"\\\\")).replace(/\n/g,"\\n")).replace(/\r/g,"\\r")).replace(/"/g,'\\"'),this.source+='    ; __append("'+e+'")\n'},scanLine:function(e){var t,n=this.opts.delimiter,r=this.opts.openDelimiter,a=this.opts.closeDelimiter;switch(t=e.split("\n").length-1,e){case r+n:case r+n+"_":this.mode=b.modes.EVAL;break;case r+n+"=":this.mode=b.modes.ESCAPED;break;case r+n+"-":this.mode=b.modes.RAW;break;case r+n+"#":this.mode=b.modes.COMMENT;break;case r+n+n:this.mode=b.modes.LITERAL,this.source+='    ; __append("'+e.replace(r+n+n,r+n)+'")\n';break;case n+n+a:this.mode=b.modes.LITERAL,this.source+='    ; __append("'+e.replace(n+n+a,n+a)+'")\n';break;case n+a:case"-"+n+a:case"_"+n+a:this.mode==b.modes.LITERAL&&this._addOutput(e),this.mode=null,this.truncate=0===e.indexOf("-")||0===e.indexOf("_");break;default:if(this.mode){switch(this.mode){case b.modes.EVAL:case b.modes.ESCAPED:case b.modes.RAW:e.lastIndexOf("//")>e.lastIndexOf("\n")&&(e+="\n")}switch(this.mode){case b.modes.EVAL:this.source+="    ; "+e+"\n";break;case b.modes.ESCAPED:this.source+="    ; __append(escapeFn("+v(e)+"))\n";break;case b.modes.RAW:this.source+="    ; __append("+v(e)+")\n";break;case b.modes.COMMENT:break;case b.modes.LITERAL:this._addOutput(e)}}else this._addOutput(e)}this.opts.compileDebug&&t&&(this.currentLine+=t,this.source+="    ; __line = "+this.currentLine+"\n")}},t.escapeXML=i.escapeXML,t.__express=t.renderFile,t.VERSION=s,t.name="ejs","undefined"!=typeof window&&(window.ejs=t)},function(e,t,n){"use strict";n.r(t);var r={name:"CodeBlock",props:{title:{type:String,required:!0},active:{type:Boolean,default:!1}}},a=(n(264),n(5)),i=Object(a.a)(r,(function(){return(0,this._self._c)("div",{staticClass:"theme-code-block",class:{"theme-code-block__active":this.active}},[this._t("default")],2)}),[],!1,null,"4f1e9d0c",null);t.default=i.exports},function(e,t,n){"use strict";n.r(t);var r={name:"CodeGroup",data:()=>({codeTabs:[],activeCodeTabIndex:-1}),watch:{activeCodeTabIndex(e){this.codeTabs.forEach(e=>{e.elm.classList.remove("theme-code-block__active")}),this.codeTabs[e].elm.classList.add("theme-code-block__active")}},mounted(){this.codeTabs=(this.$slots.default||[]).filter(e=>Boolean(e.componentOptions)).map((e,t)=>(""===e.componentOptions.propsData.active&&(this.activeCodeTabIndex=t),{title:e.componentOptions.propsData.title,elm:e.elm})),-1===this.activeCodeTabIndex&&this.codeTabs.length>0&&(this.activeCodeTabIndex=0)},methods:{changeCodeTab(e){this.activeCodeTabIndex=e}}},a=(n(265),n(5)),i=Object(a.a)(r,(function(){var e=this,t=e._self._c;return t("div",{staticClass:"theme-code-group"},[t("div",{staticClass:"theme-code-group__nav"},[t("ul",{staticClass:"theme-code-group__ul"},e._l(e.codeTabs,(function(n,r){return t("li",{key:n.title,staticClass:"theme-code-group__li"},[t("button",{staticClass:"theme-code-group__nav-tab",class:{"theme-code-group__nav-tab-active":r===e.activeCodeTabIndex},on:{click:function(t){return e.changeCodeTab(r)}}},[e._v("\n            "+e._s(n.title)+"\n          ")])])})),0)]),e._v(" "),e._t("default"),e._v(" "),e.codeTabs.length<1?t("pre",{staticClass:"pre-blank"},[e._v("// Make sure to add code blocks to your code group")]):e._e()],2)}),[],!1,null,"2f5f1757",null);t.default=i.exports},function(e,t,n){"use strict";var r=n(2),a=n(20),i=n(123),o=n(41);e.exports=function(e,t,n,s){s||(s={});var c=s.enumerable,l=void 0!==s.name?s.name:t;if(r(n)&&i(n,l,s),s.global)c?e[t]=n:o(t,n);else{try{s.unsafe?e[t]&&(c=!0):delete e[t]}catch(e){}c?e[t]=n:a.f(e,t,{value:n,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return e}},function(e,t,n){"use strict";e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t,n){"use strict";var r=n(162),a=String;e.exports=function(e){if("Symbol"===r(e))throw new TypeError("Cannot convert a Symbol value to a string");return a(e)}},function(e,t,n){"use strict";var r=n(1),a=n(9),i=r.document,o=a(i)&&a(i.createElement);e.exports=function(e){return o?i.createElement(e):{}}},function(e,t,n){"use strict";var r=n(6),a=n(4);e.exports=r&&a((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(e,t,n){"use strict";var r=n(3),a=n(4),i=n(2),o=n(10),s=n(6),c=n(135).CONFIGURABLE,l=n(136),u=n(137),h=u.enforce,d=u.get,p=String,f=Object.defineProperty,m=r("".slice),g=r("".replace),y=r([].join),v=s&&!a((function(){return 8!==f((function(){}),"length",{value:8}).length})),b=String(String).split("String"),w=e.exports=function(e,t,n){"Symbol("===m(p(t),0,7)&&(t="["+g(p(t),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),n&&n.getter&&(t="get "+t),n&&n.setter&&(t="set "+t),(!o(e,"name")||c&&e.name!==t)&&(s?f(e,"name",{value:t,configurable:!0}):e.name=t),v&&n&&o(n,"arity")&&e.length!==n.arity&&f(e,"length",{value:n.arity});try{n&&o(n,"constructor")&&n.constructor?s&&f(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(e){}var r=h(e);return o(r,"source")||(r.source=y(b,"string"==typeof t?t:"")),e};Function.prototype.toString=w((function(){return i(this)&&d(this).source||l(this)}),"toString")},function(e,t,n){"use strict";var r=n(68),a=n(70),i=r("keys");e.exports=function(e){return i[e]||(i[e]=a(e))}},function(e,t,n){"use strict";var r=n(3),a=n(10),i=n(32),o=n(141).indexOf,s=n(56),c=r([].push);e.exports=function(e,t){var n,r=i(e),l=0,u=[];for(n in r)!a(s,n)&&a(r,n)&&c(u,n);for(;t.length>l;)a(r,n=t[l++])&&(~o(u,n)||c(u,n));return u}},function(e,t){e.exports=function(e){var t=null==e?0:e.length;return t?e[t-1]:void 0}},function(e,t,n){e.exports=n(320)},function(e,t,n){"use strict";var r=n(30),a=n(147).left,i=n(148),o=n(67);r({target:"Array",proto:!0,forced:!n(149)&&o>79&&o<83||!i("reduce")},{reduce:function(e){var t=arguments.length;return a(this,e,t,t>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";var r={}.propertyIsEnumerable,a=Object.getOwnPropertyDescriptor,i=a&&!r.call({1:2},1);t.f=i?function(e){var t=a(this,e);return!!t&&t.enumerable}:r},function(e,t,n){"use strict";var r=n(38),a=n(9),i=n(63),o=n(132),s=n(134),c=n(35),l=TypeError,u=c("toPrimitive");e.exports=function(e,t){if(!a(e)||i(e))return e;var n,c=o(e,u);if(c){if(void 0===t&&(t="default"),n=r(c,e,t),!a(n)||i(n))return n;throw new l("Can't convert object to primitive value")}return void 0===t&&(t="number"),s(e,t)}},function(e,t,n){"use strict";e.exports="undefined"!=typeof navigator&&String(navigator.userAgent)||""},function(e,t,n){"use strict";var r=n(34),a=n(61);e.exports=function(e,t){var n=e[t];return a(n)?void 0:r(n)}},function(e,t,n){"use strict";var r=String;e.exports=function(e){try{return r(e)}catch(e){return"Object"}}},function(e,t,n){"use strict";var r=n(38),a=n(2),i=n(9),o=TypeError;e.exports=function(e,t){var n,s;if("string"===t&&a(n=e.toString)&&!i(s=r(n,e)))return s;if(a(n=e.valueOf)&&!i(s=r(n,e)))return s;if("string"!==t&&a(n=e.toString)&&!i(s=r(n,e)))return s;throw new o("Can't convert object to primitive value")}},function(e,t,n){"use strict";var r=n(6),a=n(10),i=Function.prototype,o=r&&Object.getOwnPropertyDescriptor,s=a(i,"name"),c=s&&"something"===function(){}.name,l=s&&(!r||r&&o(i,"name").configurable);e.exports={EXISTS:s,PROPER:c,CONFIGURABLE:l}},function(e,t,n){"use strict";var r=n(3),a=n(2),i=n(40),o=r(Function.toString);a(i.inspectSource)||(i.inspectSource=function(e){return o(e)}),e.exports=i.inspectSource},function(e,t,n){"use strict";var r,a,i,o=n(138),s=n(1),c=n(9),l=n(18),u=n(10),h=n(40),d=n(124),p=n(56),f=s.TypeError,m=s.WeakMap;if(o||h.state){var g=h.state||(h.state=new m);g.get=g.get,g.has=g.has,g.set=g.set,r=function(e,t){if(g.has(e))throw new f("Object already initialized");return t.facade=e,g.set(e,t),t},a=function(e){return g.get(e)||{}},i=function(e){return g.has(e)}}else{var y=d("state");p[y]=!0,r=function(e,t){if(u(e,y))throw new f("Object already initialized");return t.facade=e,l(e,y,t),t},a=function(e){return u(e,y)?e[y]:{}},i=function(e){return u(e,y)}}e.exports={set:r,get:a,has:i,enforce:function(e){return i(e)?a(e):r(e,{})},getterFor:function(e){return function(t){var n;if(!c(t)||(n=a(t)).type!==e)throw new f("Incompatible receiver, "+e+" required");return n}}}},function(e,t,n){"use strict";var r=n(1),a=n(2),i=r.WeakMap;e.exports=a(i)&&/native code/.test(String(i))},function(e,t,n){"use strict";var r=n(33),a=n(3),i=n(140),o=n(145),s=n(29),c=a([].concat);e.exports=r("Reflect","ownKeys")||function(e){var t=i.f(s(e)),n=o.f;return n?c(t,n(e)):t}},function(e,t,n){"use strict";var r=n(125),a=n(119).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,a)}},function(e,t,n){"use strict";var r=n(32),a=n(142),i=n(37),o=function(e){return function(t,n,o){var s,c=r(t),l=i(c),u=a(o,l);if(e&&n!=n){for(;l>u;)if((s=c[u++])!=s)return!0}else for(;l>u;u++)if((e||u in c)&&c[u]===n)return e||u||0;return!e&&-1}};e.exports={includes:o(!0),indexOf:o(!1)}},function(e,t,n){"use strict";var r=n(73),a=Math.max,i=Math.min;e.exports=function(e,t){var n=r(e);return n<0?a(n+t,0):i(n,t)}},function(e,t,n){"use strict";var r=Math.ceil,a=Math.floor;e.exports=Math.trunc||function(e){var t=+e;return(t>0?a:r)(t)}},function(e,t,n){"use strict";var r=n(73),a=Math.min;e.exports=function(e){var t=r(e);return t>0?a(t,9007199254740991):0}},function(e,t,n){"use strict";t.f=Object.getOwnPropertySymbols},function(e,t,n){"use strict";var r=n(4),a=n(2),i=/#|\.prototype\./,o=function(e,t){var n=c[s(e)];return n===u||n!==l&&(a(t)?r(t):!!t)},s=o.normalize=function(e){return String(e).replace(i,".").toLowerCase()},c=o.data={},l=o.NATIVE="N",u=o.POLYFILL="P";e.exports=o},function(e,t,n){"use strict";var r=n(34),a=n(36),i=n(55),o=n(37),s=TypeError,c=function(e){return function(t,n,c,l){var u=a(t),h=i(u),d=o(u);r(n);var p=e?d-1:0,f=e?-1:1;if(c<2)for(;;){if(p in h){l=h[p],p+=f;break}if(p+=f,e?p<0:d<=p)throw new s("Reduce of empty array with no initial value")}for(;e?p>=0:d>p;p+=f)p in h&&(l=n(l,h[p],p,u));return l}};e.exports={left:c(!1),right:c(!0)}},function(e,t,n){"use strict";var r=n(4);e.exports=function(e,t){var n=[][e];return!!n&&r((function(){n.call(null,t||function(){return 1},1)}))}},function(e,t,n){"use strict";var r=n(1),a=n(21);e.exports="process"===a(r.process)},function(e,t,n){"use strict";var r=n(6),a=n(151),i=TypeError,o=Object.getOwnPropertyDescriptor,s=r&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(e){return e instanceof TypeError}}();e.exports=s?function(e,t){if(a(e)&&!o(e,"length").writable)throw new i("Cannot set read only .length");return e.length=t}:function(e,t){return e.length=t}},function(e,t,n){"use strict";var r=n(21);e.exports=Array.isArray||function(e){return"Array"===r(e)}},function(e,t,n){"use strict";var r=TypeError;e.exports=function(e){if(e>9007199254740991)throw r("Maximum allowed index exceeded");return e}},function(e,t,n){"use strict";var r=n(30),a=n(1),i=n(154),o=n(155),s=a.WebAssembly,c=7!==new Error("e",{cause:7}).cause,l=function(e,t){var n={};n[e]=o(e,t,c),r({global:!0,constructor:!0,arity:1,forced:c},n)},u=function(e,t){if(s&&s[e]){var n={};n[e]=o("WebAssembly."+e,t,c),r({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:c},n)}};l("Error",(function(e){return function(t){return i(e,this,arguments)}})),l("EvalError",(function(e){return function(t){return i(e,this,arguments)}})),l("RangeError",(function(e){return function(t){return i(e,this,arguments)}})),l("ReferenceError",(function(e){return function(t){return i(e,this,arguments)}})),l("SyntaxError",(function(e){return function(t){return i(e,this,arguments)}})),l("TypeError",(function(e){return function(t){return i(e,this,arguments)}})),l("URIError",(function(e){return function(t){return i(e,this,arguments)}})),u("CompileError",(function(e){return function(t){return i(e,this,arguments)}})),u("LinkError",(function(e){return function(t){return i(e,this,arguments)}})),u("RuntimeError",(function(e){return function(t){return i(e,this,arguments)}}))},function(e,t,n){"use strict";var r=n(31),a=Function.prototype,i=a.apply,o=a.call;e.exports="object"==typeof Reflect&&Reflect.apply||(r?o.bind(i):function(){return o.apply(i,arguments)})},function(e,t,n){"use strict";var r=n(33),a=n(10),i=n(18),o=n(64),s=n(74),c=n(72),l=n(159),u=n(160),h=n(161),d=n(164),p=n(165),f=n(6),m=n(69);e.exports=function(e,t,n,g){var y=g?2:1,v=e.split("."),b=v[v.length-1],w=r.apply(null,v);if(w){var _=w.prototype;if(!m&&a(_,"cause")&&delete _.cause,!n)return w;var x=r("Error"),k=t((function(e,t){var n=h(g?t:e,void 0),r=g?new w(e):new w;return void 0!==n&&i(r,"message",n),p(r,k,r.stack,2),this&&o(_,this)&&u(r,this,k),arguments.length>y&&d(r,arguments[y]),r}));if(k.prototype=_,"Error"!==b?s?s(k,x):c(k,x,{name:!0}):f&&"stackTraceLimit"in w&&(l(k,w,"stackTraceLimit"),l(k,w,"prepareStackTrace")),c(k,w),!m)try{_.name!==b&&i(_,"name",b),_.constructor=k}catch(e){}return k}}},function(e,t,n){"use strict";var r=n(3),a=n(34);e.exports=function(e,t,n){try{return r(a(Object.getOwnPropertyDescriptor(e,t)[n]))}catch(e){}}},function(e,t,n){"use strict";var r=n(158),a=String,i=TypeError;e.exports=function(e){if(r(e))return e;throw new i("Can't set "+a(e)+" as a prototype")}},function(e,t,n){"use strict";var r=n(9);e.exports=function(e){return r(e)||null===e}},function(e,t,n){"use strict";var r=n(20).f;e.exports=function(e,t,n){n in e||r(e,n,{configurable:!0,get:function(){return t[n]},set:function(e){t[n]=e}})}},function(e,t,n){"use strict";var r=n(2),a=n(9),i=n(74);e.exports=function(e,t,n){var o,s;return i&&r(o=t.constructor)&&o!==n&&a(s=o.prototype)&&s!==n.prototype&&i(e,s),e}},function(e,t,n){"use strict";var r=n(120);e.exports=function(e,t){return void 0===e?arguments.length<2?"":t:r(e)}},function(e,t,n){"use strict";var r=n(163),a=n(2),i=n(21),o=n(35)("toStringTag"),s=Object,c="Arguments"===i(function(){return arguments}());e.exports=r?i:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=s(e),o))?n:c?i(t):"Object"===(r=i(t))&&a(t.callee)?"Arguments":r}},function(e,t,n){"use strict";var r={};r[n(35)("toStringTag")]="z",e.exports="[object z]"===String(r)},function(e,t,n){"use strict";var r=n(9),a=n(18);e.exports=function(e,t){r(t)&&"cause"in t&&a(e,"cause",t.cause)}},function(e,t,n){"use strict";var r=n(18),a=n(166),i=n(167),o=Error.captureStackTrace;e.exports=function(e,t,n,s){i&&(o?o(e,t):r(e,"stack",a(n,s)))}},function(e,t,n){"use strict";var r=n(3),a=Error,i=r("".replace),o=String(new a("zxcasd").stack),s=/\n\s*at [^:]*:[^\n]*/,c=s.test(o);e.exports=function(e,t){if(c&&"string"==typeof e&&!a.prepareStackTrace)for(;t--;)e=i(e,s,"");return e}},function(e,t,n){"use strict";var r=n(4),a=n(39);e.exports=!r((function(){var e=new Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",a(1,7)),7!==e.stack)}))},function(e,t,n){var r=n(75),a=n(169);e.exports=function e(t,n,i,o,s){var c=-1,l=t.length;for(i||(i=a),s||(s=[]);++c<l;){var u=t[c];n>0&&i(u)?n>1?e(u,n-1,i,o,s):r(s,u):o||(s[s.length]=u)}return s}},function(e,t,n){var r=n(19),a=n(42),i=n(7),o=r?r.isConcatSpreadable:void 0;e.exports=function(e){return i(e)||a(e)||!!(o&&e&&e[o])}},function(e,t,n){var r=n(17),a=n(15);e.exports=function(e){return a(e)&&"[object Arguments]"==r(e)}},function(e,t,n){var r=n(19),a=Object.prototype,i=a.hasOwnProperty,o=a.toString,s=r?r.toStringTag:void 0;e.exports=function(e){var t=i.call(e,s),n=e[s];try{e[s]=void 0;var r=!0}catch(e){}var a=o.call(e);return r&&(t?e[s]=n:delete e[s]),a}},function(e,t){var n=Object.prototype.toString;e.exports=function(e){return n.call(e)}},function(e,t,n){var r=n(174),a=n(230),i=n(50),o=n(7),s=n(241);e.exports=function(e){return"function"==typeof e?e:null==e?i:"object"==typeof e?o(e)?a(e[0],e[1]):r(e):s(e)}},function(e,t,n){var r=n(175),a=n(229),i=n(92);e.exports=function(e){var t=a(e);return 1==t.length&&t[0][2]?i(t[0][0],t[0][1]):function(n){return n===e||r(n,e,t)}}},function(e,t,n){var r=n(77),a=n(81);e.exports=function(e,t,n,i){var o=n.length,s=o,c=!i;if(null==e)return!s;for(e=Object(e);o--;){var l=n[o];if(c&&l[2]?l[1]!==e[l[0]]:!(l[0]in e))return!1}for(;++o<s;){var u=(l=n[o])[0],h=e[u],d=l[1];if(c&&l[2]){if(void 0===h&&!(u in e))return!1}else{var p=new r;if(i)var f=i(h,d,u,e,t,p);if(!(void 0===f?a(d,h,3,i,p):f))return!1}}return!0}},function(e,t){e.exports=function(){this.__data__=[],this.size=0}},function(e,t,n){var r=n(23),a=Array.prototype.splice;e.exports=function(e){var t=this.__data__,n=r(t,e);return!(n<0)&&(n==t.length-1?t.pop():a.call(t,n,1),--this.size,!0)}},function(e,t,n){var r=n(23);e.exports=function(e){var t=this.__data__,n=r(t,e);return n<0?void 0:t[n][1]}},function(e,t,n){var r=n(23);e.exports=function(e){return r(this.__data__,e)>-1}},function(e,t,n){var r=n(23);e.exports=function(e,t){var n=this.__data__,a=r(n,e);return a<0?(++this.size,n.push([e,t])):n[a][1]=t,this}},function(e,t,n){var r=n(22);e.exports=function(){this.__data__=new r,this.size=0}},function(e,t){e.exports=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n}},function(e,t){e.exports=function(e){return this.__data__.get(e)}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t,n){var r=n(22),a=n(43),i=n(45);e.exports=function(e,t){var n=this.__data__;if(n instanceof r){var o=n.__data__;if(!a||o.length<199)return o.push([e,t]),this.size=++n.size,this;n=this.__data__=new i(o)}return n.set(e,t),this.size=n.size,this}},function(e,t,n){var r=n(79),a=n(187),i=n(44),o=n(80),s=/^\[object .+?Constructor\]$/,c=Function.prototype,l=Object.prototype,u=c.toString,h=l.hasOwnProperty,d=RegExp("^"+u.call(h).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!i(e)||a(e))&&(r(e)?d:s).test(o(e))}},function(e,t,n){var r,a=n(188),i=(r=/[^.]+$/.exec(a&&a.keys&&a.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";e.exports=function(e){return!!i&&i in e}},function(e,t,n){var r=n(8)["__core-js_shared__"];e.exports=r},function(e,t){e.exports=function(e,t){return null==e?void 0:e[t]}},function(e,t,n){var r=n(191),a=n(22),i=n(43);e.exports=function(){this.size=0,this.__data__={hash:new r,map:new(i||a),string:new r}}},function(e,t,n){var r=n(192),a=n(193),i=n(194),o=n(195),s=n(196);function c(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=a,c.prototype.get=i,c.prototype.has=o,c.prototype.set=s,e.exports=c},function(e,t,n){var r=n(24);e.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(e,t){e.exports=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}},function(e,t,n){var r=n(24),a=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;if(r){var n=t[e];return"__lodash_hash_undefined__"===n?void 0:n}return a.call(t,e)?t[e]:void 0}},function(e,t,n){var r=n(24),a=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;return r?void 0!==t[e]:a.call(t,e)}},function(e,t,n){var r=n(24);e.exports=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=r&&void 0===t?"__lodash_hash_undefined__":t,this}},function(e,t,n){var r=n(25);e.exports=function(e){var t=r(this,e).delete(e);return this.size-=t?1:0,t}},function(e,t){e.exports=function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}},function(e,t,n){var r=n(25);e.exports=function(e){return r(this,e).get(e)}},function(e,t,n){var r=n(25);e.exports=function(e){return r(this,e).has(e)}},function(e,t,n){var r=n(25);e.exports=function(e,t){var n=r(this,e),a=n.size;return n.set(e,t),this.size+=n.size==a?0:1,this}},function(e,t,n){var r=n(77),a=n(82),i=n(206),o=n(209),s=n(225),c=n(7),l=n(86),u=n(88),h="[object Object]",d=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,p,f,m){var g=c(e),y=c(t),v=g?"[object Array]":s(e),b=y?"[object Array]":s(t),w=(v="[object Arguments]"==v?h:v)==h,_=(b="[object Arguments]"==b?h:b)==h,x=v==b;if(x&&l(e)){if(!l(t))return!1;g=!0,w=!1}if(x&&!w)return m||(m=new r),g||u(e)?a(e,t,n,p,f,m):i(e,t,v,n,p,f,m);if(!(1&n)){var k=w&&d.call(e,"__wrapped__"),C=_&&d.call(t,"__wrapped__");if(k||C){var M=k?e.value():e,A=C?t.value():t;return m||(m=new r),f(M,A,n,p,m)}}return!!x&&(m||(m=new r),o(e,t,n,p,f,m))}},function(e,t){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}},function(e,t,n){var r=n(19),a=n(207),i=n(78),o=n(82),s=n(208),c=n(46),l=r?r.prototype:void 0,u=l?l.valueOf:void 0;e.exports=function(e,t,n,r,l,h,d){switch(n){case"[object DataView]":if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=t.byteLength||!h(new a(e),new a(t)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+e,+t);case"[object Error]":return e.name==t.name&&e.message==t.message;case"[object RegExp]":case"[object String]":return e==t+"";case"[object Map]":var p=s;case"[object Set]":var f=1&r;if(p||(p=c),e.size!=t.size&&!f)return!1;var m=d.get(e);if(m)return m==t;r|=2,d.set(e,t);var g=o(p(e),p(t),r,l,h,d);return d.delete(e),g;case"[object Symbol]":if(u)return u.call(e)==u.call(t)}return!1}},function(e,t,n){var r=n(8).Uint8Array;e.exports=r},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n}},function(e,t,n){var r=n(210),a=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,i,o,s){var c=1&n,l=r(e),u=l.length;if(u!=r(t).length&&!c)return!1;for(var h=u;h--;){var d=l[h];if(!(c?d in t:a.call(t,d)))return!1}var p=s.get(e),f=s.get(t);if(p&&f)return p==t&&f==e;var m=!0;s.set(e,t),s.set(t,e);for(var g=c;++h<u;){var y=e[d=l[h]],v=t[d];if(i)var b=c?i(v,y,d,t,e,s):i(y,v,d,e,t,s);if(!(void 0===b?y===v||o(y,v,n,i,s):b)){m=!1;break}g||(g="constructor"==d)}if(m&&!g){var w=e.constructor,_=t.constructor;w==_||!("constructor"in e)||!("constructor"in t)||"function"==typeof w&&w instanceof w&&"function"==typeof _&&_ instanceof _||(m=!1)}return s.delete(e),s.delete(t),m}},function(e,t,n){var r=n(211),a=n(212),i=n(85);e.exports=function(e){return r(e,i,a)}},function(e,t,n){var r=n(75),a=n(7);e.exports=function(e,t,n){var i=t(e);return a(e)?i:r(i,n(e))}},function(e,t,n){var r=n(213),a=n(214),i=Object.prototype.propertyIsEnumerable,o=Object.getOwnPropertySymbols,s=o?function(e){return null==e?[]:(e=Object(e),r(o(e),(function(t){return i.call(e,t)})))}:a;e.exports=s},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,a=0,i=[];++n<r;){var o=e[n];t(o,n,e)&&(i[a++]=o)}return i}},function(e,t){e.exports=function(){return[]}},function(e,t,n){var r=n(216),a=n(42),i=n(7),o=n(86),s=n(87),c=n(88),l=Object.prototype.hasOwnProperty;e.exports=function(e,t){var n=i(e),u=!n&&a(e),h=!n&&!u&&o(e),d=!n&&!u&&!h&&c(e),p=n||u||h||d,f=p?r(e.length,String):[],m=f.length;for(var g in e)!t&&!l.call(e,g)||p&&("length"==g||h&&("offset"==g||"parent"==g)||d&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||s(g,m))||f.push(g);return f}},function(e,t){e.exports=function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}},function(e,t){e.exports=function(){return!1}},function(e,t,n){var r=n(17),a=n(47),i=n(15),o={};o["[object Float32Array]"]=o["[object Float64Array]"]=o["[object Int8Array]"]=o["[object Int16Array]"]=o["[object Int32Array]"]=o["[object Uint8Array]"]=o["[object Uint8ClampedArray]"]=o["[object Uint16Array]"]=o["[object Uint32Array]"]=!0,o["[object Arguments]"]=o["[object Array]"]=o["[object ArrayBuffer]"]=o["[object Boolean]"]=o["[object DataView]"]=o["[object Date]"]=o["[object Error]"]=o["[object Function]"]=o["[object Map]"]=o["[object Number]"]=o["[object Object]"]=o["[object RegExp]"]=o["[object Set]"]=o["[object String]"]=o["[object WeakMap]"]=!1,e.exports=function(e){return i(e)&&a(e.length)&&!!o[r(e)]}},function(e,t){e.exports=function(e){return function(t){return e(t)}}},function(e,t,n){(function(e){var r=n(76),a=t&&!t.nodeType&&t,i=a&&"object"==typeof e&&e&&!e.nodeType&&e,o=i&&i.exports===a&&r.process,s=function(){try{var e=i&&i.require&&i.require("util").types;return e||o&&o.binding&&o.binding("util")}catch(e){}}();e.exports=s}).call(this,n(57)(e))},function(e,t,n){var r=n(222),a=n(223),i=Object.prototype.hasOwnProperty;e.exports=function(e){if(!r(e))return a(e);var t=[];for(var n in Object(e))i.call(e,n)&&"constructor"!=n&&t.push(n);return t}},function(e,t){var n=Object.prototype;e.exports=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||n)}},function(e,t,n){var r=n(224)(Object.keys,Object);e.exports=r},function(e,t){e.exports=function(e,t){return function(n){return e(t(n))}}},function(e,t,n){var r=n(226),a=n(43),i=n(227),o=n(90),s=n(228),c=n(17),l=n(80),u=l(r),h=l(a),d=l(i),p=l(o),f=l(s),m=c;(r&&"[object DataView]"!=m(new r(new ArrayBuffer(1)))||a&&"[object Map]"!=m(new a)||i&&"[object Promise]"!=m(i.resolve())||o&&"[object Set]"!=m(new o)||s&&"[object WeakMap]"!=m(new s))&&(m=function(e){var t=c(e),n="[object Object]"==t?e.constructor:void 0,r=n?l(n):"";if(r)switch(r){case u:return"[object DataView]";case h:return"[object Map]";case d:return"[object Promise]";case p:return"[object Set]";case f:return"[object WeakMap]"}return t}),e.exports=m},function(e,t,n){var r=n(11)(n(8),"DataView");e.exports=r},function(e,t,n){var r=n(11)(n(8),"Promise");e.exports=r},function(e,t,n){var r=n(11)(n(8),"WeakMap");e.exports=r},function(e,t,n){var r=n(91),a=n(85);e.exports=function(e){for(var t=a(e),n=t.length;n--;){var i=t[n],o=e[i];t[n]=[i,o,r(o)]}return t}},function(e,t,n){var r=n(81),a=n(231),i=n(238),o=n(48),s=n(91),c=n(92),l=n(26);e.exports=function(e,t){return o(e)&&s(t)?c(l(e),t):function(n){var o=a(n,e);return void 0===o&&o===t?i(n,e):r(t,o,3)}}},function(e,t,n){var r=n(93);e.exports=function(e,t,n){var a=null==e?void 0:r(e,t);return void 0===a?n:a}},function(e,t,n){var r=n(233),a=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,o=r((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(a,(function(e,n,r,a){t.push(r?a.replace(i,"$1"):n||e)})),t}));e.exports=o},function(e,t,n){var r=n(234);e.exports=function(e){var t=r(e,(function(e){return 500===n.size&&n.clear(),e})),n=t.cache;return t}},function(e,t,n){var r=n(45);function a(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var n=function(){var r=arguments,a=t?t.apply(this,r):r[0],i=n.cache;if(i.has(a))return i.get(a);var o=e.apply(this,r);return n.cache=i.set(a,o)||i,o};return n.cache=new(a.Cache||r),n}a.Cache=r,e.exports=a},function(e,t,n){var r=n(236);e.exports=function(e){return null==e?"":r(e)}},function(e,t,n){var r=n(19),a=n(237),i=n(7),o=n(49),s=r?r.prototype:void 0,c=s?s.toString:void 0;e.exports=function e(t){if("string"==typeof t)return t;if(i(t))return a(t,e)+"";if(o(t))return c?c.call(t):"";var n=t+"";return"0"==n&&1/t==-1/0?"-0":n}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,a=Array(r);++n<r;)a[n]=t(e[n],n,e);return a}},function(e,t,n){var r=n(239),a=n(240);e.exports=function(e,t){return null!=e&&a(e,t,r)}},function(e,t){e.exports=function(e,t){return null!=e&&t in Object(e)}},function(e,t,n){var r=n(94),a=n(42),i=n(7),o=n(87),s=n(47),c=n(26);e.exports=function(e,t,n){for(var l=-1,u=(t=r(t,e)).length,h=!1;++l<u;){var d=c(t[l]);if(!(h=null!=e&&n(e,d)))break;e=e[d]}return h||++l!=u?h:!!(u=null==e?0:e.length)&&s(u)&&o(d,u)&&(i(e)||a(e))}},function(e,t,n){var r=n(242),a=n(243),i=n(48),o=n(26);e.exports=function(e){return i(e)?r(o(e)):a(e)}},function(e,t){e.exports=function(e){return function(t){return null==t?void 0:t[e]}}},function(e,t,n){var r=n(93);e.exports=function(e){return function(t){return r(t,e)}}},function(e,t,n){var r=n(50),a=n(245),i=n(247);e.exports=function(e,t){return i(a(e,t,r),e+"")}},function(e,t,n){var r=n(246),a=Math.max;e.exports=function(e,t,n){return t=a(void 0===t?e.length-1:t,0),function(){for(var i=arguments,o=-1,s=a(i.length-t,0),c=Array(s);++o<s;)c[o]=i[t+o];o=-1;for(var l=Array(t+1);++o<t;)l[o]=i[o];return l[t]=n(c),r(e,this,l)}}},function(e,t){e.exports=function(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}},function(e,t,n){var r=n(248),a=n(251)(r);e.exports=a},function(e,t,n){var r=n(249),a=n(250),i=n(50),o=a?function(e,t){return a(e,"toString",{configurable:!0,enumerable:!1,value:r(t),writable:!0})}:i;e.exports=o},function(e,t){e.exports=function(e){return function(){return e}}},function(e,t,n){var r=n(11),a=function(){try{var e=r(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=a},function(e,t){var n=Date.now;e.exports=function(e){var t=0,r=0;return function(){var a=n(),i=16-(a-r);if(r=a,i>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}},function(e,t,n){var r=n(83),a=n(253),i=n(258),o=n(84),s=n(259),c=n(46);e.exports=function(e,t,n){var l=-1,u=a,h=e.length,d=!0,p=[],f=p;if(n)d=!1,u=i;else if(h>=200){var m=t?null:s(e);if(m)return c(m);d=!1,u=o,f=new r}else f=t?[]:p;e:for(;++l<h;){var g=e[l],y=t?t(g):g;if(g=n||0!==g?g:0,d&&y==y){for(var v=f.length;v--;)if(f[v]===y)continue e;t&&f.push(y),p.push(g)}else u(f,y,n)||(f!==p&&f.push(y),p.push(g))}return p}},function(e,t,n){var r=n(254);e.exports=function(e,t){return!!(null==e?0:e.length)&&r(e,t,0)>-1}},function(e,t,n){var r=n(255),a=n(256),i=n(257);e.exports=function(e,t,n){return t==t?i(e,t,n):r(e,a,n)}},function(e,t){e.exports=function(e,t,n,r){for(var a=e.length,i=n+(r?1:-1);r?i--:++i<a;)if(t(e[i],i,e))return i;return-1}},function(e,t){e.exports=function(e){return e!=e}},function(e,t){e.exports=function(e,t,n){for(var r=n-1,a=e.length;++r<a;)if(e[r]===t)return r;return-1}},function(e,t){e.exports=function(e,t,n){for(var r=-1,a=null==e?0:e.length;++r<a;)if(n(t,e[r]))return!0;return!1}},function(e,t,n){var r=n(90),a=n(260),i=n(46),o=r&&1/i(new r([,-0]))[1]==1/0?function(e){return new r(e)}:a;e.exports=o},function(e,t){e.exports=function(){}},function(e,t,n){var r=n(89),a=n(15);e.exports=function(e){return a(e)&&r(e)}},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";n(95)},function(e,t,n){"use strict";n(96)},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";var r=n(269),a=n(99),i=n(52),o=Object.prototype.hasOwnProperty,s={brackets:function(e){return e+"[]"},comma:"comma",indices:function(e,t){return e+"["+t+"]"},repeat:function(e){return e}},c=Array.isArray,l=Array.prototype.push,u=function(e,t){l.apply(e,c(t)?t:[t])},h=Date.prototype.toISOString,d=i.default,p={addQueryPrefix:!1,allowDots:!1,charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encoder:a.encode,encodeValuesOnly:!1,format:d,formatter:i.formatters[d],indices:!1,serializeDate:function(e){return h.call(e)},skipNulls:!1,strictNullHandling:!1},f={},m=function e(t,n,i,o,s,l,h,d,m,g,y,v,b,w,_,x){for(var k,C=t,M=x,A=0,P=!1;void 0!==(M=M.get(f))&&!P;){var T=M.get(t);if(A+=1,void 0!==T){if(T===A)throw new RangeError("Cyclic object value");P=!0}void 0===M.get(f)&&(A=0)}if("function"==typeof d?C=d(n,C):C instanceof Date?C=y(C):"comma"===i&&c(C)&&(C=a.maybeMap(C,(function(e){return e instanceof Date?y(e):e}))),null===C){if(s)return h&&!w?h(n,p.encoder,_,"key",v):n;C=""}if("string"==typeof(k=C)||"number"==typeof k||"boolean"==typeof k||"symbol"==typeof k||"bigint"==typeof k||a.isBuffer(C))return h?[b(w?n:h(n,p.encoder,_,"key",v))+"="+b(h(C,p.encoder,_,"value",v))]:[b(n)+"="+b(String(C))];var S,O=[];if(void 0===C)return O;if("comma"===i&&c(C))w&&h&&(C=a.maybeMap(C,h)),S=[{value:C.length>0?C.join(",")||null:void 0}];else if(c(d))S=d;else{var E=Object.keys(C);S=m?E.sort(m):E}for(var I=o&&c(C)&&1===C.length?n+"[]":n,L=0;L<S.length;++L){var j=S[L],R="object"==typeof j&&void 0!==j.value?j.value:C[j];if(!l||null!==R){var $=c(C)?"function"==typeof i?i(I,j):I:I+(g?"."+j:"["+j+"]");x.set(t,A);var D=r();D.set(f,x),u(O,e(R,$,i,o,s,l,"comma"===i&&w&&c(C)?null:h,d,m,g,y,v,b,w,_,D))}}return O};e.exports=function(e,t){var n,a=e,l=function(e){if(!e)return p;if(null!==e.encoder&&void 0!==e.encoder&&"function"!=typeof e.encoder)throw new TypeError("Encoder has to be a function.");var t=e.charset||p.charset;if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var n=i.default;if(void 0!==e.format){if(!o.call(i.formatters,e.format))throw new TypeError("Unknown format option provided.");n=e.format}var r=i.formatters[n],a=p.filter;return("function"==typeof e.filter||c(e.filter))&&(a=e.filter),{addQueryPrefix:"boolean"==typeof e.addQueryPrefix?e.addQueryPrefix:p.addQueryPrefix,allowDots:void 0===e.allowDots?p.allowDots:!!e.allowDots,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:p.charsetSentinel,delimiter:void 0===e.delimiter?p.delimiter:e.delimiter,encode:"boolean"==typeof e.encode?e.encode:p.encode,encoder:"function"==typeof e.encoder?e.encoder:p.encoder,encodeValuesOnly:"boolean"==typeof e.encodeValuesOnly?e.encodeValuesOnly:p.encodeValuesOnly,filter:a,format:n,formatter:r,serializeDate:"function"==typeof e.serializeDate?e.serializeDate:p.serializeDate,skipNulls:"boolean"==typeof e.skipNulls?e.skipNulls:p.skipNulls,sort:"function"==typeof e.sort?e.sort:null,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:p.strictNullHandling}}(t);"function"==typeof l.filter?a=(0,l.filter)("",a):c(l.filter)&&(n=l.filter);var h,d=[];if("object"!=typeof a||null===a)return"";h=t&&t.arrayFormat in s?t.arrayFormat:t&&"indices"in t?t.indices?"indices":"repeat":"indices";var f=s[h];if(t&&"commaRoundTrip"in t&&"boolean"!=typeof t.commaRoundTrip)throw new TypeError("`commaRoundTrip` must be a boolean, or absent");var g="comma"===f&&t&&t.commaRoundTrip;n||(n=Object.keys(a)),l.sort&&n.sort(l.sort);for(var y=r(),v=0;v<n.length;++v){var b=n[v];l.skipNulls&&null===a[b]||u(d,m(a[b],b,f,g,l.strictNullHandling,l.skipNulls,l.encode?l.encoder:null,l.filter,l.sort,l.allowDots,l.serializeDate,l.format,l.formatter,l.encodeValuesOnly,l.charset,y))}var w=d.join(l.delimiter),_=!0===l.addQueryPrefix?"?":"";return l.charsetSentinel&&("iso-8859-1"===l.charset?_+="utf8=%26%2310003%3B&":_+="utf8=%E2%9C%93&"),w.length>0?_+w:""}},function(e,t,n){"use strict";var r=n(12),a=n(275),i=n(279),o=r("%TypeError%"),s=r("%WeakMap%",!0),c=r("%Map%",!0),l=a("WeakMap.prototype.get",!0),u=a("WeakMap.prototype.set",!0),h=a("WeakMap.prototype.has",!0),d=a("Map.prototype.get",!0),p=a("Map.prototype.set",!0),f=a("Map.prototype.has",!0),m=function(e,t){for(var n,r=e;null!==(n=r.next);r=n)if(n.key===t)return r.next=n.next,n.next=e.next,e.next=n,n};e.exports=function(){var e,t,n,r={assert:function(e){if(!r.has(e))throw new o("Side channel does not contain "+i(e))},get:function(r){if(s&&r&&("object"==typeof r||"function"==typeof r)){if(e)return l(e,r)}else if(c){if(t)return d(t,r)}else if(n)return function(e,t){var n=m(e,t);return n&&n.value}(n,r)},has:function(r){if(s&&r&&("object"==typeof r||"function"==typeof r)){if(e)return h(e,r)}else if(c){if(t)return f(t,r)}else if(n)return function(e,t){return!!m(e,t)}(n,r);return!1},set:function(r,a){s&&r&&("object"==typeof r||"function"==typeof r)?(e||(e=new s),u(e,r,a)):c?(t||(t=new c),p(t,r,a)):(n||(n={key:{},next:null}),function(e,t,n){var r=m(e,t);r?r.value=n:e.next={key:t,next:e.next,value:n}}(n,r,a))}};return r}},function(e,t,n){"use strict";var r="undefined"!=typeof Symbol&&Symbol,a=n(271);e.exports=function(){return"function"==typeof r&&("function"==typeof Symbol&&("symbol"==typeof r("foo")&&("symbol"==typeof Symbol("bar")&&a())))}},function(e,t,n){"use strict";e.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var e={},t=Symbol("test"),n=Object(t);if("string"==typeof t)return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;if("[object Symbol]"!==Object.prototype.toString.call(n))return!1;for(t in e[t]=42,e)return!1;if("function"==typeof Object.keys&&0!==Object.keys(e).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return!1;var r=Object.getOwnPropertySymbols(e);if(1!==r.length||r[0]!==t)return!1;if(!Object.prototype.propertyIsEnumerable.call(e,t))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var a=Object.getOwnPropertyDescriptor(e,t);if(42!==a.value||!0!==a.enumerable)return!1}return!0}},function(e,t,n){"use strict";var r={foo:{}},a=Object;e.exports=function(){return{__proto__:r}.foo===r.foo&&!({__proto__:null}instanceof a)}},function(e,t,n){"use strict";var r="Function.prototype.bind called on incompatible ",a=Object.prototype.toString,i=Math.max,o=function(e,t){for(var n=[],r=0;r<e.length;r+=1)n[r]=e[r];for(var a=0;a<t.length;a+=1)n[a+e.length]=t[a];return n},s=function(e,t){for(var n=[],r=t||0,a=0;r<e.length;r+=1,a+=1)n[a]=e[r];return n},c=function(e,t){for(var n="",r=0;r<e.length;r+=1)n+=e[r],r+1<e.length&&(n+=t);return n};e.exports=function(e){var t=this;if("function"!=typeof t||"[object Function]"!==a.apply(t))throw new TypeError(r+t);for(var n,l=s(arguments,1),u=function(){if(this instanceof n){var r=t.apply(this,o(l,arguments));return Object(r)===r?r:this}return t.apply(e,o(l,arguments))},h=i(0,t.length-l.length),d=[],p=0;p<h;p++)d[p]="$"+p;if(n=Function("binder","return function ("+c(d,",")+"){ return binder.apply(this,arguments); }")(u),t.prototype){var f=function(){};f.prototype=t.prototype,n.prototype=new f,f.prototype=null}return n}},function(e,t,n){"use strict";var r=Function.prototype.call,a=Object.prototype.hasOwnProperty,i=n(51);e.exports=i.call(r,a)},function(e,t,n){"use strict";var r=n(12),a=n(276),i=a(r("String.prototype.indexOf"));e.exports=function(e,t){var n=r(e,!!t);return"function"==typeof n&&i(e,".prototype.")>-1?a(n):n}},function(e,t,n){"use strict";var r=n(51),a=n(12),i=n(277),o=a("%TypeError%"),s=a("%Function.prototype.apply%"),c=a("%Function.prototype.call%"),l=a("%Reflect.apply%",!0)||r.call(c,s),u=a("%Object.defineProperty%",!0),h=a("%Math.max%");if(u)try{u({},"a",{value:1})}catch(e){u=null}e.exports=function(e){if("function"!=typeof e)throw new o("a function is required");var t=l(r,c,arguments);return i(t,1+h(0,e.length-(arguments.length-1)),!0)};var d=function(){return l(r,s,arguments)};u?u(e.exports,"apply",{value:d}):e.exports.apply=d},function(e,t,n){"use strict";var r=n(12),a=n(278),i=n(97)(),o=n(98),s=r("%TypeError%"),c=r("%Math.floor%");e.exports=function(e,t){if("function"!=typeof e)throw new s("`fn` is not a function");if("number"!=typeof t||t<0||t>4294967295||c(t)!==t)throw new s("`length` must be a positive 32-bit integer");var n=arguments.length>2&&!!arguments[2],r=!0,l=!0;if("length"in e&&o){var u=o(e,"length");u&&!u.configurable&&(r=!1),u&&!u.writable&&(l=!1)}return(r||l||!n)&&(i?a(e,"length",t,!0,!0):a(e,"length",t)),e}},function(e,t,n){"use strict";var r=n(97)(),a=n(12),i=r&&a("%Object.defineProperty%",!0);if(i)try{i({},"a",{value:1})}catch(e){i=!1}var o=a("%SyntaxError%"),s=a("%TypeError%"),c=n(98);e.exports=function(e,t,n){if(!e||"object"!=typeof e&&"function"!=typeof e)throw new s("`obj` must be an object or a function`");if("string"!=typeof t&&"symbol"!=typeof t)throw new s("`property` must be a string or a symbol`");if(arguments.length>3&&"boolean"!=typeof arguments[3]&&null!==arguments[3])throw new s("`nonEnumerable`, if provided, must be a boolean or null");if(arguments.length>4&&"boolean"!=typeof arguments[4]&&null!==arguments[4])throw new s("`nonWritable`, if provided, must be a boolean or null");if(arguments.length>5&&"boolean"!=typeof arguments[5]&&null!==arguments[5])throw new s("`nonConfigurable`, if provided, must be a boolean or null");if(arguments.length>6&&"boolean"!=typeof arguments[6])throw new s("`loose`, if provided, must be a boolean");var r=arguments.length>3?arguments[3]:null,a=arguments.length>4?arguments[4]:null,l=arguments.length>5?arguments[5]:null,u=arguments.length>6&&arguments[6],h=!!c&&c(e,t);if(i)i(e,t,{configurable:null===l&&h?h.configurable:!l,enumerable:null===r&&h?h.enumerable:!r,value:n,writable:null===a&&h?h.writable:!a});else{if(!u&&(r||a||l))throw new o("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");e[t]=n}}},function(e,t,n){var r="function"==typeof Map&&Map.prototype,a=Object.getOwnPropertyDescriptor&&r?Object.getOwnPropertyDescriptor(Map.prototype,"size"):null,i=r&&a&&"function"==typeof a.get?a.get:null,o=r&&Map.prototype.forEach,s="function"==typeof Set&&Set.prototype,c=Object.getOwnPropertyDescriptor&&s?Object.getOwnPropertyDescriptor(Set.prototype,"size"):null,l=s&&c&&"function"==typeof c.get?c.get:null,u=s&&Set.prototype.forEach,h="function"==typeof WeakMap&&WeakMap.prototype?WeakMap.prototype.has:null,d="function"==typeof WeakSet&&WeakSet.prototype?WeakSet.prototype.has:null,p="function"==typeof WeakRef&&WeakRef.prototype?WeakRef.prototype.deref:null,f=Boolean.prototype.valueOf,m=Object.prototype.toString,g=Function.prototype.toString,y=String.prototype.match,v=String.prototype.slice,b=String.prototype.replace,w=String.prototype.toUpperCase,_=String.prototype.toLowerCase,x=RegExp.prototype.test,k=Array.prototype.concat,C=Array.prototype.join,M=Array.prototype.slice,A=Math.floor,P="function"==typeof BigInt?BigInt.prototype.valueOf:null,T=Object.getOwnPropertySymbols,S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?Symbol.prototype.toString:null,O="function"==typeof Symbol&&"object"==typeof Symbol.iterator,E="function"==typeof Symbol&&Symbol.toStringTag&&(typeof Symbol.toStringTag===O||"symbol")?Symbol.toStringTag:null,I=Object.prototype.propertyIsEnumerable,L=("function"==typeof Reflect?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(e){return e.__proto__}:null);function j(e,t){if(e===1/0||e===-1/0||e!=e||e&&e>-1e3&&e<1e3||x.call(/e/,t))return t;var n=/[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;if("number"==typeof e){var r=e<0?-A(-e):A(e);if(r!==e){var a=String(r),i=v.call(t,a.length+1);return b.call(a,n,"$&_")+"."+b.call(b.call(i,/([0-9]{3})/g,"$&_"),/_$/,"")}}return b.call(t,n,"$&_")}var R=n(280),$=R.custom,D=F($)?$:null;function z(e,t,n){var r="double"===(n.quoteStyle||t)?'"':"'";return r+e+r}function U(e){return b.call(String(e),/"/g,"&quot;")}function B(e){return!("[object Array]"!==G(e)||E&&"object"==typeof e&&E in e)}function q(e){return!("[object RegExp]"!==G(e)||E&&"object"==typeof e&&E in e)}function F(e){if(O)return e&&"object"==typeof e&&e instanceof Symbol;if("symbol"==typeof e)return!0;if(!e||"object"!=typeof e||!S)return!1;try{return S.call(e),!0}catch(e){}return!1}e.exports=function e(t,n,r,a){var s=n||{};if(H(s,"quoteStyle")&&"single"!==s.quoteStyle&&"double"!==s.quoteStyle)throw new TypeError('option "quoteStyle" must be "single" or "double"');if(H(s,"maxStringLength")&&("number"==typeof s.maxStringLength?s.maxStringLength<0&&s.maxStringLength!==1/0:null!==s.maxStringLength))throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');var c=!H(s,"customInspect")||s.customInspect;if("boolean"!=typeof c&&"symbol"!==c)throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");if(H(s,"indent")&&null!==s.indent&&"\t"!==s.indent&&!(parseInt(s.indent,10)===s.indent&&s.indent>0))throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');if(H(s,"numericSeparator")&&"boolean"!=typeof s.numericSeparator)throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');var m=s.numericSeparator;if(void 0===t)return"undefined";if(null===t)return"null";if("boolean"==typeof t)return t?"true":"false";if("string"==typeof t)return function e(t,n){if(t.length>n.maxStringLength){var r=t.length-n.maxStringLength,a="... "+r+" more character"+(r>1?"s":"");return e(v.call(t,0,n.maxStringLength),n)+a}return z(b.call(b.call(t,/(['\\])/g,"\\$1"),/[\x00-\x1f]/g,W),"single",n)}(t,s);if("number"==typeof t){if(0===t)return 1/0/t>0?"0":"-0";var w=String(t);return m?j(t,w):w}if("bigint"==typeof t){var x=String(t)+"n";return m?j(t,x):x}var A=void 0===s.depth?5:s.depth;if(void 0===r&&(r=0),r>=A&&A>0&&"object"==typeof t)return B(t)?"[Array]":"[Object]";var T=function(e,t){var n;if("\t"===e.indent)n="\t";else{if(!("number"==typeof e.indent&&e.indent>0))return null;n=C.call(Array(e.indent+1)," ")}return{base:n,prev:C.call(Array(t+1),n)}}(s,r);if(void 0===a)a=[];else if(V(a,t)>=0)return"[Circular]";function $(t,n,i){if(n&&(a=M.call(a)).push(n),i){var o={depth:s.depth};return H(s,"quoteStyle")&&(o.quoteStyle=s.quoteStyle),e(t,o,r+1,a)}return e(t,s,r+1,a)}if("function"==typeof t&&!q(t)){var N=function(e){if(e.name)return e.name;var t=y.call(g.call(e),/^function\s*([\w$]+)/);if(t)return t[1];return null}(t),Q=X(t,$);return"[Function"+(N?": "+N:" (anonymous)")+"]"+(Q.length>0?" { "+C.call(Q,", ")+" }":"")}if(F(t)){var ee=O?b.call(String(t),/^(Symbol\(.*\))_[^)]*$/,"$1"):S.call(t);return"object"!=typeof t||O?ee:K(ee)}if(function(e){if(!e||"object"!=typeof e)return!1;if("undefined"!=typeof HTMLElement&&e instanceof HTMLElement)return!0;return"string"==typeof e.nodeName&&"function"==typeof e.getAttribute}(t)){for(var te="<"+_.call(String(t.nodeName)),ne=t.attributes||[],re=0;re<ne.length;re++)te+=" "+ne[re].name+"="+z(U(ne[re].value),"double",s);return te+=">",t.childNodes&&t.childNodes.length&&(te+="..."),te+="</"+_.call(String(t.nodeName))+">"}if(B(t)){if(0===t.length)return"[]";var ae=X(t,$);return T&&!function(e){for(var t=0;t<e.length;t++)if(V(e[t],"\n")>=0)return!1;return!0}(ae)?"["+J(ae,T)+"]":"[ "+C.call(ae,", ")+" ]"}if(function(e){return!("[object Error]"!==G(e)||E&&"object"==typeof e&&E in e)}(t)){var ie=X(t,$);return"cause"in Error.prototype||!("cause"in t)||I.call(t,"cause")?0===ie.length?"["+String(t)+"]":"{ ["+String(t)+"] "+C.call(ie,", ")+" }":"{ ["+String(t)+"] "+C.call(k.call("[cause]: "+$(t.cause),ie),", ")+" }"}if("object"==typeof t&&c){if(D&&"function"==typeof t[D]&&R)return R(t,{depth:A-r});if("symbol"!==c&&"function"==typeof t.inspect)return t.inspect()}if(function(e){if(!i||!e||"object"!=typeof e)return!1;try{i.call(e);try{l.call(e)}catch(e){return!0}return e instanceof Map}catch(e){}return!1}(t)){var oe=[];return o&&o.call(t,(function(e,n){oe.push($(n,t,!0)+" => "+$(e,t))})),Z("Map",i.call(t),oe,T)}if(function(e){if(!l||!e||"object"!=typeof e)return!1;try{l.call(e);try{i.call(e)}catch(e){return!0}return e instanceof Set}catch(e){}return!1}(t)){var se=[];return u&&u.call(t,(function(e){se.push($(e,t))})),Z("Set",l.call(t),se,T)}if(function(e){if(!h||!e||"object"!=typeof e)return!1;try{h.call(e,h);try{d.call(e,d)}catch(e){return!0}return e instanceof WeakMap}catch(e){}return!1}(t))return Y("WeakMap");if(function(e){if(!d||!e||"object"!=typeof e)return!1;try{d.call(e,d);try{h.call(e,h)}catch(e){return!0}return e instanceof WeakSet}catch(e){}return!1}(t))return Y("WeakSet");if(function(e){if(!p||!e||"object"!=typeof e)return!1;try{return p.call(e),!0}catch(e){}return!1}(t))return Y("WeakRef");if(function(e){return!("[object Number]"!==G(e)||E&&"object"==typeof e&&E in e)}(t))return K($(Number(t)));if(function(e){if(!e||"object"!=typeof e||!P)return!1;try{return P.call(e),!0}catch(e){}return!1}(t))return K($(P.call(t)));if(function(e){return!("[object Boolean]"!==G(e)||E&&"object"==typeof e&&E in e)}(t))return K(f.call(t));if(function(e){return!("[object String]"!==G(e)||E&&"object"==typeof e&&E in e)}(t))return K($(String(t)));if("undefined"!=typeof window&&t===window)return"{ [object Window] }";if(t===global)return"{ [object globalThis] }";if(!function(e){return!("[object Date]"!==G(e)||E&&"object"==typeof e&&E in e)}(t)&&!q(t)){var ce=X(t,$),le=L?L(t)===Object.prototype:t instanceof Object||t.constructor===Object,ue=t instanceof Object?"":"null prototype",he=!le&&E&&Object(t)===t&&E in t?v.call(G(t),8,-1):ue?"Object":"",de=(le||"function"!=typeof t.constructor?"":t.constructor.name?t.constructor.name+" ":"")+(he||ue?"["+C.call(k.call([],he||[],ue||[]),": ")+"] ":"");return 0===ce.length?de+"{}":T?de+"{"+J(ce,T)+"}":de+"{ "+C.call(ce,", ")+" }"}return String(t)};var N=Object.prototype.hasOwnProperty||function(e){return e in this};function H(e,t){return N.call(e,t)}function G(e){return m.call(e)}function V(e,t){if(e.indexOf)return e.indexOf(t);for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1}function W(e){var t=e.charCodeAt(0),n={8:"b",9:"t",10:"n",12:"f",13:"r"}[t];return n?"\\"+n:"\\x"+(t<16?"0":"")+w.call(t.toString(16))}function K(e){return"Object("+e+")"}function Y(e){return e+" { ? }"}function Z(e,t,n,r){return e+" ("+t+") {"+(r?J(n,r):C.call(n,", "))+"}"}function J(e,t){if(0===e.length)return"";var n="\n"+t.prev+t.base;return n+C.call(e,","+n)+"\n"+t.prev}function X(e,t){var n=B(e),r=[];if(n){r.length=e.length;for(var a=0;a<e.length;a++)r[a]=H(e,a)?t(e[a],e):""}var i,o="function"==typeof T?T(e):[];if(O){i={};for(var s=0;s<o.length;s++)i["$"+o[s]]=o[s]}for(var c in e)H(e,c)&&(n&&String(Number(c))===c&&c<e.length||O&&i["$"+c]instanceof Symbol||(x.call(/[^\w$]/,c)?r.push(t(c,e)+": "+t(e[c],e)):r.push(c+": "+t(e[c],e))));if("function"==typeof T)for(var l=0;l<o.length;l++)I.call(e,o[l])&&r.push("["+t(o[l])+"]: "+t(e[o[l]],e));return r}},function(e,t){},function(e,t,n){"use strict";var r=n(99),a=Object.prototype.hasOwnProperty,i=Array.isArray,o={allowDots:!1,allowPrototypes:!1,allowSparse:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:r.decode,delimiter:"&",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},s=function(e){return e.replace(/&#(\d+);/g,(function(e,t){return String.fromCharCode(parseInt(t,10))}))},c=function(e,t){return e&&"string"==typeof e&&t.comma&&e.indexOf(",")>-1?e.split(","):e},l=function(e,t,n,r){if(e){var i=n.allowDots?e.replace(/\.([^.[]+)/g,"[$1]"):e,o=/(\[[^[\]]*])/g,s=n.depth>0&&/(\[[^[\]]*])/.exec(i),l=s?i.slice(0,s.index):i,u=[];if(l){if(!n.plainObjects&&a.call(Object.prototype,l)&&!n.allowPrototypes)return;u.push(l)}for(var h=0;n.depth>0&&null!==(s=o.exec(i))&&h<n.depth;){if(h+=1,!n.plainObjects&&a.call(Object.prototype,s[1].slice(1,-1))&&!n.allowPrototypes)return;u.push(s[1])}return s&&u.push("["+i.slice(s.index)+"]"),function(e,t,n,r){for(var a=r?t:c(t,n),i=e.length-1;i>=0;--i){var o,s=e[i];if("[]"===s&&n.parseArrays)o=[].concat(a);else{o=n.plainObjects?Object.create(null):{};var l="["===s.charAt(0)&&"]"===s.charAt(s.length-1)?s.slice(1,-1):s,u=parseInt(l,10);n.parseArrays||""!==l?!isNaN(u)&&s!==l&&String(u)===l&&u>=0&&n.parseArrays&&u<=n.arrayLimit?(o=[])[u]=a:"__proto__"!==l&&(o[l]=a):o={0:a}}a=o}return a}(u,t,n,r)}};e.exports=function(e,t){var n=function(e){if(!e)return o;if(null!==e.decoder&&void 0!==e.decoder&&"function"!=typeof e.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var t=void 0===e.charset?o.charset:e.charset;return{allowDots:void 0===e.allowDots?o.allowDots:!!e.allowDots,allowPrototypes:"boolean"==typeof e.allowPrototypes?e.allowPrototypes:o.allowPrototypes,allowSparse:"boolean"==typeof e.allowSparse?e.allowSparse:o.allowSparse,arrayLimit:"number"==typeof e.arrayLimit?e.arrayLimit:o.arrayLimit,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:o.charsetSentinel,comma:"boolean"==typeof e.comma?e.comma:o.comma,decoder:"function"==typeof e.decoder?e.decoder:o.decoder,delimiter:"string"==typeof e.delimiter||r.isRegExp(e.delimiter)?e.delimiter:o.delimiter,depth:"number"==typeof e.depth||!1===e.depth?+e.depth:o.depth,ignoreQueryPrefix:!0===e.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof e.interpretNumericEntities?e.interpretNumericEntities:o.interpretNumericEntities,parameterLimit:"number"==typeof e.parameterLimit?e.parameterLimit:o.parameterLimit,parseArrays:!1!==e.parseArrays,plainObjects:"boolean"==typeof e.plainObjects?e.plainObjects:o.plainObjects,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:o.strictNullHandling}}(t);if(""===e||null==e)return n.plainObjects?Object.create(null):{};for(var u="string"==typeof e?function(e,t){var n,l={__proto__:null},u=t.ignoreQueryPrefix?e.replace(/^\?/,""):e,h=t.parameterLimit===1/0?void 0:t.parameterLimit,d=u.split(t.delimiter,h),p=-1,f=t.charset;if(t.charsetSentinel)for(n=0;n<d.length;++n)0===d[n].indexOf("utf8=")&&("utf8=%E2%9C%93"===d[n]?f="utf-8":"utf8=%26%2310003%3B"===d[n]&&(f="iso-8859-1"),p=n,n=d.length);for(n=0;n<d.length;++n)if(n!==p){var m,g,y=d[n],v=y.indexOf("]="),b=-1===v?y.indexOf("="):v+1;-1===b?(m=t.decoder(y,o.decoder,f,"key"),g=t.strictNullHandling?null:""):(m=t.decoder(y.slice(0,b),o.decoder,f,"key"),g=r.maybeMap(c(y.slice(b+1),t),(function(e){return t.decoder(e,o.decoder,f,"value")}))),g&&t.interpretNumericEntities&&"iso-8859-1"===f&&(g=s(g)),y.indexOf("[]=")>-1&&(g=i(g)?[g]:g),a.call(l,m)?l[m]=r.combine(l[m],g):l[m]=g}return l}(e,n):e,h=n.plainObjects?Object.create(null):{},d=Object.keys(u),p=0;p<d.length;++p){var f=d[p],m=l(f,u[f],n,"string"==typeof e);h=r.merge(h,m,n)}return!0===n.allowSparse?h:r.compact(h)}},function(e,t,n){var r=n(13),a=n(284),i=n(285);e.exports=function(e){var t=r(e);return i(t,a(t))+1}},function(e,t){e.exports=function(e){var t=new Date(e.getTime()),n=t.getTimezoneOffset();return t.setSeconds(0,0),6e4*n+t.getTime()%6e4}},function(e,t,n){var r=n(13);e.exports=function(e){var t=r(e),n=new Date(0);return n.setFullYear(t.getFullYear(),0,1),n.setHours(0,0,0,0),n}},function(e,t,n){var r=n(286);e.exports=function(e,t){var n=r(e),a=r(t),i=n.getTime()-6e4*n.getTimezoneOffset(),o=a.getTime()-6e4*a.getTimezoneOffset();return Math.round((i-o)/864e5)}},function(e,t,n){var r=n(13);e.exports=function(e){var t=r(e);return t.setHours(0,0,0,0),t}},function(e,t,n){var r=n(13),a=n(53),i=n(289);e.exports=function(e){var t=r(e),n=a(t).getTime()-i(t).getTime();return Math.round(n/6048e5)+1}},function(e,t,n){var r=n(13);e.exports=function(e,t){var n=t&&Number(t.weekStartsOn)||0,a=r(e),i=a.getDay(),o=(i<n?7:0)+i-n;return a.setDate(a.getDate()-o),a.setHours(0,0,0,0),a}},function(e,t,n){var r=n(101),a=n(53);e.exports=function(e){var t=r(e),n=new Date(0);return n.setFullYear(t,0,4),n.setHours(0,0,0,0),a(n)}},function(e,t,n){var r=n(100);e.exports=function(e){if(r(e))return!isNaN(e);throw new TypeError(toString.call(e)+" is not an instance of Date")}},function(e,t,n){var r=n(292),a=n(293);e.exports={distanceInWords:r(),format:a()}},function(e,t){e.exports=function(){var e={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};return{localize:function(t,n,r){var a;return r=r||{},a="string"==typeof e[t]?e[t]:1===n?e[t].one:e[t].other.replace("{{count}}",n),r.addSuffix?r.comparison>0?"in "+a:a+" ago":a}}}},function(e,t,n){var r=n(294);e.exports=function(){var e=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],t=["January","February","March","April","May","June","July","August","September","October","November","December"],n=["Su","Mo","Tu","We","Th","Fr","Sa"],a=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],i=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],o=["AM","PM"],s=["am","pm"],c=["a.m.","p.m."],l={MMM:function(t){return e[t.getMonth()]},MMMM:function(e){return t[e.getMonth()]},dd:function(e){return n[e.getDay()]},ddd:function(e){return a[e.getDay()]},dddd:function(e){return i[e.getDay()]},A:function(e){return e.getHours()/12>=1?o[1]:o[0]},a:function(e){return e.getHours()/12>=1?s[1]:s[0]},aa:function(e){return e.getHours()/12>=1?c[1]:c[0]}};return["M","D","DDD","d","Q","W"].forEach((function(e){l[e+"o"]=function(t,n){return function(e){var t=e%100;if(t>20||t<10)switch(t%10){case 1:return e+"st";case 2:return e+"nd";case 3:return e+"rd"}return e+"th"}(n[e](t))}})),{formatters:l,formattingTokensRegExp:r(l)}}},function(e,t){var n=["M","MM","Q","D","DD","DDD","DDDD","d","E","W","WW","YY","YYYY","GG","GGGG","H","HH","h","hh","m","mm","s","ss","S","SS","SSS","Z","ZZ","X","x"];e.exports=function(e){var t=[];for(var r in e)e.hasOwnProperty(r)&&t.push(r);var a=n.concat(t).sort().reverse();return new RegExp("(\\[[^\\[]*\\])|(\\\\)?("+a.join("|")+"|.)","g")}},function(e,t,n){"use strict";var r=n(0),a=n(102),i=n(296),o=n(108);function s(e){var t=new i(e),n=a(i.prototype.request,t);return r.extend(n,i.prototype,t),r.extend(n,t),n}var c=s(n(54));c.Axios=i,c.create=function(e){return s(o(c.defaults,e))},c.Cancel=n(109),c.CancelToken=n(310),c.isCancel=n(107),c.all=function(e){return Promise.all(e)},c.spread=n(311),c.isAxiosError=n(312),e.exports=c,e.exports.default=c},function(e,t,n){"use strict";var r=n(0),a=n(103),i=n(297),o=n(298),s=n(108),c=n(308),l=c.validators;function u(e){this.defaults=e,this.interceptors={request:new i,response:new i}}u.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=s(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var t=e.transitional;void 0!==t&&c.assertOptions(t,{silentJSONParsing:l.transitional(l.boolean,"1.0.0"),forcedJSONParsing:l.transitional(l.boolean,"1.0.0"),clarifyTimeoutError:l.transitional(l.boolean,"1.0.0")},!1);var n=[],r=!0;this.interceptors.request.forEach((function(t){"function"==typeof t.runWhen&&!1===t.runWhen(e)||(r=r&&t.synchronous,n.unshift(t.fulfilled,t.rejected))}));var a,i=[];if(this.interceptors.response.forEach((function(e){i.push(e.fulfilled,e.rejected)})),!r){var u=[o,void 0];for(Array.prototype.unshift.apply(u,n),u=u.concat(i),a=Promise.resolve(e);u.length;)a=a.then(u.shift(),u.shift());return a}for(var h=e;n.length;){var d=n.shift(),p=n.shift();try{h=d(h)}catch(e){p(e);break}}try{a=o(h)}catch(e){return Promise.reject(e)}for(;i.length;)a=a.then(i.shift(),i.shift());return a},u.prototype.getUri=function(e){return e=s(this.defaults,e),a(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(e){u.prototype[e]=function(t,n){return this.request(s(n||{},{method:e,url:t,data:(n||{}).data}))}})),r.forEach(["post","put","patch"],(function(e){u.prototype[e]=function(t,n,r){return this.request(s(r||{},{method:e,url:t,data:n}))}})),e.exports=u},function(e,t,n){"use strict";var r=n(0);function a(){this.handlers=[]}a.prototype.use=function(e,t,n){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!n&&n.synchronous,runWhen:n?n.runWhen:null}),this.handlers.length-1},a.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},a.prototype.forEach=function(e){r.forEach(this.handlers,(function(t){null!==t&&e(t)}))},e.exports=a},function(e,t,n){"use strict";var r=n(0),a=n(299),i=n(107),o=n(54);function s(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return s(e),e.headers=e.headers||{},e.data=a.call(e,e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||o.adapter)(e).then((function(t){return s(e),t.data=a.call(e,t.data,t.headers,e.transformResponse),t}),(function(t){return i(t)||(s(e),t&&t.response&&(t.response.data=a.call(e,t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))}},function(e,t,n){"use strict";var r=n(0),a=n(54);e.exports=function(e,t,n){var i=this||a;return r.forEach(n,(function(n){e=n.call(i,e,t)})),e}},function(e,t,n){"use strict";var r=n(0);e.exports=function(e,t){r.forEach(e,(function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])}))}},function(e,t,n){"use strict";var r=n(106);e.exports=function(e,t,n){var a=n.config.validateStatus;n.status&&a&&!a(n.status)?t(r("Request failed with status code "+n.status,n.config,null,n.request,n)):e(n)}},function(e,t,n){"use strict";var r=n(0);e.exports=r.isStandardBrowserEnv()?{write:function(e,t,n,a,i,o){var s=[];s.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&s.push("expires="+new Date(n).toGMTString()),r.isString(a)&&s.push("path="+a),r.isString(i)&&s.push("domain="+i),!0===o&&s.push("secure"),document.cookie=s.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(e,t,n){"use strict";var r=n(304),a=n(305);e.exports=function(e,t){return e&&!r(t)?a(e,t):t}},function(e,t,n){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,t,n){"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},function(e,t,n){"use strict";var r=n(0),a=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,i,o={};return e?(r.forEach(e.split("\n"),(function(e){if(i=e.indexOf(":"),t=r.trim(e.substr(0,i)).toLowerCase(),n=r.trim(e.substr(i+1)),t){if(o[t]&&a.indexOf(t)>=0)return;o[t]="set-cookie"===t?(o[t]?o[t]:[]).concat([n]):o[t]?o[t]+", "+n:n}})),o):o}},function(e,t,n){"use strict";var r=n(0);e.exports=r.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function a(e){var r=e;return t&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=a(window.location.href),function(t){var n=r.isString(t)?a(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0}},function(e,t,n){"use strict";var r=n(309),a={};["object","boolean","number","function","string","symbol"].forEach((function(e,t){a[e]=function(n){return typeof n===e||"a"+(t<1?"n ":" ")+e}}));var i={},o=r.version.split(".");function s(e,t){for(var n=t?t.split("."):o,r=e.split("."),a=0;a<3;a++){if(n[a]>r[a])return!0;if(n[a]<r[a])return!1}return!1}a.transitional=function(e,t,n){var a=t&&s(t);function o(e,t){return"[Axios v"+r.version+"] Transitional option '"+e+"'"+t+(n?". "+n:"")}return function(n,r,s){if(!1===e)throw new Error(o(r," has been removed in "+t));return a&&!i[r]&&(i[r]=!0,console.warn(o(r," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(n,r,s)}},e.exports={isOlderVersion:s,assertOptions:function(e,t,n){if("object"!=typeof e)throw new TypeError("options must be an object");for(var r=Object.keys(e),a=r.length;a-- >0;){var i=r[a],o=t[i];if(o){var s=e[i],c=void 0===s||o(s,i,e);if(!0!==c)throw new TypeError("option "+i+" must be "+c)}else if(!0!==n)throw Error("Unknown option "+i)}},validators:a}},function(e){e.exports=JSON.parse('{"name":"axios","version":"0.21.4","description":"Promise based HTTP client for the browser and node.js","main":"index.js","scripts":{"test":"grunt test","start":"node ./sandbox/server.js","build":"NODE_ENV=production grunt build","preversion":"npm test","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json","postversion":"git push && git push --tags","examples":"node ./examples/server.js","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","fix":"eslint --fix lib/**/*.js"},"repository":{"type":"git","url":"https://github.com/axios/axios.git"},"keywords":["xhr","http","ajax","promise","node"],"author":"Matt Zabriskie","license":"MIT","bugs":{"url":"https://github.com/axios/axios/issues"},"homepage":"https://axios-http.com","devDependencies":{"coveralls":"^3.0.0","es6-promise":"^4.2.4","grunt":"^1.3.0","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^23.0.0","grunt-karma":"^4.0.0","grunt-mocha-test":"^0.13.3","grunt-ts":"^6.0.0-beta.19","grunt-webpack":"^4.0.2","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^6.3.2","karma-chrome-launcher":"^3.1.0","karma-firefox-launcher":"^2.1.0","karma-jasmine":"^1.1.1","karma-jasmine-ajax":"^0.1.13","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^4.3.6","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.8","karma-webpack":"^4.0.2","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","mocha":"^8.2.1","sinon":"^4.5.0","terser-webpack-plugin":"^4.2.3","typescript":"^4.0.5","url-search-params":"^0.10.0","webpack":"^4.44.2","webpack-dev-server":"^3.11.0"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"jsdelivr":"dist/axios.min.js","unpkg":"dist/axios.min.js","typings":"./index.d.ts","dependencies":{"follow-redirects":"^1.14.0"},"bundlesize":[{"path":"./dist/axios.min.js","threshold":"5kB"}]}')},function(e,t,n){"use strict";var r=n(109);function a(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var n=this;e((function(e){n.reason||(n.reason=new r(e),t(n.reason))}))}a.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},a.source=function(){var e;return{token:new a((function(t){e=t})),cancel:e}},e.exports=a},function(e,t,n){"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},function(e,t,n){"use strict";e.exports=function(e){return"object"==typeof e&&!0===e.isAxiosError}},function(e,t){},function(e,t){function n(e,t){for(var n=0,r=e.length-1;r>=0;r--){var a=e[r];"."===a?e.splice(r,1):".."===a?(e.splice(r,1),n++):n&&(e.splice(r,1),n--)}if(t)for(;n--;n)e.unshift("..");return e}function r(e,t){if(e.filter)return e.filter(t);for(var n=[],r=0;r<e.length;r++)t(e[r],r,e)&&n.push(e[r]);return n}t.resolve=function(){for(var e="",t=!1,a=arguments.length-1;a>=-1&&!t;a--){var i=a>=0?arguments[a]:process.cwd();if("string"!=typeof i)throw new TypeError("Arguments to path.resolve must be strings");i&&(e=i+"/"+e,t="/"===i.charAt(0))}return(t?"/":"")+(e=n(r(e.split("/"),(function(e){return!!e})),!t).join("/"))||"."},t.normalize=function(e){var i=t.isAbsolute(e),o="/"===a(e,-1);return(e=n(r(e.split("/"),(function(e){return!!e})),!i).join("/"))||i||(e="."),e&&o&&(e+="/"),(i?"/":"")+e},t.isAbsolute=function(e){return"/"===e.charAt(0)},t.join=function(){var e=Array.prototype.slice.call(arguments,0);return t.normalize(r(e,(function(e,t){if("string"!=typeof e)throw new TypeError("Arguments to path.join must be strings");return e})).join("/"))},t.relative=function(e,n){function r(e){for(var t=0;t<e.length&&""===e[t];t++);for(var n=e.length-1;n>=0&&""===e[n];n--);return t>n?[]:e.slice(t,n-t+1)}e=t.resolve(e).substr(1),n=t.resolve(n).substr(1);for(var a=r(e.split("/")),i=r(n.split("/")),o=Math.min(a.length,i.length),s=o,c=0;c<o;c++)if(a[c]!==i[c]){s=c;break}var l=[];for(c=s;c<a.length;c++)l.push("..");return(l=l.concat(i.slice(s))).join("/")},t.sep="/",t.delimiter=":",t.dirname=function(e){if("string"!=typeof e&&(e+=""),0===e.length)return".";for(var t=e.charCodeAt(0),n=47===t,r=-1,a=!0,i=e.length-1;i>=1;--i)if(47===(t=e.charCodeAt(i))){if(!a){r=i;break}}else a=!1;return-1===r?n?"/":".":n&&1===r?"/":e.slice(0,r)},t.basename=function(e,t){var n=function(e){"string"!=typeof e&&(e+="");var t,n=0,r=-1,a=!0;for(t=e.length-1;t>=0;--t)if(47===e.charCodeAt(t)){if(!a){n=t+1;break}}else-1===r&&(a=!1,r=t+1);return-1===r?"":e.slice(n,r)}(e);return t&&n.substr(-1*t.length)===t&&(n=n.substr(0,n.length-t.length)),n},t.extname=function(e){"string"!=typeof e&&(e+="");for(var t=-1,n=0,r=-1,a=!0,i=0,o=e.length-1;o>=0;--o){var s=e.charCodeAt(o);if(47!==s)-1===r&&(a=!1,r=o+1),46===s?-1===t?t=o:1!==i&&(i=1):-1!==t&&(i=-1);else if(!a){n=o+1;break}}return-1===t||-1===r||0===i||1===i&&t===r-1&&t===n+1?"":e.slice(t,r)};var a="b"==="ab".substr(-1)?function(e,t,n){return e.substr(t,n)}:function(e,t,n){return t<0&&(t=e.length+t),e.substr(t,n)}},function(e,t,n){"use strict";var r=/[|\\{}()[\]^$+*?.]/g,a=Object.prototype.hasOwnProperty,i=function(e,t){return a.apply(e,[t])};t.escapeRegExpChars=function(e){return e?String(e).replace(r,"\\$&"):""};var o={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},s=/[&<>'"]/g;function c(e){return o[e]||e}function l(){return Function.prototype.toString.call(this)+';\nvar _ENCODE_HTML_RULES = {\n      "&": "&amp;"\n    , "<": "&lt;"\n    , ">": "&gt;"\n    , \'"\': "&#34;"\n    , "\'": "&#39;"\n    }\n  , _MATCH_HTML = /[&<>\'"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n'}t.escapeXML=function(e){return null==e?"":String(e).replace(s,c)};try{"function"==typeof Object.defineProperty?Object.defineProperty(t.escapeXML,"toString",{value:l}):t.escapeXML.toString=l}catch(e){console.warn("Unable to set escapeXML.toString (is the Function prototype frozen?)")}t.shallowCopy=function(e,t){if(t=t||{},null!=e)for(var n in t)i(t,n)&&"__proto__"!==n&&"constructor"!==n&&(e[n]=t[n]);return e},t.shallowCopyFromList=function(e,t,n){if(n=n||[],t=t||{},null!=e)for(var r=0;r<n.length;r++){var a=n[r];if(void 0!==t[a]){if(!i(t,a))continue;if("__proto__"===a||"constructor"===a)continue;e[a]=t[a]}}return e},t.cache={_data:{},set:function(e,t){this._data[e]=t},get:function(e){return this._data[e]},remove:function(e){delete this._data[e]},reset:function(){this._data={}}},t.hyphenToCamel=function(e){return e.replace(/-[a-z]/g,(function(e){return e[1].toUpperCase()}))},t.createNullProtoObjWherePossible="function"==typeof Object.create?function(){return Object.create(null)}:{__proto__:null}instanceof Object?function(){return{}}:function(){return{__proto__:null}}},function(e){e.exports=JSON.parse('{"name":"ejs","description":"Embedded JavaScript templates","keywords":["template","engine","ejs"],"version":"3.1.9","author":"Matthew Eernisse <mde@fleegix.org> (http://fleegix.org)","license":"Apache-2.0","bin":{"ejs":"./bin/cli.js"},"main":"./lib/ejs.js","jsdelivr":"ejs.min.js","unpkg":"ejs.min.js","repository":{"type":"git","url":"git://github.com/mde/ejs.git"},"bugs":"https://github.com/mde/ejs/issues","homepage":"https://github.com/mde/ejs","dependencies":{"jake":"^10.8.5"},"devDependencies":{"browserify":"^16.5.1","eslint":"^6.8.0","git-directory-deploy":"^1.5.1","jsdoc":"^4.0.2","lru-cache":"^4.0.1","mocha":"^10.2.0","uglify-js":"^3.3.16"},"engines":{"node":">=0.10.0"},"scripts":{"test":"mocha -u tdd"}}')},function(e,t,n){},function(e,t,n){"use strict";n(110)},function(e,t,n){"use strict";n(111)},function(e,t,n){"use strict";n.r(t);
/*!
 * Vue.js v2.7.16
 * (c) 2014-2023 Evan You
 * Released under the MIT License.
 */
var r=Object.freeze({}),a=Array.isArray;function i(e){return null==e}function o(e){return null!=e}function s(e){return!0===e}function c(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function l(e){return"function"==typeof e}function u(e){return null!==e&&"object"==typeof e}var h=Object.prototype.toString;function d(e){return"[object Object]"===h.call(e)}function p(e){return"[object RegExp]"===h.call(e)}function f(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function m(e){return o(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function g(e){return null==e?"":Array.isArray(e)||d(e)&&e.toString===h?JSON.stringify(e,y,2):String(e)}function y(e,t){return t&&t.__v_isRef?t.value:t}function v(e){var t=parseFloat(e);return isNaN(t)?e:t}function b(e,t){for(var n=Object.create(null),r=e.split(","),a=0;a<r.length;a++)n[r[a]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}b("slot,component",!0);var w=b("key,ref,slot,slot-scope,is");function _(e,t){var n=e.length;if(n){if(t===e[n-1])return void(e.length=n-1);var r=e.indexOf(t);if(r>-1)return e.splice(r,1)}}var x=Object.prototype.hasOwnProperty;function k(e,t){return x.call(e,t)}function C(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var M=/-(\w)/g,A=C((function(e){return e.replace(M,(function(e,t){return t?t.toUpperCase():""}))})),P=C((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),T=/\B([A-Z])/g,S=C((function(e){return e.replace(T,"-$1").toLowerCase()}));var O=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var r=arguments.length;return r?r>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function E(e,t){t=t||0;for(var n=e.length-t,r=new Array(n);n--;)r[n]=e[n+t];return r}function I(e,t){for(var n in t)e[n]=t[n];return e}function L(e){for(var t={},n=0;n<e.length;n++)e[n]&&I(t,e[n]);return t}function j(e,t,n){}var R=function(e,t,n){return!1},$=function(e){return e};function D(e,t){if(e===t)return!0;var n=u(e),r=u(t);if(!n||!r)return!n&&!r&&String(e)===String(t);try{var a=Array.isArray(e),i=Array.isArray(t);if(a&&i)return e.length===t.length&&e.every((function(e,n){return D(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(a||i)return!1;var o=Object.keys(e),s=Object.keys(t);return o.length===s.length&&o.every((function(n){return D(e[n],t[n])}))}catch(e){return!1}}function z(e,t){for(var n=0;n<e.length;n++)if(D(e[n],t))return n;return-1}function U(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}function B(e,t){return e===t?0===e&&1/e!=1/t:e==e||t==t}var q=["component","directive","filter"],F=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],N={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:R,isReservedAttr:R,isUnknownElement:R,getTagNamespace:j,parsePlatformTagName:$,mustUseProp:R,async:!0,_lifecycleHooks:F},H=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function G(e){var t=(e+"").charCodeAt(0);return 36===t||95===t}function V(e,t,n,r){Object.defineProperty(e,t,{value:n,enumerable:!!r,writable:!0,configurable:!0})}var W=new RegExp("[^".concat(H.source,".$_\\d]"));var K="__proto__"in{},Y="undefined"!=typeof window,Z=Y&&window.navigator.userAgent.toLowerCase(),J=Z&&/msie|trident/.test(Z),X=Z&&Z.indexOf("msie 9.0")>0,Q=Z&&Z.indexOf("edge/")>0;Z&&Z.indexOf("android");var ee=Z&&/iphone|ipad|ipod|ios/.test(Z);Z&&/chrome\/\d+/.test(Z),Z&&/phantomjs/.test(Z);var te,ne=Z&&Z.match(/firefox\/(\d+)/),re={}.watch,ae=!1;if(Y)try{var ie={};Object.defineProperty(ie,"passive",{get:function(){ae=!0}}),window.addEventListener("test-passive",null,ie)}catch(e){}var oe=function(){return void 0===te&&(te=!Y&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),te},se=Y&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function ce(e){return"function"==typeof e&&/native code/.test(e.toString())}var le,ue="undefined"!=typeof Symbol&&ce(Symbol)&&"undefined"!=typeof Reflect&&ce(Reflect.ownKeys);le="undefined"!=typeof Set&&ce(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var he=null;function de(e){void 0===e&&(e=null),e||he&&he._scope.off(),he=e,e&&e._scope.on()}var pe=function(){function e(e,t,n,r,a,i,o,s){this.tag=e,this.data=t,this.children=n,this.text=r,this.elm=a,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=o,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(e.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),e}(),fe=function(e){void 0===e&&(e="");var t=new pe;return t.text=e,t.isComment=!0,t};function me(e){return new pe(void 0,void 0,void 0,String(e))}function ge(e){var t=new pe(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}"function"==typeof SuppressedError&&SuppressedError;var ye=0,ve=[],be=function(){function e(){this._pending=!1,this.id=ye++,this.subs=[]}return e.prototype.addSub=function(e){this.subs.push(e)},e.prototype.removeSub=function(e){this.subs[this.subs.indexOf(e)]=null,this._pending||(this._pending=!0,ve.push(this))},e.prototype.depend=function(t){e.target&&e.target.addDep(this)},e.prototype.notify=function(e){var t=this.subs.filter((function(e){return e}));for(var n=0,r=t.length;n<r;n++){0,t[n].update()}},e}();be.target=null;var we=[];function _e(e){we.push(e),be.target=e}function xe(){we.pop(),be.target=we[we.length-1]}var ke=Array.prototype,Ce=Object.create(ke);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=ke[e];V(Ce,e,(function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];var a,i=t.apply(this,n),o=this.__ob__;switch(e){case"push":case"unshift":a=n;break;case"splice":a=n.slice(2)}return a&&o.observeArray(a),o.dep.notify(),i}))}));var Me=Object.getOwnPropertyNames(Ce),Ae={},Pe=!0;function Te(e){Pe=e}var Se={notify:j,depend:j,addSub:j,removeSub:j},Oe=function(){function e(e,t,n){if(void 0===t&&(t=!1),void 0===n&&(n=!1),this.value=e,this.shallow=t,this.mock=n,this.dep=n?Se:new be,this.vmCount=0,V(e,"__ob__",this),a(e)){if(!n)if(K)e.__proto__=Ce;else for(var r=0,i=Me.length;r<i;r++){V(e,s=Me[r],Ce[s])}t||this.observeArray(e)}else{var o=Object.keys(e);for(r=0;r<o.length;r++){var s;Ie(e,s=o[r],Ae,void 0,t,n)}}}return e.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)Ee(e[t],!1,this.mock)},e}();function Ee(e,t,n){return e&&k(e,"__ob__")&&e.__ob__ instanceof Oe?e.__ob__:!Pe||!n&&oe()||!a(e)&&!d(e)||!Object.isExtensible(e)||e.__v_skip||Ue(e)||e instanceof pe?void 0:new Oe(e,t,n)}function Ie(e,t,n,r,i,o,s){void 0===s&&(s=!1);var c=new be,l=Object.getOwnPropertyDescriptor(e,t);if(!l||!1!==l.configurable){var u=l&&l.get,h=l&&l.set;u&&!h||n!==Ae&&2!==arguments.length||(n=e[t]);var d=i?n&&n.__ob__:Ee(n,!1,o);return Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=u?u.call(e):n;return be.target&&(c.depend(),d&&(d.dep.depend(),a(t)&&Re(t))),Ue(t)&&!i?t.value:t},set:function(t){var r=u?u.call(e):n;if(B(r,t)){if(h)h.call(e,t);else{if(u)return;if(!i&&Ue(r)&&!Ue(t))return void(r.value=t);n=t}d=i?t&&t.__ob__:Ee(t,!1,o),c.notify()}}}),c}}function Le(e,t,n){if(!ze(e)){var r=e.__ob__;return a(e)&&f(t)?(e.length=Math.max(e.length,t),e.splice(t,1,n),r&&!r.shallow&&r.mock&&Ee(n,!1,!0),n):t in e&&!(t in Object.prototype)?(e[t]=n,n):e._isVue||r&&r.vmCount?n:r?(Ie(r.value,t,n,void 0,r.shallow,r.mock),r.dep.notify(),n):(e[t]=n,n)}}function je(e,t){if(a(e)&&f(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||ze(e)||k(e,t)&&(delete e[t],n&&n.dep.notify())}}function Re(e){for(var t=void 0,n=0,r=e.length;n<r;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),a(t)&&Re(t)}function $e(e){return De(e,!0),V(e,"__v_isShallow",!0),e}function De(e,t){if(!ze(e)){Ee(e,t,oe());0}}function ze(e){return!(!e||!e.__v_isReadonly)}function Ue(e){return!(!e||!0!==e.__v_isRef)}function Be(e,t,n){Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var e=t[n];if(Ue(e))return e.value;var r=e&&e.__ob__;return r&&r.dep.depend(),e},set:function(e){var r=t[n];Ue(r)&&!Ue(e)?r.value=e:t[n]=e}})}"".concat("watcher"," callback"),"".concat("watcher"," getter"),"".concat("watcher"," cleanup");var qe;var Fe=function(){function e(e){void 0===e&&(e=!1),this.detached=e,this.active=!0,this.effects=[],this.cleanups=[],this.parent=qe,!e&&qe&&(this.index=(qe.scopes||(qe.scopes=[])).push(this)-1)}return e.prototype.run=function(e){if(this.active){var t=qe;try{return qe=this,e()}finally{qe=t}}else 0},e.prototype.on=function(){qe=this},e.prototype.off=function(){qe=this.parent},e.prototype.stop=function(e){if(this.active){var t=void 0,n=void 0;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].teardown();for(t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.scopes)for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!e){var r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0,this.active=!1}},e}();function Ne(e){var t=e._provided,n=e.$parent&&e.$parent._provided;return n===t?e._provided=Object.create(n):t}var He=C((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),r="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=r?e.slice(1):e,once:n,capture:r,passive:t}}));function Ge(e,t){function n(){var e=n.fns;if(!a(e))return Pt(e,null,arguments,t,"v-on handler");for(var r=e.slice(),i=0;i<r.length;i++)Pt(r[i],null,arguments,t,"v-on handler")}return n.fns=e,n}function Ve(e,t,n,r,a,o){var c,l,u,h;for(c in e)l=e[c],u=t[c],h=He(c),i(l)||(i(u)?(i(l.fns)&&(l=e[c]=Ge(l,o)),s(h.once)&&(l=e[c]=a(h.name,l,h.capture)),n(h.name,l,h.capture,h.passive,h.params)):l!==u&&(u.fns=l,e[c]=u));for(c in t)i(e[c])&&r((h=He(c)).name,t[c],h.capture)}function We(e,t,n){var r;e instanceof pe&&(e=e.data.hook||(e.data.hook={}));var a=e[t];function c(){n.apply(this,arguments),_(r.fns,c)}i(a)?r=Ge([c]):o(a.fns)&&s(a.merged)?(r=a).fns.push(c):r=Ge([a,c]),r.merged=!0,e[t]=r}function Ke(e,t,n,r,a){if(o(t)){if(k(t,n))return e[n]=t[n],a||delete t[n],!0;if(k(t,r))return e[n]=t[r],a||delete t[r],!0}return!1}function Ye(e){return c(e)?[me(e)]:a(e)?function e(t,n){var r,l,u,h,d=[];for(r=0;r<t.length;r++)i(l=t[r])||"boolean"==typeof l||(u=d.length-1,h=d[u],a(l)?l.length>0&&(Ze((l=e(l,"".concat(n||"","_").concat(r)))[0])&&Ze(h)&&(d[u]=me(h.text+l[0].text),l.shift()),d.push.apply(d,l)):c(l)?Ze(h)?d[u]=me(h.text+l):""!==l&&d.push(me(l)):Ze(l)&&Ze(h)?d[u]=me(h.text+l.text):(s(t._isVList)&&o(l.tag)&&i(l.key)&&o(n)&&(l.key="__vlist".concat(n,"_").concat(r,"__")),d.push(l)));return d}(e):void 0}function Ze(e){return o(e)&&o(e.text)&&!1===e.isComment}function Je(e,t){var n,r,i,s,c=null;if(a(e)||"string"==typeof e)for(c=new Array(e.length),n=0,r=e.length;n<r;n++)c[n]=t(e[n],n);else if("number"==typeof e)for(c=new Array(e),n=0;n<e;n++)c[n]=t(n+1,n);else if(u(e))if(ue&&e[Symbol.iterator]){c=[];for(var l=e[Symbol.iterator](),h=l.next();!h.done;)c.push(t(h.value,c.length)),h=l.next()}else for(i=Object.keys(e),c=new Array(i.length),n=0,r=i.length;n<r;n++)s=i[n],c[n]=t(e[s],s,n);return o(c)||(c=[]),c._isVList=!0,c}function Xe(e,t,n,r){var a,i=this.$scopedSlots[e];i?(n=n||{},r&&(n=I(I({},r),n)),a=i(n)||(l(t)?t():t)):a=this.$slots[e]||(l(t)?t():t);var o=n&&n.slot;return o?this.$createElement("template",{slot:o},a):a}function Qe(e){return En(this.$options,"filters",e,!0)||$}function et(e,t){return a(e)?-1===e.indexOf(t):e!==t}function tt(e,t,n,r,a){var i=N.keyCodes[t]||n;return a&&r&&!N.keyCodes[t]?et(a,r):i?et(i,e):r?S(r)!==t:void 0===e}function nt(e,t,n,r,i){if(n)if(u(n)){a(n)&&(n=L(n));var o=void 0,s=function(a){if("class"===a||"style"===a||w(a))o=e;else{var s=e.attrs&&e.attrs.type;o=r||N.mustUseProp(t,s,a)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var c=A(a),l=S(a);c in o||l in o||(o[a]=n[a],i&&((e.on||(e.on={}))["update:".concat(a)]=function(e){n[a]=e}))};for(var c in n)s(c)}else;return e}function rt(e,t){var n=this._staticTrees||(this._staticTrees=[]),r=n[e];return r&&!t||it(r=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,this._c,this),"__static__".concat(e),!1),r}function at(e,t,n){return it(e,"__once__".concat(t).concat(n?"_".concat(n):""),!0),e}function it(e,t,n){if(a(e))for(var r=0;r<e.length;r++)e[r]&&"string"!=typeof e[r]&&ot(e[r],"".concat(t,"_").concat(r),n);else ot(e,t,n)}function ot(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function st(e,t){if(t)if(d(t)){var n=e.on=e.on?I({},e.on):{};for(var r in t){var a=n[r],i=t[r];n[r]=a?[].concat(a,i):i}}else;return e}function ct(e,t,n,r){t=t||{$stable:!n};for(var i=0;i<e.length;i++){var o=e[i];a(o)?ct(o,t,n):o&&(o.proxy&&(o.fn.proxy=!0),t[o.key]=o.fn)}return r&&(t.$key=r),t}function lt(e,t){for(var n=0;n<t.length;n+=2){var r=t[n];"string"==typeof r&&r&&(e[t[n]]=t[n+1])}return e}function ut(e,t){return"string"==typeof e?t+e:e}function ht(e){e._o=at,e._n=v,e._s=g,e._l=Je,e._t=Xe,e._q=D,e._i=z,e._m=rt,e._f=Qe,e._k=tt,e._b=nt,e._v=me,e._e=fe,e._u=ct,e._g=st,e._d=lt,e._p=ut}function dt(e,t){if(!e||!e.length)return{};for(var n={},r=0,a=e.length;r<a;r++){var i=e[r],o=i.data;if(o&&o.attrs&&o.attrs.slot&&delete o.attrs.slot,i.context!==t&&i.fnContext!==t||!o||null==o.slot)(n.default||(n.default=[])).push(i);else{var s=o.slot,c=n[s]||(n[s]=[]);"template"===i.tag?c.push.apply(c,i.children||[]):c.push(i)}}for(var l in n)n[l].every(pt)&&delete n[l];return n}function pt(e){return e.isComment&&!e.asyncFactory||" "===e.text}function ft(e){return e.isComment&&e.asyncFactory}function mt(e,t,n,a){var i,o=Object.keys(n).length>0,s=t?!!t.$stable:!o,c=t&&t.$key;if(t){if(t._normalized)return t._normalized;if(s&&a&&a!==r&&c===a.$key&&!o&&!a.$hasNormal)return a;for(var l in i={},t)t[l]&&"$"!==l[0]&&(i[l]=gt(e,n,l,t[l]))}else i={};for(var u in n)u in i||(i[u]=yt(n,u));return t&&Object.isExtensible(t)&&(t._normalized=i),V(i,"$stable",s),V(i,"$key",c),V(i,"$hasNormal",o),i}function gt(e,t,n,r){var i=function(){var t=he;de(e);var n=arguments.length?r.apply(null,arguments):r({}),i=(n=n&&"object"==typeof n&&!a(n)?[n]:Ye(n))&&n[0];return de(t),n&&(!i||1===n.length&&i.isComment&&!ft(i))?void 0:n};return r.proxy&&Object.defineProperty(t,n,{get:i,enumerable:!0,configurable:!0}),i}function yt(e,t){return function(){return e[t]}}function vt(e){return{get attrs(){if(!e._attrsProxy){var t=e._attrsProxy={};V(t,"_v_attr_proxy",!0),bt(t,e.$attrs,r,e,"$attrs")}return e._attrsProxy},get listeners(){e._listenersProxy||bt(e._listenersProxy={},e.$listeners,r,e,"$listeners");return e._listenersProxy},get slots(){return function(e){e._slotsProxy||_t(e._slotsProxy={},e.$scopedSlots);return e._slotsProxy}(e)},emit:O(e.$emit,e),expose:function(t){t&&Object.keys(t).forEach((function(n){return Be(e,t,n)}))}}}function bt(e,t,n,r,a){var i=!1;for(var o in t)o in e?t[o]!==n[o]&&(i=!0):(i=!0,wt(e,o,r,a));for(var o in e)o in t||(i=!0,delete e[o]);return i}function wt(e,t,n,r){Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){return n[r][t]}})}function _t(e,t){for(var n in t)e[n]=t[n];for(var n in e)n in t||delete e[n]}var xt=null;function kt(e,t){return(e.__esModule||ue&&"Module"===e[Symbol.toStringTag])&&(e=e.default),u(e)?t.extend(e):e}function Ct(e){if(a(e))for(var t=0;t<e.length;t++){var n=e[t];if(o(n)&&(o(n.componentOptions)||ft(n)))return n}}function Mt(e,t,n,r,h,d){return(a(n)||c(n))&&(h=r,r=n,n=void 0),s(d)&&(h=2),function(e,t,n,r,c){if(o(n)&&o(n.__ob__))return fe();o(n)&&o(n.is)&&(t=n.is);if(!t)return fe();0;a(r)&&l(r[0])&&((n=n||{}).scopedSlots={default:r[0]},r.length=0);2===c?r=Ye(r):1===c&&(r=function(e){for(var t=0;t<e.length;t++)if(a(e[t]))return Array.prototype.concat.apply([],e);return e}(r));var h,d;if("string"==typeof t){var p=void 0;d=e.$vnode&&e.$vnode.ns||N.getTagNamespace(t),h=N.isReservedTag(t)?new pe(N.parsePlatformTagName(t),n,r,void 0,void 0,e):n&&n.pre||!o(p=En(e.$options,"components",t))?new pe(t,n,r,void 0,void 0,e):_n(p,n,e,r,t)}else h=_n(t,n,e,r);return a(h)?h:o(h)?(o(d)&&function e(t,n,r){t.ns=n,"foreignObject"===t.tag&&(n=void 0,r=!0);if(o(t.children))for(var a=0,c=t.children.length;a<c;a++){var l=t.children[a];o(l.tag)&&(i(l.ns)||s(r)&&"svg"!==l.tag)&&e(l,n,r)}}(h,d),o(n)&&function(e){u(e.style)&&Ft(e.style);u(e.class)&&Ft(e.class)}(n),h):fe()}(e,t,n,r,h)}function At(e,t,n){_e();try{if(t)for(var r=t;r=r.$parent;){var a=r.$options.errorCaptured;if(a)for(var i=0;i<a.length;i++)try{if(!1===a[i].call(r,e,t,n))return}catch(e){Tt(e,r,"errorCaptured hook")}}Tt(e,t,n)}finally{xe()}}function Pt(e,t,n,r,a){var i;try{(i=n?e.apply(t,n):e.call(t))&&!i._isVue&&m(i)&&!i._handled&&(i.catch((function(e){return At(e,r,a+" (Promise/async)")})),i._handled=!0)}catch(e){At(e,r,a)}return i}function Tt(e,t,n){if(N.errorHandler)try{return N.errorHandler.call(null,e,t,n)}catch(t){t!==e&&St(t,null,"config.errorHandler")}St(e,t,n)}function St(e,t,n){if(!Y||"undefined"==typeof console)throw e;console.error(e)}var Ot,Et=!1,It=[],Lt=!1;function jt(){Lt=!1;var e=It.slice(0);It.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&ce(Promise)){var Rt=Promise.resolve();Ot=function(){Rt.then(jt),ee&&setTimeout(j)},Et=!0}else if(J||"undefined"==typeof MutationObserver||!ce(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ot="undefined"!=typeof setImmediate&&ce(setImmediate)?function(){setImmediate(jt)}:function(){setTimeout(jt,0)};else{var $t=1,Dt=new MutationObserver(jt),zt=document.createTextNode(String($t));Dt.observe(zt,{characterData:!0}),Ot=function(){$t=($t+1)%2,zt.data=String($t)},Et=!0}function Ut(e,t){var n;if(It.push((function(){if(e)try{e.call(t)}catch(e){At(e,t,"nextTick")}else n&&n(t)})),Lt||(Lt=!0,Ot()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}function Bt(e){return function(t,n){if(void 0===n&&(n=he),n)return function(e,t,n){var r=e.$options;r[t]=Pn(r[t],n)}(n,e,t)}}Bt("beforeMount"),Bt("mounted"),Bt("beforeUpdate"),Bt("updated"),Bt("beforeDestroy"),Bt("destroyed"),Bt("activated"),Bt("deactivated"),Bt("serverPrefetch"),Bt("renderTracked"),Bt("renderTriggered"),Bt("errorCaptured");var qt=new le;function Ft(e){return function e(t,n){var r,i,o=a(t);if(!o&&!u(t)||t.__v_skip||Object.isFrozen(t)||t instanceof pe)return;if(t.__ob__){var s=t.__ob__.dep.id;if(n.has(s))return;n.add(s)}if(o)for(r=t.length;r--;)e(t[r],n);else if(Ue(t))e(t.value,n);else for(i=Object.keys(t),r=i.length;r--;)e(t[i[r]],n)}(e,qt),qt.clear(),e}var Nt,Ht=0,Gt=function(){function e(e,t,n,r,a){var i,o;i=this,void 0===(o=qe&&!qe._vm?qe:e?e._scope:void 0)&&(o=qe),o&&o.active&&o.effects.push(i),(this.vm=e)&&a&&(e._watcher=this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++Ht,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new le,this.newDepIds=new le,this.expression="",l(t)?this.getter=t:(this.getter=function(e){if(!W.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=j)),this.value=this.lazy?void 0:this.get()}return e.prototype.get=function(){var e;_e(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;At(e,t,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&Ft(e),xe(),this.cleanupDeps()}return e},e.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},e.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},e.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():pn(this)},e.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||u(e)||this.deep){var t=this.value;if(this.value=e,this.user){var n='callback for watcher "'.concat(this.expression,'"');Pt(this.cb,this.vm,[e,t],this.vm,n)}else this.cb.call(this.vm,e,t)}}},e.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},e.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},e.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&_(this.vm._scope.effects,this),this.active){for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},e}();function Vt(e,t){Nt.$on(e,t)}function Wt(e,t){Nt.$off(e,t)}function Kt(e,t){var n=Nt;return function r(){var a=t.apply(null,arguments);null!==a&&n.$off(e,r)}}function Yt(e,t,n){Nt=e,Ve(t,n||{},Vt,Wt,Kt,e),Nt=void 0}var Zt=null;function Jt(e){var t=Zt;return Zt=e,function(){Zt=t}}function Xt(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function Qt(e,t){if(t){if(e._directInactive=!1,Xt(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)Qt(e.$children[n]);en(e,"activated")}}function en(e,t,n,r){void 0===r&&(r=!0),_e();var a=he,i=qe;r&&de(e);var o=e.$options[t],s="".concat(t," hook");if(o)for(var c=0,l=o.length;c<l;c++)Pt(o[c],e,n||null,e,s);e._hasHookEvent&&e.$emit("hook:"+t),r&&(de(a),i&&i.on()),xe()}var tn=[],nn=[],rn={},an=!1,on=!1,sn=0;var cn=0,ln=Date.now;if(Y&&!J){var un=window.performance;un&&"function"==typeof un.now&&ln()>document.createEvent("Event").timeStamp&&(ln=function(){return un.now()})}var hn=function(e,t){if(e.post){if(!t.post)return 1}else if(t.post)return-1;return e.id-t.id};function dn(){var e,t;for(cn=ln(),on=!0,tn.sort(hn),sn=0;sn<tn.length;sn++)(e=tn[sn]).before&&e.before(),t=e.id,rn[t]=null,e.run();var n=nn.slice(),r=tn.slice();sn=tn.length=nn.length=0,rn={},an=on=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,Qt(e[t],!0)}(n),function(e){var t=e.length;for(;t--;){var n=e[t],r=n.vm;r&&r._watcher===n&&r._isMounted&&!r._isDestroyed&&en(r,"updated")}}(r),function(){for(var e=0;e<ve.length;e++){var t=ve[e];t.subs=t.subs.filter((function(e){return e})),t._pending=!1}ve.length=0}(),se&&N.devtools&&se.emit("flush")}function pn(e){var t=e.id;if(null==rn[t]&&(e!==be.target||!e.noRecurse)){if(rn[t]=!0,on){for(var n=tn.length-1;n>sn&&tn[n].id>e.id;)n--;tn.splice(n+1,0,e)}else tn.push(e);an||(an=!0,Ut(dn))}}function fn(e,t){if(e){for(var n=Object.create(null),r=ue?Reflect.ownKeys(e):Object.keys(e),a=0;a<r.length;a++){var i=r[a];if("__ob__"!==i){var o=e[i].from;if(o in t._provided)n[i]=t._provided[o];else if("default"in e[i]){var s=e[i].default;n[i]=l(s)?s.call(t):s}else 0}}return n}}function mn(e,t,n,i,o){var c,l=this,u=o.options;k(i,"_uid")?(c=Object.create(i))._original=i:(c=i,i=i._original);var h=s(u._compiled),d=!h;this.data=e,this.props=t,this.children=n,this.parent=i,this.listeners=e.on||r,this.injections=fn(u.inject,i),this.slots=function(){return l.$slots||mt(i,e.scopedSlots,l.$slots=dt(n,i)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return mt(i,e.scopedSlots,this.slots())}}),h&&(this.$options=u,this.$slots=this.slots(),this.$scopedSlots=mt(i,e.scopedSlots,this.$slots)),u._scopeId?this._c=function(e,t,n,r){var o=Mt(c,e,t,n,r,d);return o&&!a(o)&&(o.fnScopeId=u._scopeId,o.fnContext=i),o}:this._c=function(e,t,n,r){return Mt(c,e,t,n,r,d)}}function gn(e,t,n,r,a){var i=ge(e);return i.fnContext=n,i.fnOptions=r,t.slot&&((i.data||(i.data={})).slot=t.slot),i}function yn(e,t){for(var n in t)e[A(n)]=t[n]}function vn(e){return e.name||e.__name||e._componentTag}ht(mn.prototype);var bn={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;bn.prepatch(n,n)}else{(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},r=e.data.inlineTemplate;o(r)&&(n.render=r.render,n.staticRenderFns=r.staticRenderFns);return new e.componentOptions.Ctor(n)}(e,Zt)).$mount(t?e.elm:void 0,t)}},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,a,i){var o=a.data.scopedSlots,s=e.$scopedSlots,c=!!(o&&!o.$stable||s!==r&&!s.$stable||o&&e.$scopedSlots.$key!==o.$key||!o&&e.$scopedSlots.$key),l=!!(i||e.$options._renderChildren||c),u=e.$vnode;e.$options._parentVnode=a,e.$vnode=a,e._vnode&&(e._vnode.parent=a),e.$options._renderChildren=i;var h=a.data.attrs||r;e._attrsProxy&&bt(e._attrsProxy,h,u.data&&u.data.attrs||r,e,"$attrs")&&(l=!0),e.$attrs=h,n=n||r;var d=e.$options._parentListeners;if(e._listenersProxy&&bt(e._listenersProxy,n,d||r,e,"$listeners"),e.$listeners=e.$options._parentListeners=n,Yt(e,n,d),t&&e.$options.props){Te(!1);for(var p=e._props,f=e.$options._propKeys||[],m=0;m<f.length;m++){var g=f[m],y=e.$options.props;p[g]=In(g,y,t,e)}Te(!0),e.$options.propsData=t}l&&(e.$slots=dt(i,a.context),e.$forceUpdate())}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,r=e.componentInstance;r._isMounted||(r._isMounted=!0,en(r,"mounted")),e.data.keepAlive&&(n._isMounted?((t=r)._inactive=!1,nn.push(t)):Qt(r,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?function e(t,n){if(!(n&&(t._directInactive=!0,Xt(t))||t._inactive)){t._inactive=!0;for(var r=0;r<t.$children.length;r++)e(t.$children[r]);en(t,"deactivated")}}(t,!0):t.$destroy())}},wn=Object.keys(bn);function _n(e,t,n,c,l){if(!i(e)){var h=n.$options._base;if(u(e)&&(e=h.extend(e)),"function"==typeof e){var d;if(i(e.cid)&&void 0===(e=function(e,t){if(s(e.error)&&o(e.errorComp))return e.errorComp;if(o(e.resolved))return e.resolved;var n=xt;if(n&&o(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n),s(e.loading)&&o(e.loadingComp))return e.loadingComp;if(n&&!o(e.owners)){var r=e.owners=[n],a=!0,c=null,l=null;n.$on("hook:destroyed",(function(){return _(r,n)}));var h=function(e){for(var t=0,n=r.length;t<n;t++)r[t].$forceUpdate();e&&(r.length=0,null!==c&&(clearTimeout(c),c=null),null!==l&&(clearTimeout(l),l=null))},d=U((function(n){e.resolved=kt(n,t),a?r.length=0:h(!0)})),p=U((function(t){o(e.errorComp)&&(e.error=!0,h(!0))})),f=e(d,p);return u(f)&&(m(f)?i(e.resolved)&&f.then(d,p):m(f.component)&&(f.component.then(d,p),o(f.error)&&(e.errorComp=kt(f.error,t)),o(f.loading)&&(e.loadingComp=kt(f.loading,t),0===f.delay?e.loading=!0:c=setTimeout((function(){c=null,i(e.resolved)&&i(e.error)&&(e.loading=!0,h(!1))}),f.delay||200)),o(f.timeout)&&(l=setTimeout((function(){l=null,i(e.resolved)&&p(null)}),f.timeout)))),a=!1,e.loading?e.loadingComp:e.resolved}}(d=e,h)))return function(e,t,n,r,a){var i=fe();return i.asyncFactory=e,i.asyncMeta={data:t,context:n,children:r,tag:a},i}(d,t,n,c,l);t=t||{},Vn(e),o(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",r=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var i=t.on||(t.on={}),s=i[r],c=t.model.callback;o(s)?(a(s)?-1===s.indexOf(c):s!==c)&&(i[r]=[c].concat(s)):i[r]=c}(e.options,t);var p=function(e,t,n){var r=t.options.props;if(!i(r)){var a={},s=e.attrs,c=e.props;if(o(s)||o(c))for(var l in r){var u=S(l);Ke(a,c,l,u,!0)||Ke(a,s,l,u,!1)}return a}}(t,e);if(s(e.options.functional))return function(e,t,n,i,s){var c=e.options,l={},u=c.props;if(o(u))for(var h in u)l[h]=In(h,u,t||r);else o(n.attrs)&&yn(l,n.attrs),o(n.props)&&yn(l,n.props);var d=new mn(n,l,s,i,e),p=c.render.call(null,d._c,d);if(p instanceof pe)return gn(p,n,d.parent,c,d);if(a(p)){for(var f=Ye(p)||[],m=new Array(f.length),g=0;g<f.length;g++)m[g]=gn(f[g],n,d.parent,c,d);return m}}(e,p,t,n,c);var f=t.on;if(t.on=t.nativeOn,s(e.options.abstract)){var g=t.slot;t={},g&&(t.slot=g)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<wn.length;n++){var r=wn[n],a=t[r],i=bn[r];a===i||a&&a._merged||(t[r]=a?xn(i,a):i)}}(t);var y=vn(e.options)||l;return new pe("vue-component-".concat(e.cid).concat(y?"-".concat(y):""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:p,listeners:f,tag:l,children:c},d)}}}function xn(e,t){var n=function(n,r){e(n,r),t(n,r)};return n._merged=!0,n}var kn=j,Cn=N.optionMergeStrategies;function Mn(e,t,n){if(void 0===n&&(n=!0),!t)return e;for(var r,a,i,o=ue?Reflect.ownKeys(t):Object.keys(t),s=0;s<o.length;s++)"__ob__"!==(r=o[s])&&(a=e[r],i=t[r],n&&k(e,r)?a!==i&&d(a)&&d(i)&&Mn(a,i):Le(e,r,i));return e}function An(e,t,n){return n?function(){var r=l(t)?t.call(n,n):t,a=l(e)?e.call(n,n):e;return r?Mn(r,a):a}:t?e?function(){return Mn(l(t)?t.call(this,this):t,l(e)?e.call(this,this):e)}:t:e}function Pn(e,t){var n=t?e?e.concat(t):a(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function Tn(e,t,n,r){var a=Object.create(e||null);return t?I(a,t):a}Cn.data=function(e,t,n){return n?An(e,t,n):t&&"function"!=typeof t?e:An(e,t)},F.forEach((function(e){Cn[e]=Pn})),q.forEach((function(e){Cn[e+"s"]=Tn})),Cn.watch=function(e,t,n,r){if(e===re&&(e=void 0),t===re&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var i={};for(var o in I(i,e),t){var s=i[o],c=t[o];s&&!a(s)&&(s=[s]),i[o]=s?s.concat(c):a(c)?c:[c]}return i},Cn.props=Cn.methods=Cn.inject=Cn.computed=function(e,t,n,r){if(!e)return t;var a=Object.create(null);return I(a,e),t&&I(a,t),a},Cn.provide=function(e,t){return e?function(){var n=Object.create(null);return Mn(n,l(e)?e.call(this):e),t&&Mn(n,l(t)?t.call(this):t,!1),n}:t};var Sn=function(e,t){return void 0===t?e:t};function On(e,t,n){if(l(t)&&(t=t.options),function(e,t){var n=e.props;if(n){var r,i,o={};if(a(n))for(r=n.length;r--;)"string"==typeof(i=n[r])&&(o[A(i)]={type:null});else if(d(n))for(var s in n)i=n[s],o[A(s)]=d(i)?i:{type:i};else 0;e.props=o}}(t),function(e,t){var n=e.inject;if(n){var r=e.inject={};if(a(n))for(var i=0;i<n.length;i++)r[n[i]]={from:n[i]};else if(d(n))for(var o in n){var s=n[o];r[o]=d(s)?I({from:o},s):{from:s}}else 0}}(t),function(e){var t=e.directives;if(t)for(var n in t){var r=t[n];l(r)&&(t[n]={bind:r,update:r})}}(t),!t._base&&(t.extends&&(e=On(e,t.extends,n)),t.mixins))for(var r=0,i=t.mixins.length;r<i;r++)e=On(e,t.mixins[r],n);var o,s={};for(o in e)c(o);for(o in t)k(e,o)||c(o);function c(r){var a=Cn[r]||Sn;s[r]=a(e[r],t[r],n,r)}return s}function En(e,t,n,r){if("string"==typeof n){var a=e[t];if(k(a,n))return a[n];var i=A(n);if(k(a,i))return a[i];var o=P(i);return k(a,o)?a[o]:a[n]||a[i]||a[o]}}function In(e,t,n,r){var a=t[e],i=!k(n,e),o=n[e],s=$n(Boolean,a.type);if(s>-1)if(i&&!k(a,"default"))o=!1;else if(""===o||o===S(e)){var c=$n(String,a.type);(c<0||s<c)&&(o=!0)}if(void 0===o){o=function(e,t,n){if(!k(t,"default"))return;var r=t.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n])return e._props[n];return l(r)&&"Function"!==jn(t.type)?r.call(e):r}(r,a,e);var u=Pe;Te(!0),Ee(o),Te(u)}return o}var Ln=/^\s*function (\w+)/;function jn(e){var t=e&&e.toString().match(Ln);return t?t[1]:""}function Rn(e,t){return jn(e)===jn(t)}function $n(e,t){if(!a(t))return Rn(t,e)?0:-1;for(var n=0,r=t.length;n<r;n++)if(Rn(t[n],e))return n;return-1}var Dn={enumerable:!0,configurable:!0,get:j,set:j};function zn(e,t,n){Dn.get=function(){return this[t][n]},Dn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,Dn)}function Un(e){var t=e.$options;if(t.props&&function(e,t){var n=e.$options.propsData||{},r=e._props=$e({}),a=e.$options._propKeys=[];e.$parent&&Te(!1);var i=function(i){a.push(i);var o=In(i,t,n,e);Ie(r,i,o,void 0,!0),i in e||zn(e,"_props",i)};for(var o in t)i(o);Te(!0)}(e,t.props),function(e){var t=e.$options,n=t.setup;if(n){var r=e._setupContext=vt(e);de(e),_e();var a=Pt(n,null,[e._props||$e({}),r],e,"setup");if(xe(),de(),l(a))t.render=a;else if(u(a))if(e._setupState=a,a.__sfc){var i=e._setupProxy={};for(var o in a)"__sfc"!==o&&Be(i,a,o)}else for(var o in a)G(o)||Be(e,a,o);else 0}}(e),t.methods&&function(e,t){e.$options.props;for(var n in t)e[n]="function"!=typeof t[n]?j:O(t[n],e)}(e,t.methods),t.data)!function(e){var t=e.$options.data;d(t=e._data=l(t)?function(e,t){_e();try{return e.call(t,t)}catch(e){return At(e,t,"data()"),{}}finally{xe()}}(t,e):t||{})||(t={});var n=Object.keys(t),r=e.$options.props,a=(e.$options.methods,n.length);for(;a--;){var i=n[a];0,r&&k(r,i)||G(i)||zn(e,"_data",i)}var o=Ee(t);o&&o.vmCount++}(e);else{var n=Ee(e._data={});n&&n.vmCount++}t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),r=oe();for(var a in t){var i=t[a],o=l(i)?i:i.get;0,r||(n[a]=new Gt(e,o||j,j,Bn)),a in e||qn(e,a,i)}}(e,t.computed),t.watch&&t.watch!==re&&function(e,t){for(var n in t){var r=t[n];if(a(r))for(var i=0;i<r.length;i++)Hn(e,n,r[i]);else Hn(e,n,r)}}(e,t.watch)}var Bn={lazy:!0};function qn(e,t,n){var r=!oe();l(n)?(Dn.get=r?Fn(t):Nn(n),Dn.set=j):(Dn.get=n.get?r&&!1!==n.cache?Fn(t):Nn(n.get):j,Dn.set=n.set||j),Object.defineProperty(e,t,Dn)}function Fn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),be.target&&t.depend(),t.value}}function Nn(e){return function(){return e.call(this,this)}}function Hn(e,t,n,r){return d(n)&&(r=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,r)}var Gn=0;function Vn(e){var t=e.options;if(e.super){var n=Vn(e.super);if(n!==e.superOptions){e.superOptions=n;var r=function(e){var t,n=e.options,r=e.sealedOptions;for(var a in n)n[a]!==r[a]&&(t||(t={}),t[a]=n[a]);return t}(e);r&&I(e.extendOptions,r),(t=e.options=On(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function Wn(e){this._init(e)}function Kn(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,r=n.cid,a=e._Ctor||(e._Ctor={});if(a[r])return a[r];var i=vn(e)||vn(n.options);var o=function(e){this._init(e)};return(o.prototype=Object.create(n.prototype)).constructor=o,o.cid=t++,o.options=On(n.options,e),o.super=n,o.options.props&&function(e){var t=e.options.props;for(var n in t)zn(e.prototype,"_props",n)}(o),o.options.computed&&function(e){var t=e.options.computed;for(var n in t)qn(e.prototype,n,t[n])}(o),o.extend=n.extend,o.mixin=n.mixin,o.use=n.use,q.forEach((function(e){o[e]=n[e]})),i&&(o.options.components[i]=o),o.superOptions=n.options,o.extendOptions=e,o.sealedOptions=I({},o.options),a[r]=o,o}}function Yn(e){return e&&(vn(e.Ctor.options)||e.tag)}function Zn(e,t){return a(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:!!p(e)&&e.test(t)}function Jn(e,t){var n=e.cache,r=e.keys,a=e._vnode,i=e.$vnode;for(var o in n){var s=n[o];if(s){var c=s.name;c&&!t(c)&&Xn(n,o,r,a)}}i.componentOptions.children=void 0}function Xn(e,t,n,r){var a=e[t];!a||r&&a.tag===r.tag||a.componentInstance.$destroy(),e[t]=null,_(n,t)}Wn.prototype._init=function(e){var t=this;t._uid=Gn++,t._isVue=!0,t.__v_skip=!0,t._scope=new Fe(!0),t._scope.parent=void 0,t._scope._vm=!0,e&&e._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),r=t._parentVnode;n.parent=t.parent,n._parentVnode=r;var a=r.componentOptions;n.propsData=a.propsData,n._parentListeners=a.listeners,n._renderChildren=a.children,n._componentTag=a.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=On(Vn(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._provided=n?n._provided:Object.create(null),e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Yt(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,a=n&&n.context;e.$slots=dt(t._renderChildren,a),e.$scopedSlots=n?mt(e.$parent,n.data.scopedSlots,e.$slots):r,e._c=function(t,n,r,a){return Mt(e,t,n,r,a,!1)},e.$createElement=function(t,n,r,a){return Mt(e,t,n,r,a,!0)};var i=n&&n.data;Ie(e,"$attrs",i&&i.attrs||r,null,!0),Ie(e,"$listeners",t._parentListeners||r,null,!0)}(t),en(t,"beforeCreate",void 0,!1),function(e){var t=fn(e.$options.inject,e);t&&(Te(!1),Object.keys(t).forEach((function(n){Ie(e,n,t[n])})),Te(!0))}(t),Un(t),function(e){var t=e.$options.provide;if(t){var n=l(t)?t.call(e):t;if(!u(n))return;for(var r=Ne(e),a=ue?Reflect.ownKeys(n):Object.keys(n),i=0;i<a.length;i++){var o=a[i];Object.defineProperty(r,o,Object.getOwnPropertyDescriptor(n,o))}}}(t),en(t,"created"),t.$options.el&&t.$mount(t.$options.el)},function(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=Le,e.prototype.$delete=je,e.prototype.$watch=function(e,t,n){if(d(t))return Hn(this,e,t,n);(n=n||{}).user=!0;var r=new Gt(this,e,t,n);if(n.immediate){var a='callback for immediate watcher "'.concat(r.expression,'"');_e(),Pt(t,this,[r.value],this,a),xe()}return function(){r.teardown()}}}(Wn),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var r=this;if(a(e))for(var i=0,o=e.length;i<o;i++)r.$on(e[i],n);else(r._events[e]||(r._events[e]=[])).push(n),t.test(e)&&(r._hasHookEvent=!0);return r},e.prototype.$once=function(e,t){var n=this;function r(){n.$off(e,r),t.apply(n,arguments)}return r.fn=t,n.$on(e,r),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(a(e)){for(var r=0,i=e.length;r<i;r++)n.$off(e[r],t);return n}var o,s=n._events[e];if(!s)return n;if(!t)return n._events[e]=null,n;for(var c=s.length;c--;)if((o=s[c])===t||o.fn===t){s.splice(c,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?E(n):n;for(var r=E(arguments,1),a='event handler for "'.concat(e,'"'),i=0,o=n.length;i<o;i++)Pt(n[i],t,r,t,a)}return t}}(Wn),function(e){e.prototype._update=function(e,t){var n=this,r=n.$el,a=n._vnode,i=Jt(n);n._vnode=e,n.$el=a?n.__patch__(a,e):n.__patch__(n.$el,e,t,!1),i(),r&&(r.__vue__=null),n.$el&&(n.$el.__vue__=n);for(var o=n;o&&o.$vnode&&o.$parent&&o.$vnode===o.$parent._vnode;)o.$parent.$el=o.$el,o=o.$parent},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){en(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||_(t.$children,e),e._scope.stop(),e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),en(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Wn),function(e){ht(e.prototype),e.prototype.$nextTick=function(e){return Ut(e,this)},e.prototype._render=function(){var e=this,t=e.$options,n=t.render,r=t._parentVnode;r&&e._isMounted&&(e.$scopedSlots=mt(e.$parent,r.data.scopedSlots,e.$slots,e.$scopedSlots),e._slotsProxy&&_t(e._slotsProxy,e.$scopedSlots)),e.$vnode=r;var i,o=he,s=xt;try{de(e),xt=e,i=n.call(e._renderProxy,e.$createElement)}catch(t){At(t,e,"render"),i=e._vnode}finally{xt=s,de(o)}return a(i)&&1===i.length&&(i=i[0]),i instanceof pe||(i=fe()),i.parent=r,i}}(Wn);var Qn=[String,RegExp,Array],er={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Qn,exclude:Qn,max:[String,Number]},methods:{cacheVNode:function(){var e=this.cache,t=this.keys,n=this.vnodeToCache,r=this.keyToCache;if(n){var a=n.tag,i=n.componentInstance,o=n.componentOptions;e[r]={name:Yn(o),tag:a,componentInstance:i},t.push(r),this.max&&t.length>parseInt(this.max)&&Xn(e,t[0],t,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Xn(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(t){Jn(e,(function(e){return Zn(t,e)}))})),this.$watch("exclude",(function(t){Jn(e,(function(e){return!Zn(t,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,t=Ct(e),n=t&&t.componentOptions;if(n){var r=Yn(n),a=this.include,i=this.exclude;if(a&&(!r||!Zn(a,r))||i&&r&&Zn(i,r))return t;var o=this.cache,s=this.keys,c=null==t.key?n.Ctor.cid+(n.tag?"::".concat(n.tag):""):t.key;o[c]?(t.componentInstance=o[c].componentInstance,_(s,c),s.push(c)):(this.vnodeToCache=t,this.keyToCache=c),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return N}};Object.defineProperty(e,"config",t),e.util={warn:kn,extend:I,mergeOptions:On,defineReactive:Ie},e.set=Le,e.delete=je,e.nextTick=Ut,e.observable=function(e){return Ee(e),e},e.options=Object.create(null),q.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,I(e.options.components,er),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=E(arguments,1);return n.unshift(this),l(e.install)?e.install.apply(e,n):l(e)&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=On(this.options,e),this}}(e),Kn(e),function(e){q.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&d(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&l(n)&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(Wn),Object.defineProperty(Wn.prototype,"$isServer",{get:oe}),Object.defineProperty(Wn.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Wn,"FunctionalRenderContext",{value:mn}),Wn.version="2.7.16";var tr=b("style,class"),nr=b("input,textarea,option,select,progress"),rr=b("contenteditable,draggable,spellcheck"),ar=b("events,caret,typing,plaintext-only"),ir=b("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),or="http://www.w3.org/1999/xlink",sr=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},cr=function(e){return sr(e)?e.slice(6,e.length):""},lr=function(e){return null==e||!1===e};function ur(e){for(var t=e.data,n=e,r=e;o(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(t=hr(r.data,t));for(;o(n=n.parent);)n&&n.data&&(t=hr(t,n.data));return function(e,t){if(o(e)||o(t))return dr(e,pr(t));return""}(t.staticClass,t.class)}function hr(e,t){return{staticClass:dr(e.staticClass,t.staticClass),class:o(e.class)?[e.class,t.class]:t.class}}function dr(e,t){return e?t?e+" "+t:e:t||""}function pr(e){return Array.isArray(e)?function(e){for(var t,n="",r=0,a=e.length;r<a;r++)o(t=pr(e[r]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):u(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var fr={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},mr=b("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),gr=b("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),yr=function(e){return mr(e)||gr(e)};var vr=Object.create(null);var br=b("text,number,password,search,email,tel,url");var wr=Object.freeze({__proto__:null,createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(fr[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),_r={create:function(e,t){xr(t)},update:function(e,t){e.data.ref!==t.data.ref&&(xr(e,!0),xr(t))},destroy:function(e){xr(e,!0)}};function xr(e,t){var n=e.data.ref;if(o(n)){var r=e.context,i=e.componentInstance||e.elm,s=t?null:i,c=t?void 0:i;if(l(n))Pt(n,r,[s],r,"template ref function");else{var u=e.data.refInFor,h="string"==typeof n||"number"==typeof n,d=Ue(n),p=r.$refs;if(h||d)if(u){var f=h?p[n]:n.value;t?a(f)&&_(f,i):a(f)?f.includes(i)||f.push(i):h?(p[n]=[i],kr(r,n,p[n])):n.value=[i]}else if(h){if(t&&p[n]!==i)return;p[n]=c,kr(r,n,s)}else if(d){if(t&&n.value!==i)return;n.value=s}else 0}}}function kr(e,t,n){var r=e._setupState;r&&k(r,t)&&(Ue(r[t])?r[t].value=n:r[t]=n)}var Cr=new pe("",{},[]),Mr=["create","activate","update","remove","destroy"];function Ar(e,t){return e.key===t.key&&e.asyncFactory===t.asyncFactory&&(e.tag===t.tag&&e.isComment===t.isComment&&o(e.data)===o(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,r=o(n=e.data)&&o(n=n.attrs)&&n.type,a=o(n=t.data)&&o(n=n.attrs)&&n.type;return r===a||br(r)&&br(a)}(e,t)||s(e.isAsyncPlaceholder)&&i(t.asyncFactory.error))}function Pr(e,t,n){var r,a,i={};for(r=t;r<=n;++r)o(a=e[r].key)&&(i[a]=r);return i}var Tr={create:Sr,update:Sr,destroy:function(e){Sr(e,Cr)}};function Sr(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,r,a,i=e===Cr,o=t===Cr,s=Er(e.data.directives,e.context),c=Er(t.data.directives,t.context),l=[],u=[];for(n in c)r=s[n],a=c[n],r?(a.oldValue=r.value,a.oldArg=r.arg,Lr(a,"update",t,e),a.def&&a.def.componentUpdated&&u.push(a)):(Lr(a,"bind",t,e),a.def&&a.def.inserted&&l.push(a));if(l.length){var h=function(){for(var n=0;n<l.length;n++)Lr(l[n],"inserted",t,e)};i?We(t,"insert",h):h()}u.length&&We(t,"postpatch",(function(){for(var n=0;n<u.length;n++)Lr(u[n],"componentUpdated",t,e)}));if(!i)for(n in s)c[n]||Lr(s[n],"unbind",e,e,o)}(e,t)}var Or=Object.create(null);function Er(e,t){var n,r,a=Object.create(null);if(!e)return a;for(n=0;n<e.length;n++){if((r=e[n]).modifiers||(r.modifiers=Or),a[Ir(r)]=r,t._setupState&&t._setupState.__sfc){var i=r.def||En(t,"_setupState","v-"+r.name);r.def="function"==typeof i?{bind:i,update:i}:i}r.def=r.def||En(t.$options,"directives",r.name)}return a}function Ir(e){return e.rawName||"".concat(e.name,".").concat(Object.keys(e.modifiers||{}).join("."))}function Lr(e,t,n,r,a){var i=e.def&&e.def[t];if(i)try{i(n.elm,e,n,r,a)}catch(r){At(r,n.context,"directive ".concat(e.name," ").concat(t," hook"))}}var jr=[_r,Tr];function Rr(e,t){var n=t.componentOptions;if(!(o(n)&&!1===n.Ctor.options.inheritAttrs||i(e.data.attrs)&&i(t.data.attrs))){var r,a,c=t.elm,l=e.data.attrs||{},u=t.data.attrs||{};for(r in(o(u.__ob__)||s(u._v_attr_proxy))&&(u=t.data.attrs=I({},u)),u)a=u[r],l[r]!==a&&$r(c,r,a,t.data.pre);for(r in(J||Q)&&u.value!==l.value&&$r(c,"value",u.value),l)i(u[r])&&(sr(r)?c.removeAttributeNS(or,cr(r)):rr(r)||c.removeAttribute(r))}}function $r(e,t,n,r){r||e.tagName.indexOf("-")>-1?Dr(e,t,n):ir(t)?lr(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):rr(t)?e.setAttribute(t,function(e,t){return lr(t)||"false"===t?"false":"contenteditable"===e&&ar(t)?t:"true"}(t,n)):sr(t)?lr(n)?e.removeAttributeNS(or,cr(t)):e.setAttributeNS(or,t,n):Dr(e,t,n)}function Dr(e,t,n){if(lr(n))e.removeAttribute(t);else{if(J&&!X&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var r=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",r)};e.addEventListener("input",r),e.__ieph=!0}e.setAttribute(t,n)}}var zr={create:Rr,update:Rr};function Ur(e,t){var n=t.elm,r=t.data,a=e.data;if(!(i(r.staticClass)&&i(r.class)&&(i(a)||i(a.staticClass)&&i(a.class)))){var s=ur(t),c=n._transitionClasses;o(c)&&(s=dr(s,pr(c))),s!==n._prevClass&&(n.setAttribute("class",s),n._prevClass=s)}}var Br,qr={create:Ur,update:Ur};function Fr(e,t,n){var r=Br;return function a(){var i=t.apply(null,arguments);null!==i&&Gr(e,a,n,r)}}var Nr=Et&&!(ne&&Number(ne[1])<=53);function Hr(e,t,n,r){if(Nr){var a=cn,i=t;t=i._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=a||e.timeStamp<=0||e.target.ownerDocument!==document)return i.apply(this,arguments)}}Br.addEventListener(e,t,ae?{capture:n,passive:r}:n)}function Gr(e,t,n,r){(r||Br).removeEventListener(e,t._wrapper||t,n)}function Vr(e,t){if(!i(e.data.on)||!i(t.data.on)){var n=t.data.on||{},r=e.data.on||{};Br=t.elm||e.elm,function(e){if(o(e.__r)){var t=J?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}o(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(n),Ve(n,r,Hr,Gr,Fr,t.context),Br=void 0}}var Wr,Kr={create:Vr,update:Vr,destroy:function(e){return Vr(e,Cr)}};function Yr(e,t){if(!i(e.data.domProps)||!i(t.data.domProps)){var n,r,a=t.elm,c=e.data.domProps||{},l=t.data.domProps||{};for(n in(o(l.__ob__)||s(l._v_attr_proxy))&&(l=t.data.domProps=I({},l)),c)n in l||(a[n]="");for(n in l){if(r=l[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),r===c[n])continue;1===a.childNodes.length&&a.removeChild(a.childNodes[0])}if("value"===n&&"PROGRESS"!==a.tagName){a._value=r;var u=i(r)?"":String(r);Zr(a,u)&&(a.value=u)}else if("innerHTML"===n&&gr(a.tagName)&&i(a.innerHTML)){(Wr=Wr||document.createElement("div")).innerHTML="<svg>".concat(r,"</svg>");for(var h=Wr.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;h.firstChild;)a.appendChild(h.firstChild)}else if(r!==c[n])try{a[n]=r}catch(e){}}}}function Zr(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,r=e._vModifiers;if(o(r)){if(r.number)return v(n)!==v(t);if(r.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var Jr={create:Yr,update:Yr},Xr=C((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var r=e.split(n);r.length>1&&(t[r[0].trim()]=r[1].trim())}})),t}));function Qr(e){var t=ea(e.style);return e.staticStyle?I(e.staticStyle,t):t}function ea(e){return Array.isArray(e)?L(e):"string"==typeof e?Xr(e):e}var ta,na=/^--/,ra=/\s*!important$/,aa=function(e,t,n){if(na.test(t))e.style.setProperty(t,n);else if(ra.test(n))e.style.setProperty(S(t),n.replace(ra,""),"important");else{var r=oa(t);if(Array.isArray(n))for(var a=0,i=n.length;a<i;a++)e.style[r]=n[a];else e.style[r]=n}},ia=["Webkit","Moz","ms"],oa=C((function(e){if(ta=ta||document.createElement("div").style,"filter"!==(e=A(e))&&e in ta)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<ia.length;n++){var r=ia[n]+t;if(r in ta)return r}}));function sa(e,t){var n=t.data,r=e.data;if(!(i(n.staticStyle)&&i(n.style)&&i(r.staticStyle)&&i(r.style))){var a,s,c=t.elm,l=r.staticStyle,u=r.normalizedStyle||r.style||{},h=l||u,d=ea(t.data.style)||{};t.data.normalizedStyle=o(d.__ob__)?I({},d):d;var p=function(e,t){var n,r={};if(t)for(var a=e;a.componentInstance;)(a=a.componentInstance._vnode)&&a.data&&(n=Qr(a.data))&&I(r,n);(n=Qr(e.data))&&I(r,n);for(var i=e;i=i.parent;)i.data&&(n=Qr(i.data))&&I(r,n);return r}(t,!0);for(s in h)i(p[s])&&aa(c,s,"");for(s in p)a=p[s],aa(c,s,null==a?"":a)}}var ca={create:sa,update:sa},la=/\s+/;function ua(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(la).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" ".concat(e.getAttribute("class")||""," ");n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function ha(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(la).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" ".concat(e.getAttribute("class")||""," "),r=" "+t+" ";n.indexOf(r)>=0;)n=n.replace(r," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function da(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&I(t,pa(e.name||"v")),I(t,e),t}return"string"==typeof e?pa(e):void 0}}var pa=C((function(e){return{enterClass:"".concat(e,"-enter"),enterToClass:"".concat(e,"-enter-to"),enterActiveClass:"".concat(e,"-enter-active"),leaveClass:"".concat(e,"-leave"),leaveToClass:"".concat(e,"-leave-to"),leaveActiveClass:"".concat(e,"-leave-active")}})),fa=Y&&!X,ma="transition",ga="transitionend",ya="animation",va="animationend";fa&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(ma="WebkitTransition",ga="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(ya="WebkitAnimation",va="webkitAnimationEnd"));var ba=Y?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function wa(e){ba((function(){ba(e)}))}function _a(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),ua(e,t))}function xa(e,t){e._transitionClasses&&_(e._transitionClasses,t),ha(e,t)}function ka(e,t,n){var r=Ma(e,t),a=r.type,i=r.timeout,o=r.propCount;if(!a)return n();var s="transition"===a?ga:va,c=0,l=function(){e.removeEventListener(s,u),n()},u=function(t){t.target===e&&++c>=o&&l()};setTimeout((function(){c<o&&l()}),i+1),e.addEventListener(s,u)}var Ca=/\b(transform|all)(,|$)/;function Ma(e,t){var n,r=window.getComputedStyle(e),a=(r[ma+"Delay"]||"").split(", "),i=(r[ma+"Duration"]||"").split(", "),o=Aa(a,i),s=(r[ya+"Delay"]||"").split(", "),c=(r[ya+"Duration"]||"").split(", "),l=Aa(s,c),u=0,h=0;return"transition"===t?o>0&&(n="transition",u=o,h=i.length):"animation"===t?l>0&&(n="animation",u=l,h=c.length):h=(n=(u=Math.max(o,l))>0?o>l?"transition":"animation":null)?"transition"===n?i.length:c.length:0,{type:n,timeout:u,propCount:h,hasTransform:"transition"===n&&Ca.test(r[ma+"Property"])}}function Aa(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return Pa(t)+Pa(e[n])})))}function Pa(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Ta(e,t){var n=e.elm;o(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var r=da(e.data.transition);if(!i(r)&&!o(n._enterCb)&&1===n.nodeType){for(var a=r.css,s=r.type,c=r.enterClass,h=r.enterToClass,d=r.enterActiveClass,p=r.appearClass,f=r.appearToClass,m=r.appearActiveClass,g=r.beforeEnter,y=r.enter,b=r.afterEnter,w=r.enterCancelled,_=r.beforeAppear,x=r.appear,k=r.afterAppear,C=r.appearCancelled,M=r.duration,A=Zt,P=Zt.$vnode;P&&P.parent;)A=P.context,P=P.parent;var T=!A._isMounted||!e.isRootInsert;if(!T||x||""===x){var S=T&&p?p:c,O=T&&m?m:d,E=T&&f?f:h,I=T&&_||g,L=T&&l(x)?x:y,j=T&&k||b,R=T&&C||w,$=v(u(M)?M.enter:M);0;var D=!1!==a&&!X,z=Ea(L),B=n._enterCb=U((function(){D&&(xa(n,E),xa(n,O)),B.cancelled?(D&&xa(n,S),R&&R(n)):j&&j(n),n._enterCb=null}));e.data.show||We(e,"insert",(function(){var t=n.parentNode,r=t&&t._pending&&t._pending[e.key];r&&r.tag===e.tag&&r.elm._leaveCb&&r.elm._leaveCb(),L&&L(n,B)})),I&&I(n),D&&(_a(n,S),_a(n,O),wa((function(){xa(n,S),B.cancelled||(_a(n,E),z||(Oa($)?setTimeout(B,$):ka(n,s,B)))}))),e.data.show&&(t&&t(),L&&L(n,B)),D||z||B()}}}function Sa(e,t){var n=e.elm;o(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var r=da(e.data.transition);if(i(r)||1!==n.nodeType)return t();if(!o(n._leaveCb)){var a=r.css,s=r.type,c=r.leaveClass,l=r.leaveToClass,h=r.leaveActiveClass,d=r.beforeLeave,p=r.leave,f=r.afterLeave,m=r.leaveCancelled,g=r.delayLeave,y=r.duration,b=!1!==a&&!X,w=Ea(p),_=v(u(y)?y.leave:y);0;var x=n._leaveCb=U((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),b&&(xa(n,l),xa(n,h)),x.cancelled?(b&&xa(n,c),m&&m(n)):(t(),f&&f(n)),n._leaveCb=null}));g?g(k):k()}function k(){x.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),d&&d(n),b&&(_a(n,c),_a(n,h),wa((function(){xa(n,c),x.cancelled||(_a(n,l),w||(Oa(_)?setTimeout(x,_):ka(n,s,x)))}))),p&&p(n,x),b||w||x())}}function Oa(e){return"number"==typeof e&&!isNaN(e)}function Ea(e){if(i(e))return!1;var t=e.fns;return o(t)?Ea(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function Ia(e,t){!0!==t.data.show&&Ta(t)}var La=function(e){var t,n,r={},l=e.modules,u=e.nodeOps;for(t=0;t<Mr.length;++t)for(r[Mr[t]]=[],n=0;n<l.length;++n)o(l[n][Mr[t]])&&r[Mr[t]].push(l[n][Mr[t]]);function h(e){var t=u.parentNode(e);o(t)&&u.removeChild(t,e)}function d(e,t,n,a,i,c,l){if(o(e.elm)&&o(c)&&(e=c[l]=ge(e)),e.isRootInsert=!i,!function(e,t,n,a){var i=e.data;if(o(i)){var c=o(e.componentInstance)&&i.keepAlive;if(o(i=i.hook)&&o(i=i.init)&&i(e,!1),o(e.componentInstance))return p(e,t),f(n,e.elm,a),s(c)&&function(e,t,n,a){var i,s=e;for(;s.componentInstance;)if(s=s.componentInstance._vnode,o(i=s.data)&&o(i=i.transition)){for(i=0;i<r.activate.length;++i)r.activate[i](Cr,s);t.push(s);break}f(n,e.elm,a)}(e,t,n,a),!0}}(e,t,n,a)){var h=e.data,d=e.children,g=e.tag;o(g)?(e.elm=e.ns?u.createElementNS(e.ns,g):u.createElement(g,e),v(e),m(e,d,t),o(h)&&y(e,t),f(n,e.elm,a)):s(e.isComment)?(e.elm=u.createComment(e.text),f(n,e.elm,a)):(e.elm=u.createTextNode(e.text),f(n,e.elm,a))}}function p(e,t){o(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,g(e)?(y(e,t),v(e)):(xr(e),t.push(e))}function f(e,t,n){o(e)&&(o(n)?u.parentNode(n)===e&&u.insertBefore(e,t,n):u.appendChild(e,t))}function m(e,t,n){if(a(t)){0;for(var r=0;r<t.length;++r)d(t[r],n,e.elm,null,!0,t,r)}else c(e.text)&&u.appendChild(e.elm,u.createTextNode(String(e.text)))}function g(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return o(e.tag)}function y(e,n){for(var a=0;a<r.create.length;++a)r.create[a](Cr,e);o(t=e.data.hook)&&(o(t.create)&&t.create(Cr,e),o(t.insert)&&n.push(e))}function v(e){var t;if(o(t=e.fnScopeId))u.setStyleScope(e.elm,t);else for(var n=e;n;)o(t=n.context)&&o(t=t.$options._scopeId)&&u.setStyleScope(e.elm,t),n=n.parent;o(t=Zt)&&t!==e.context&&t!==e.fnContext&&o(t=t.$options._scopeId)&&u.setStyleScope(e.elm,t)}function w(e,t,n,r,a,i){for(;r<=a;++r)d(n[r],i,e,t,!1,n,r)}function _(e){var t,n,a=e.data;if(o(a))for(o(t=a.hook)&&o(t=t.destroy)&&t(e),t=0;t<r.destroy.length;++t)r.destroy[t](e);if(o(t=e.children))for(n=0;n<e.children.length;++n)_(e.children[n])}function x(e,t,n){for(;t<=n;++t){var r=e[t];o(r)&&(o(r.tag)?(k(r),_(r)):h(r.elm))}}function k(e,t){if(o(t)||o(e.data)){var n,a=r.remove.length+1;for(o(t)?t.listeners+=a:t=function(e,t){function n(){0==--n.listeners&&h(e)}return n.listeners=t,n}(e.elm,a),o(n=e.componentInstance)&&o(n=n._vnode)&&o(n.data)&&k(n,t),n=0;n<r.remove.length;++n)r.remove[n](e,t);o(n=e.data.hook)&&o(n=n.remove)?n(e,t):t()}else h(e.elm)}function C(e,t,n,r){for(var a=n;a<r;a++){var i=t[a];if(o(i)&&Ar(e,i))return a}}function M(e,t,n,a,c,l){if(e!==t){o(t.elm)&&o(a)&&(t=a[c]=ge(t));var h=t.elm=e.elm;if(s(e.isAsyncPlaceholder))o(t.asyncFactory.resolved)?T(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(s(t.isStatic)&&s(e.isStatic)&&t.key===e.key&&(s(t.isCloned)||s(t.isOnce)))t.componentInstance=e.componentInstance;else{var p,f=t.data;o(f)&&o(p=f.hook)&&o(p=p.prepatch)&&p(e,t);var m=e.children,y=t.children;if(o(f)&&g(t)){for(p=0;p<r.update.length;++p)r.update[p](e,t);o(p=f.hook)&&o(p=p.update)&&p(e,t)}i(t.text)?o(m)&&o(y)?m!==y&&function(e,t,n,r,a){var s,c,l,h=0,p=0,f=t.length-1,m=t[0],g=t[f],y=n.length-1,v=n[0],b=n[y],_=!a;for(0;h<=f&&p<=y;)i(m)?m=t[++h]:i(g)?g=t[--f]:Ar(m,v)?(M(m,v,r,n,p),m=t[++h],v=n[++p]):Ar(g,b)?(M(g,b,r,n,y),g=t[--f],b=n[--y]):Ar(m,b)?(M(m,b,r,n,y),_&&u.insertBefore(e,m.elm,u.nextSibling(g.elm)),m=t[++h],b=n[--y]):Ar(g,v)?(M(g,v,r,n,p),_&&u.insertBefore(e,g.elm,m.elm),g=t[--f],v=n[++p]):(i(s)&&(s=Pr(t,h,f)),i(c=o(v.key)?s[v.key]:C(v,t,h,f))?d(v,r,e,m.elm,!1,n,p):Ar(l=t[c],v)?(M(l,v,r,n,p),t[c]=void 0,_&&u.insertBefore(e,l.elm,m.elm)):d(v,r,e,m.elm,!1,n,p),v=n[++p]);h>f?w(e,i(n[y+1])?null:n[y+1].elm,n,p,y,r):p>y&&x(t,h,f)}(h,m,y,n,l):o(y)?(o(e.text)&&u.setTextContent(h,""),w(h,null,y,0,y.length-1,n)):o(m)?x(m,0,m.length-1):o(e.text)&&u.setTextContent(h,""):e.text!==t.text&&u.setTextContent(h,t.text),o(f)&&o(p=f.hook)&&o(p=p.postpatch)&&p(e,t)}}}function A(e,t,n){if(s(n)&&o(e.parent))e.parent.data.pendingInsert=t;else for(var r=0;r<t.length;++r)t[r].data.hook.insert(t[r])}var P=b("attrs,class,staticClass,staticStyle,key");function T(e,t,n,r){var a,i=t.tag,c=t.data,l=t.children;if(r=r||c&&c.pre,t.elm=e,s(t.isComment)&&o(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(o(c)&&(o(a=c.hook)&&o(a=a.init)&&a(t,!0),o(a=t.componentInstance)))return p(t,n),!0;if(o(i)){if(o(l))if(e.hasChildNodes())if(o(a=c)&&o(a=a.domProps)&&o(a=a.innerHTML)){if(a!==e.innerHTML)return!1}else{for(var u=!0,h=e.firstChild,d=0;d<l.length;d++){if(!h||!T(h,l[d],n,r)){u=!1;break}h=h.nextSibling}if(!u||h)return!1}else m(t,l,n);if(o(c)){var f=!1;for(var g in c)if(!P(g)){f=!0,y(t,n);break}!f&&c.class&&Ft(c.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,a){if(!i(t)){var c,l=!1,h=[];if(i(e))l=!0,d(t,h);else{var p=o(e.nodeType);if(!p&&Ar(e,t))M(e,t,h,null,null,a);else{if(p){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),n=!0),s(n)&&T(e,t,h))return A(t,h,!0),e;c=e,e=new pe(u.tagName(c).toLowerCase(),{},[],void 0,c)}var f=e.elm,m=u.parentNode(f);if(d(t,h,f._leaveCb?null:m,u.nextSibling(f)),o(t.parent))for(var y=t.parent,v=g(t);y;){for(var b=0;b<r.destroy.length;++b)r.destroy[b](y);if(y.elm=t.elm,v){for(var w=0;w<r.create.length;++w)r.create[w](Cr,y);var k=y.data.hook.insert;if(k.merged)for(var C=k.fns.slice(1),P=0;P<C.length;P++)C[P]()}else xr(y);y=y.parent}o(m)?x([e],0,0):o(e.tag)&&_(e)}}return A(t,h,l),t.elm}o(e)&&_(e)}}({nodeOps:wr,modules:[zr,qr,Kr,Jr,ca,Y?{create:Ia,activate:Ia,remove:function(e,t){!0!==e.data.show?Sa(e,t):t()}}:{}].concat(jr)});X&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&qa(e,"input")}));var ja={inserted:function(e,t,n,r){"select"===n.tag?(r.elm&&!r.elm._vOptions?We(n,"postpatch",(function(){ja.componentUpdated(e,t,n)})):Ra(e,t,n.context),e._vOptions=[].map.call(e.options,za)):("textarea"===n.tag||br(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",Ua),e.addEventListener("compositionend",Ba),e.addEventListener("change",Ba),X&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){Ra(e,t,n.context);var r=e._vOptions,a=e._vOptions=[].map.call(e.options,za);if(a.some((function(e,t){return!D(e,r[t])})))(e.multiple?t.value.some((function(e){return Da(e,a)})):t.value!==t.oldValue&&Da(t.value,a))&&qa(e,"change")}}};function Ra(e,t,n){$a(e,t,n),(J||Q)&&setTimeout((function(){$a(e,t,n)}),0)}function $a(e,t,n){var r=t.value,a=e.multiple;if(!a||Array.isArray(r)){for(var i,o,s=0,c=e.options.length;s<c;s++)if(o=e.options[s],a)i=z(r,za(o))>-1,o.selected!==i&&(o.selected=i);else if(D(za(o),r))return void(e.selectedIndex!==s&&(e.selectedIndex=s));a||(e.selectedIndex=-1)}}function Da(e,t){return t.every((function(t){return!D(t,e)}))}function za(e){return"_value"in e?e._value:e.value}function Ua(e){e.target.composing=!0}function Ba(e){e.target.composing&&(e.target.composing=!1,qa(e.target,"input"))}function qa(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function Fa(e){return!e.componentInstance||e.data&&e.data.transition?e:Fa(e.componentInstance._vnode)}var Na={model:ja,show:{bind:function(e,t,n){var r=t.value,a=(n=Fa(n)).data&&n.data.transition,i=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;r&&a?(n.data.show=!0,Ta(n,(function(){e.style.display=i}))):e.style.display=r?i:"none"},update:function(e,t,n){var r=t.value;!r!=!t.oldValue&&((n=Fa(n)).data&&n.data.transition?(n.data.show=!0,r?Ta(n,(function(){e.style.display=e.__vOriginalDisplay})):Sa(n,(function(){e.style.display="none"}))):e.style.display=r?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,r,a){a||(e.style.display=e.__vOriginalDisplay)}}},Ha={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Ga(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?Ga(Ct(t.children)):e}function Va(e){var t={},n=e.$options;for(var r in n.propsData)t[r]=e[r];var a=n._parentListeners;for(var r in a)t[A(r)]=a[r];return t}function Wa(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var Ka=function(e){return e.tag||ft(e)},Ya=function(e){return"show"===e.name},Za={name:"transition",props:Ha,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(Ka)).length){0;var r=this.mode;0;var a=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return a;var i=Ga(a);if(!i)return a;if(this._leaving)return Wa(e,a);var o="__transition-".concat(this._uid,"-");i.key=null==i.key?i.isComment?o+"comment":o+i.tag:c(i.key)?0===String(i.key).indexOf(o)?i.key:o+i.key:i.key;var s=(i.data||(i.data={})).transition=Va(this),l=this._vnode,u=Ga(l);if(i.data.directives&&i.data.directives.some(Ya)&&(i.data.show=!0),u&&u.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(i,u)&&!ft(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var h=u.data.transition=I({},s);if("out-in"===r)return this._leaving=!0,We(h,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),Wa(e,a);if("in-out"===r){if(ft(i))return l;var d,p=function(){d()};We(s,"afterEnter",p),We(s,"enterCancelled",p),We(h,"delayLeave",(function(e){d=e}))}}return a}}},Ja=I({tag:String,moveClass:String},Ha);function Xa(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Qa(e){e.data.newPos=e.elm.getBoundingClientRect()}function ei(e){var t=e.data.pos,n=e.data.newPos,r=t.left-n.left,a=t.top-n.top;if(r||a){e.data.moved=!0;var i=e.elm.style;i.transform=i.WebkitTransform="translate(".concat(r,"px,").concat(a,"px)"),i.transitionDuration="0s"}}delete Ja.mode;var ti={Transition:Za,TransitionGroup:{props:Ja,beforeMount:function(){var e=this,t=this._update;this._update=function(n,r){var a=Jt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,a(),t.call(e,n,r)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),r=this.prevChildren=this.children,a=this.$slots.default||[],i=this.children=[],o=Va(this),s=0;s<a.length;s++){if((u=a[s]).tag)if(null!=u.key&&0!==String(u.key).indexOf("__vlist"))i.push(u),n[u.key]=u,(u.data||(u.data={})).transition=o;else;}if(r){var c=[],l=[];for(s=0;s<r.length;s++){var u;(u=r[s]).data.transition=o,u.data.pos=u.elm.getBoundingClientRect(),n[u.key]?c.push(u):l.push(u)}this.kept=e(t,null,c),this.removed=l}return e(t,null,i)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(Xa),e.forEach(Qa),e.forEach(ei),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,r=n.style;_a(n,t),r.transform=r.WebkitTransform=r.transitionDuration="",n.addEventListener(ga,n._moveCb=function e(r){r&&r.target!==n||r&&!/transform$/.test(r.propertyName)||(n.removeEventListener(ga,e),n._moveCb=null,xa(n,t))})}})))},methods:{hasMove:function(e,t){if(!fa)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){ha(n,e)})),ua(n,t),n.style.display="none",this.$el.appendChild(n);var r=Ma(n);return this.$el.removeChild(n),this._hasMove=r.hasTransform}}}};function ni(e,t){for(var n in t)e[n]=t[n];return e}Wn.config.mustUseProp=function(e,t,n){return"value"===n&&nr(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},Wn.config.isReservedTag=yr,Wn.config.isReservedAttr=tr,Wn.config.getTagNamespace=function(e){return gr(e)?"svg":"math"===e?"math":void 0},Wn.config.isUnknownElement=function(e){if(!Y)return!0;if(yr(e))return!1;if(e=e.toLowerCase(),null!=vr[e])return vr[e];var t=document.createElement(e);return e.indexOf("-")>-1?vr[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:vr[e]=/HTMLUnknownElement/.test(t.toString())},I(Wn.options.directives,Na),I(Wn.options.components,ti),Wn.prototype.__patch__=Y?La:j,Wn.prototype.$mount=function(e,t){return function(e,t,n){var r;e.$el=t,e.$options.render||(e.$options.render=fe),en(e,"beforeMount"),r=function(){e._update(e._render(),n)},new Gt(e,r,j,{before:function(){e._isMounted&&!e._isDestroyed&&en(e,"beforeUpdate")}},!0),n=!1;var a=e._preWatchers;if(a)for(var i=0;i<a.length;i++)a[i].run();return null==e.$vnode&&(e._isMounted=!0,en(e,"mounted")),e}(this,e=e&&Y?function(e){if("string"==typeof e){var t=document.querySelector(e);return t||document.createElement("div")}return e}(e):void 0,t)},Y&&setTimeout((function(){N.devtools&&se&&se.emit("init",Wn)}),0);var ri=/[!'()*]/g,ai=function(e){return"%"+e.charCodeAt(0).toString(16)},ii=/%2C/g,oi=function(e){return encodeURIComponent(e).replace(ri,ai).replace(ii,",")};function si(e){try{return decodeURIComponent(e)}catch(e){0}return e}var ci=function(e){return null==e||"object"==typeof e?e:String(e)};function li(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),r=si(n.shift()),a=n.length>0?si(n.join("=")):null;void 0===t[r]?t[r]=a:Array.isArray(t[r])?t[r].push(a):t[r]=[t[r],a]})),t):t}function ui(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return oi(t);if(Array.isArray(n)){var r=[];return n.forEach((function(e){void 0!==e&&(null===e?r.push(oi(t)):r.push(oi(t)+"="+oi(e)))})),r.join("&")}return oi(t)+"="+oi(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var hi=/\/?$/;function di(e,t,n,r){var a=r&&r.options.stringifyQuery,i=t.query||{};try{i=pi(i)}catch(e){}var o={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:i,params:t.params||{},fullPath:gi(t,a),matched:e?mi(e):[]};return n&&(o.redirectedFrom=gi(n,a)),Object.freeze(o)}function pi(e){if(Array.isArray(e))return e.map(pi);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=pi(e[n]);return t}return e}var fi=di(null,{path:"/"});function mi(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function gi(e,t){var n=e.path,r=e.query;void 0===r&&(r={});var a=e.hash;return void 0===a&&(a=""),(n||"/")+(t||ui)(r)+a}function yi(e,t,n){return t===fi?e===t:!!t&&(e.path&&t.path?e.path.replace(hi,"")===t.path.replace(hi,"")&&(n||e.hash===t.hash&&vi(e.query,t.query)):!(!e.name||!t.name)&&(e.name===t.name&&(n||e.hash===t.hash&&vi(e.query,t.query)&&vi(e.params,t.params))))}function vi(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e).sort(),r=Object.keys(t).sort();return n.length===r.length&&n.every((function(n,a){var i=e[n];if(r[a]!==n)return!1;var o=t[n];return null==i||null==o?i===o:"object"==typeof i&&"object"==typeof o?vi(i,o):String(i)===String(o)}))}function bi(e){for(var t=0;t<e.matched.length;t++){var n=e.matched[t];for(var r in n.instances){var a=n.instances[r],i=n.enteredCbs[r];if(a&&i){delete n.enteredCbs[r];for(var o=0;o<i.length;o++)a._isBeingDestroyed||i[o](a)}}}}var wi={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,r=t.children,a=t.parent,i=t.data;i.routerView=!0;for(var o=a.$createElement,s=n.name,c=a.$route,l=a._routerViewCache||(a._routerViewCache={}),u=0,h=!1;a&&a._routerRoot!==a;){var d=a.$vnode?a.$vnode.data:{};d.routerView&&u++,d.keepAlive&&a._directInactive&&a._inactive&&(h=!0),a=a.$parent}if(i.routerViewDepth=u,h){var p=l[s],f=p&&p.component;return f?(p.configProps&&_i(f,i,p.route,p.configProps),o(f,i,r)):o()}var m=c.matched[u],g=m&&m.components[s];if(!m||!g)return l[s]=null,o();l[s]={component:g},i.registerRouteInstance=function(e,t){var n=m.instances[s];(t&&n!==e||!t&&n===e)&&(m.instances[s]=t)},(i.hook||(i.hook={})).prepatch=function(e,t){m.instances[s]=t.componentInstance},i.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==m.instances[s]&&(m.instances[s]=e.componentInstance),bi(c)};var y=m.props&&m.props[s];return y&&(ni(l[s],{route:c,configProps:y}),_i(g,i,c,y)),o(g,i,r)}};function _i(e,t,n,r){var a=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0;default:0}}(n,r);if(a){a=t.props=ni({},a);var i=t.attrs=t.attrs||{};for(var o in a)e.props&&o in e.props||(i[o]=a[o],delete a[o])}}function xi(e,t,n){var r=e.charAt(0);if("/"===r)return e;if("?"===r||"#"===r)return t+e;var a=t.split("/");n&&a[a.length-1]||a.pop();for(var i=e.replace(/^\//,"").split("/"),o=0;o<i.length;o++){var s=i[o];".."===s?a.pop():"."!==s&&a.push(s)}return""!==a[0]&&a.unshift(""),a.join("/")}function ki(e){return e.replace(/\/(?:\s*\/)+/g,"/")}var Ci=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},Mi=Ui,Ai=Ei,Pi=function(e,t){return Li(Ei(e,t),t)},Ti=Li,Si=zi,Oi=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function Ei(e,t){for(var n,r=[],a=0,i=0,o="",s=t&&t.delimiter||"/";null!=(n=Oi.exec(e));){var c=n[0],l=n[1],u=n.index;if(o+=e.slice(i,u),i=u+c.length,l)o+=l[1];else{var h=e[i],d=n[2],p=n[3],f=n[4],m=n[5],g=n[6],y=n[7];o&&(r.push(o),o="");var v=null!=d&&null!=h&&h!==d,b="+"===g||"*"===g,w="?"===g||"*"===g,_=n[2]||s,x=f||m;r.push({name:p||a++,prefix:d||"",delimiter:_,optional:w,repeat:b,partial:v,asterisk:!!y,pattern:x?Ri(x):y?".*":"[^"+ji(_)+"]+?"})}}return i<e.length&&(o+=e.substr(i)),o&&r.push(o),r}function Ii(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function Li(e,t){for(var n=new Array(e.length),r=0;r<e.length;r++)"object"==typeof e[r]&&(n[r]=new RegExp("^(?:"+e[r].pattern+")$",Di(t)));return function(t,r){for(var a="",i=t||{},o=(r||{}).pretty?Ii:encodeURIComponent,s=0;s<e.length;s++){var c=e[s];if("string"!=typeof c){var l,u=i[c.name];if(null==u){if(c.optional){c.partial&&(a+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(Ci(u)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var h=0;h<u.length;h++){if(l=o(u[h]),!n[s].test(l))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(l)+"`");a+=(0===h?c.prefix:c.delimiter)+l}}else{if(l=c.asterisk?encodeURI(u).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):o(u),!n[s].test(l))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+l+'"');a+=c.prefix+l}}else a+=c}return a}}function ji(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function Ri(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function $i(e,t){return e.keys=t,e}function Di(e){return e&&e.sensitive?"":"i"}function zi(e,t,n){Ci(t)||(n=t||n,t=[]);for(var r=(n=n||{}).strict,a=!1!==n.end,i="",o=0;o<e.length;o++){var s=e[o];if("string"==typeof s)i+=ji(s);else{var c=ji(s.prefix),l="(?:"+s.pattern+")";t.push(s),s.repeat&&(l+="(?:"+c+l+")*"),i+=l=s.optional?s.partial?c+"("+l+")?":"(?:"+c+"("+l+"))?":c+"("+l+")"}}var u=ji(n.delimiter||"/"),h=i.slice(-u.length)===u;return r||(i=(h?i.slice(0,-u.length):i)+"(?:"+u+"(?=$))?"),i+=a?"$":r&&h?"":"(?="+u+"|$)",$i(new RegExp("^"+i,Di(n)),t)}function Ui(e,t,n){return Ci(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return $i(e,t)}(e,t):Ci(e)?function(e,t,n){for(var r=[],a=0;a<e.length;a++)r.push(Ui(e[a],t,n).source);return $i(new RegExp("(?:"+r.join("|")+")",Di(n)),t)}(e,t,n):function(e,t,n){return zi(Ei(e,n),t,n)}(e,t,n)}Mi.parse=Ai,Mi.compile=Pi,Mi.tokensToFunction=Ti,Mi.tokensToRegExp=Si;var Bi=Object.create(null);function qi(e,t,n){t=t||{};try{var r=Bi[e]||(Bi[e]=Mi.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),r(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function Fi(e,t,n,r){var a="string"==typeof e?{path:e}:e;if(a._normalized)return a;if(a.name){var i=(a=ni({},e)).params;return i&&"object"==typeof i&&(a.params=ni({},i)),a}if(!a.path&&a.params&&t){(a=ni({},a))._normalized=!0;var o=ni(ni({},t.params),a.params);if(t.name)a.name=t.name,a.params=o;else if(t.matched.length){var s=t.matched[t.matched.length-1].path;a.path=qi(s,o,t.path)}else 0;return a}var c=function(e){var t="",n="",r=e.indexOf("#");r>=0&&(t=e.slice(r),e=e.slice(0,r));var a=e.indexOf("?");return a>=0&&(n=e.slice(a+1),e=e.slice(0,a)),{path:e,query:n,hash:t}}(a.path||""),l=t&&t.path||"/",u=c.path?xi(c.path,l,n||a.append):l,h=function(e,t,n){void 0===t&&(t={});var r,a=n||li;try{r=a(e||"")}catch(e){r={}}for(var i in t){var o=t[i];r[i]=Array.isArray(o)?o.map(ci):ci(o)}return r}(c.query,a.query,r&&r.options.parseQuery),d=a.hash||c.hash;return d&&"#"!==d.charAt(0)&&(d="#"+d),{_normalized:!0,path:u,query:h,hash:d}}var Ni,Hi=function(){},Gi={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,r=this.$route,a=n.resolve(this.to,r,this.append),i=a.location,o=a.route,s=a.href,c={},l=n.options.linkActiveClass,u=n.options.linkExactActiveClass,h=null==l?"router-link-active":l,d=null==u?"router-link-exact-active":u,p=null==this.activeClass?h:this.activeClass,f=null==this.exactActiveClass?d:this.exactActiveClass,m=o.redirectedFrom?di(null,Fi(o.redirectedFrom),null,n):o;c[f]=yi(r,m,this.exactPath),c[p]=this.exact||this.exactPath?c[f]:function(e,t){return 0===e.path.replace(hi,"/").indexOf(t.path.replace(hi,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(r,m);var g=c[f]?this.ariaCurrentValue:null,y=function(e){Vi(e)&&(t.replace?n.replace(i,Hi):n.push(i,Hi))},v={click:Vi};Array.isArray(this.event)?this.event.forEach((function(e){v[e]=y})):v[this.event]=y;var b={class:c},w=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:o,navigate:y,isActive:c[p],isExactActive:c[f]});if(w){if(1===w.length)return w[0];if(w.length>1||!w.length)return 0===w.length?e():e("span",{},w)}if("a"===this.tag)b.on=v,b.attrs={href:s,"aria-current":g};else{var _=function e(t){var n;if(t)for(var r=0;r<t.length;r++){if("a"===(n=t[r]).tag)return n;if(n.children&&(n=e(n.children)))return n}}(this.$slots.default);if(_){_.isStatic=!1;var x=_.data=ni({},_.data);for(var k in x.on=x.on||{},x.on){var C=x.on[k];k in v&&(x.on[k]=Array.isArray(C)?C:[C])}for(var M in v)M in x.on?x.on[M].push(v[M]):x.on[M]=y;var A=_.data.attrs=ni({},_.data.attrs);A.href=s,A["aria-current"]=g}else b.on=v}return e(this.tag,b,this.$slots.default)}};function Vi(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}var Wi="undefined"!=typeof window;function Ki(e,t,n,r,a){var i=t||[],o=n||Object.create(null),s=r||Object.create(null);e.forEach((function(e){!function e(t,n,r,a,i,o){var s=a.path,c=a.name;0;var l=a.pathToRegexpOptions||{},u=function(e,t,n){n||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==t)return e;return ki(t.path+"/"+e)}(s,i,l.strict);"boolean"==typeof a.caseSensitive&&(l.sensitive=a.caseSensitive);var h={path:u,regex:Yi(u,l),components:a.components||{default:a.component},alias:a.alias?"string"==typeof a.alias?[a.alias]:a.alias:[],instances:{},enteredCbs:{},name:c,parent:i,matchAs:o,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};a.children&&a.children.forEach((function(a){var i=o?ki(o+"/"+a.path):void 0;e(t,n,r,a,h,i)}));n[h.path]||(t.push(h.path),n[h.path]=h);if(void 0!==a.alias)for(var d=Array.isArray(a.alias)?a.alias:[a.alias],p=0;p<d.length;++p){0;var f={path:d[p],children:a.children};e(t,n,r,f,i,h.path||"/")}c&&(r[c]||(r[c]=h))}(i,o,s,e,a)}));for(var c=0,l=i.length;c<l;c++)"*"===i[c]&&(i.push(i.splice(c,1)[0]),l--,c--);return{pathList:i,pathMap:o,nameMap:s}}function Yi(e,t){return Mi(e,[],t)}function Zi(e,t){var n=Ki(e),r=n.pathList,a=n.pathMap,i=n.nameMap;function o(e,n,o){var s=Fi(e,n,!1,t),l=s.name;if(l){var u=i[l];if(!u)return c(null,s);var h=u.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof s.params&&(s.params={}),n&&"object"==typeof n.params)for(var d in n.params)!(d in s.params)&&h.indexOf(d)>-1&&(s.params[d]=n.params[d]);return s.path=qi(u.path,s.params),c(u,s,o)}if(s.path){s.params={};for(var p=0;p<r.length;p++){var f=r[p],m=a[f];if(Ji(m.regex,s.path,s.params))return c(m,s,o)}}return c(null,s)}function s(e,n){var r=e.redirect,a="function"==typeof r?r(di(e,n,null,t)):r;if("string"==typeof a&&(a={path:a}),!a||"object"!=typeof a)return c(null,n);var s=a,l=s.name,u=s.path,h=n.query,d=n.hash,p=n.params;if(h=s.hasOwnProperty("query")?s.query:h,d=s.hasOwnProperty("hash")?s.hash:d,p=s.hasOwnProperty("params")?s.params:p,l){i[l];return o({_normalized:!0,name:l,query:h,hash:d,params:p},void 0,n)}if(u){var f=function(e,t){return xi(e,t.parent?t.parent.path:"/",!0)}(u,e);return o({_normalized:!0,path:qi(f,p),query:h,hash:d},void 0,n)}return c(null,n)}function c(e,n,r){return e&&e.redirect?s(e,r||n):e&&e.matchAs?function(e,t,n){var r=o({_normalized:!0,path:qi(n,t.params)});if(r){var a=r.matched,i=a[a.length-1];return t.params=r.params,c(i,t)}return c(null,t)}(0,n,e.matchAs):di(e,n,r,t)}return{match:o,addRoute:function(e,t){var n="object"!=typeof e?i[e]:void 0;Ki([t||e],r,a,i,n),n&&n.alias.length&&Ki(n.alias.map((function(e){return{path:e,children:[t]}})),r,a,i,n)},getRoutes:function(){return r.map((function(e){return a[e]}))},addRoutes:function(e){Ki(e,r,a,i)}}}function Ji(e,t,n){var r=t.match(e);if(!r)return!1;if(!n)return!0;for(var a=1,i=r.length;a<i;++a){var o=e.keys[a-1];o&&(n[o.name||"pathMatch"]="string"==typeof r[a]?si(r[a]):r[a])}return!0}var Xi=Wi&&window.performance&&window.performance.now?window.performance:Date;function Qi(){return Xi.now().toFixed(3)}var eo=Qi();function to(){return eo}function no(e){return eo=e}var ro=Object.create(null);function ao(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=ni({},window.history.state);return n.key=to(),window.history.replaceState(n,"",t),window.addEventListener("popstate",so),function(){window.removeEventListener("popstate",so)}}function io(e,t,n,r){if(e.app){var a=e.options.scrollBehavior;a&&e.app.$nextTick((function(){var i=function(){var e=to();if(e)return ro[e]}(),o=a.call(e,t,n,r?i:null);o&&("function"==typeof o.then?o.then((function(e){po(e,i)})).catch((function(e){0})):po(o,i))}))}}function oo(){var e=to();e&&(ro[e]={x:window.pageXOffset,y:window.pageYOffset})}function so(e){oo(),e.state&&e.state.key&&no(e.state.key)}function co(e){return uo(e.x)||uo(e.y)}function lo(e){return{x:uo(e.x)?e.x:window.pageXOffset,y:uo(e.y)?e.y:window.pageYOffset}}function uo(e){return"number"==typeof e}var ho=/^#\d/;function po(e,t){var n,r="object"==typeof e;if(r&&"string"==typeof e.selector){var a=ho.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(a){var i=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),r=e.getBoundingClientRect();return{x:r.left-n.left-t.x,y:r.top-n.top-t.y}}(a,i={x:uo((n=i).x)?n.x:0,y:uo(n.y)?n.y:0})}else co(e)&&(t=lo(e))}else r&&co(e)&&(t=lo(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var fo,mo=Wi&&((-1===(fo=window.navigator.userAgent).indexOf("Android 2.")&&-1===fo.indexOf("Android 4.0")||-1===fo.indexOf("Mobile Safari")||-1!==fo.indexOf("Chrome")||-1!==fo.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function go(e,t){oo();var n=window.history;try{if(t){var r=ni({},n.state);r.key=to(),n.replaceState(r,"",e)}else n.pushState({key:no(Qi())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function yo(e){go(e,!0)}var vo={redirected:2,aborted:4,cancelled:8,duplicated:16};function bo(e,t){return _o(e,t,vo.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return xo.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}function wo(e,t){return _o(e,t,vo.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function _o(e,t,n,r){var a=new Error(r);return a._isRouter=!0,a.from=e,a.to=t,a.type=n,a}var xo=["params","query","hash"];function ko(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function Co(e,t){return ko(e)&&e._isRouter&&(null==t||e.type===t)}function Mo(e,t,n){var r=function(a){a>=e.length?n():e[a]?t(e[a],(function(){r(a+1)})):r(a+1)};r(0)}function Ao(e){return function(t,n,r){var a=!1,i=0,o=null;Po(e,(function(e,t,n,s){if("function"==typeof e&&void 0===e.cid){a=!0,i++;var c,l=Oo((function(t){var a;((a=t).__esModule||So&&"Module"===a[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:Ni.extend(t),n.components[s]=t,--i<=0&&r()})),u=Oo((function(e){var t="Failed to resolve async component "+s+": "+e;o||(o=ko(e)?e:new Error(t),r(o))}));try{c=e(l,u)}catch(e){u(e)}if(c)if("function"==typeof c.then)c.then(l,u);else{var h=c.component;h&&"function"==typeof h.then&&h.then(l,u)}}})),a||r()}}function Po(e,t){return To(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function To(e){return Array.prototype.concat.apply([],e)}var So="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Oo(e){var t=!1;return function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];if(!t)return t=!0,e.apply(this,n)}}var Eo=function(e,t){this.router=e,this.base=function(e){if(!e)if(Wi){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(t),this.current=fi,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Io(e,t,n,r){var a=Po(e,(function(e,r,a,i){var o=function(e,t){"function"!=typeof e&&(e=Ni.extend(e));return e.options[t]}(e,t);if(o)return Array.isArray(o)?o.map((function(e){return n(e,r,a,i)})):n(o,r,a,i)}));return To(r?a.reverse():a)}function Lo(e,t){if(t)return function(){return e.apply(t,arguments)}}Eo.prototype.listen=function(e){this.cb=e},Eo.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},Eo.prototype.onError=function(e){this.errorCbs.push(e)},Eo.prototype.transitionTo=function(e,t,n){var r,a=this;try{r=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var i=this.current;this.confirmTransition(r,(function(){a.updateRoute(r),t&&t(r),a.ensureURL(),a.router.afterHooks.forEach((function(e){e&&e(r,i)})),a.ready||(a.ready=!0,a.readyCbs.forEach((function(e){e(r)})))}),(function(e){n&&n(e),e&&!a.ready&&(Co(e,vo.redirected)&&i===fi||(a.ready=!0,a.readyErrorCbs.forEach((function(t){t(e)}))))}))},Eo.prototype.confirmTransition=function(e,t,n){var r=this,a=this.current;this.pending=e;var i=function(e){!Co(e)&&ko(e)&&(r.errorCbs.length?r.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},o=e.matched.length-1,s=a.matched.length-1;if(yi(e,a)&&o===s&&e.matched[o]===a.matched[s])return this.ensureURL(),e.hash&&io(this.router,a,e,!1),i(function(e,t){var n=_o(e,t,vo.duplicated,'Avoided redundant navigation to current location: "'+e.fullPath+'".');return n.name="NavigationDuplicated",n}(a,e));var c=function(e,t){var n,r=Math.max(e.length,t.length);for(n=0;n<r&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),l=c.updated,u=c.deactivated,h=c.activated,d=[].concat(function(e){return Io(e,"beforeRouteLeave",Lo,!0)}(u),this.router.beforeHooks,function(e){return Io(e,"beforeRouteUpdate",Lo)}(l),h.map((function(e){return e.beforeEnter})),Ao(h)),p=function(t,n){if(r.pending!==e)return i(wo(a,e));try{t(e,a,(function(t){!1===t?(r.ensureURL(!0),i(function(e,t){return _o(e,t,vo.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(a,e))):ko(t)?(r.ensureURL(!0),i(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(i(bo(a,e)),"object"==typeof t&&t.replace?r.replace(t):r.push(t)):n(t)}))}catch(e){i(e)}};Mo(d,p,(function(){Mo(function(e){return Io(e,"beforeRouteEnter",(function(e,t,n,r){return function(e,t,n){return function(r,a,i){return e(r,a,(function(e){"function"==typeof e&&(t.enteredCbs[n]||(t.enteredCbs[n]=[]),t.enteredCbs[n].push(e)),i(e)}))}}(e,n,r)}))}(h).concat(r.router.resolveHooks),p,(function(){if(r.pending!==e)return i(wo(a,e));r.pending=null,t(e),r.router.app&&r.router.app.$nextTick((function(){bi(e)}))}))}))},Eo.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Eo.prototype.setupListeners=function(){},Eo.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=fi,this.pending=null};var jo=function(e){function t(t,n){e.call(this,t,n),this._startLocation=Ro(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,r=mo&&n;r&&this.listeners.push(ao());var a=function(){var n=e.current,a=Ro(e.base);e.current===fi&&a===e._startLocation||e.transitionTo(a,(function(e){r&&io(t,e,n,!0)}))};window.addEventListener("popstate",a),this.listeners.push((function(){window.removeEventListener("popstate",a)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){go(ki(r.base+e.fullPath)),io(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){yo(ki(r.base+e.fullPath)),io(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(Ro(this.base)!==this.current.fullPath){var t=ki(this.base+this.current.fullPath);e?go(t):yo(t)}},t.prototype.getCurrentLocation=function(){return Ro(this.base)},t}(Eo);function Ro(e){var t=window.location.pathname,n=t.toLowerCase(),r=e.toLowerCase();return!e||n!==r&&0!==n.indexOf(ki(r+"/"))||(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var $o=function(e){function t(t,n,r){e.call(this,t,n),r&&function(e){var t=Ro(e);if(!/^\/#/.test(t))return window.location.replace(ki(e+"/#"+t)),!0}(this.base)||Do()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=mo&&t;n&&this.listeners.push(ao());var r=function(){var t=e.current;Do()&&e.transitionTo(zo(),(function(r){n&&io(e.router,r,t,!0),mo||qo(r.fullPath)}))},a=mo?"popstate":"hashchange";window.addEventListener(a,r),this.listeners.push((function(){window.removeEventListener(a,r)}))}},t.prototype.push=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){Bo(e.fullPath),io(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){qo(e.fullPath),io(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;zo()!==t&&(e?Bo(t):qo(t))},t.prototype.getCurrentLocation=function(){return zo()},t}(Eo);function Do(){var e=zo();return"/"===e.charAt(0)||(qo("/"+e),!1)}function zo(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function Uo(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function Bo(e){mo?go(Uo(e)):window.location.hash=e}function qo(e){mo?yo(Uo(e)):window.location.replace(Uo(e))}var Fo=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index+1).concat(e),r.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var r=this.stack[n];this.confirmTransition(r,(function(){var e=t.current;t.index=n,t.updateRoute(r),t.router.afterHooks.forEach((function(t){t&&t(r,e)}))}),(function(e){Co(e,vo.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(Eo),No=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Zi(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!mo&&!1!==e.fallback,this.fallback&&(t="hash"),Wi||(t="abstract"),this.mode=t,t){case"history":this.history=new jo(this,e.base);break;case"hash":this.history=new $o(this,e.base,this.fallback);break;case"abstract":this.history=new Fo(this,e.base);break;default:0}},Ho={currentRoute:{configurable:!0}};No.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},Ho.currentRoute.get=function(){return this.history&&this.history.current},No.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var n=this.history;if(n instanceof jo||n instanceof $o){var r=function(e){n.setupListeners(),function(e){var r=n.current,a=t.options.scrollBehavior;mo&&a&&"fullPath"in e&&io(t,e,r,!1)}(e)};n.transitionTo(n.getCurrentLocation(),r,r)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},No.prototype.beforeEach=function(e){return Vo(this.beforeHooks,e)},No.prototype.beforeResolve=function(e){return Vo(this.resolveHooks,e)},No.prototype.afterEach=function(e){return Vo(this.afterHooks,e)},No.prototype.onReady=function(e,t){this.history.onReady(e,t)},No.prototype.onError=function(e){this.history.onError(e)},No.prototype.push=function(e,t,n){var r=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){r.history.push(e,t,n)}));this.history.push(e,t,n)},No.prototype.replace=function(e,t,n){var r=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){r.history.replace(e,t,n)}));this.history.replace(e,t,n)},No.prototype.go=function(e){this.history.go(e)},No.prototype.back=function(){this.go(-1)},No.prototype.forward=function(){this.go(1)},No.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},No.prototype.resolve=function(e,t,n){var r=Fi(e,t=t||this.history.current,n,this),a=this.match(r,t),i=a.redirectedFrom||a.fullPath;return{location:r,route:a,href:function(e,t,n){var r="hash"===n?"#"+t:t;return e?ki(e+"/"+r):r}(this.history.base,i,this.mode),normalizedTo:r,resolved:a}},No.prototype.getRoutes=function(){return this.matcher.getRoutes()},No.prototype.addRoute=function(e,t){this.matcher.addRoute(e,t),this.history.current!==fi&&this.history.transitionTo(this.history.getCurrentLocation())},No.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==fi&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(No.prototype,Ho);var Go=No;function Vo(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}No.install=function e(t){if(!e.installed||Ni!==t){e.installed=!0,Ni=t;var n=function(e){return void 0!==e},r=function(e,t){var r=e.$options._parentVnode;n(r)&&n(r=r.data)&&n(r=r.registerRouteInstance)&&r(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",wi),t.component("RouterLink",Gi);var a=t.config.optionMergeStrategies;a.beforeRouteEnter=a.beforeRouteLeave=a.beforeRouteUpdate=a.created}},No.version="3.6.5",No.isNavigationFailure=Co,No.NavigationFailureType=vo,No.START_LOCATION=fi,Wi&&window.Vue&&window.Vue.use(No);n(128);n(28),n(153);var Wo={NotFound:()=>Promise.all([n.e(0),n.e(4)]).then(n.bind(null,406)),Layout:()=>Promise.all([n.e(0),n.e(2)]).then(n.bind(null,405))},Ko={"v-0fdda314":()=>n.e(5).then(n.bind(null,407)),"v-37c5bc96":()=>n.e(6).then(n.bind(null,408)),"v-4553c3a8":()=>n.e(7).then(n.bind(null,409)),"v-07282236":()=>n.e(8).then(n.bind(null,410)),"v-bd5cd4d4":()=>n.e(9).then(n.bind(null,411)),"v-abb0f8a2":()=>n.e(11).then(n.bind(null,412)),"v-07abb6d6":()=>n.e(10).then(n.bind(null,413)),"v-d7471e16":()=>n.e(12).then(n.bind(null,414)),"v-9842a21a":()=>n.e(14).then(n.bind(null,415)),"v-b2fd417c":()=>n.e(13).then(n.bind(null,416)),"v-7f8db936":()=>n.e(15).then(n.bind(null,417)),"v-171f66aa":()=>n.e(16).then(n.bind(null,418)),"v-788071c5":()=>n.e(17).then(n.bind(null,419)),"v-25995465":()=>n.e(18).then(n.bind(null,420)),"v-f3b213e2":()=>n.e(19).then(n.bind(null,421)),"v-b25c491a":()=>n.e(21).then(n.bind(null,422)),"v-6ffd4505":()=>n.e(20).then(n.bind(null,423)),"v-f96426b0":()=>n.e(22).then(n.bind(null,424)),"v-5849f946":()=>n.e(23).then(n.bind(null,425)),"v-2861ec8b":()=>n.e(24).then(n.bind(null,426)),"v-d22a70f6":()=>n.e(26).then(n.bind(null,427)),"v-04292a45":()=>n.e(25).then(n.bind(null,428)),"v-65bd31e5":()=>n.e(27).then(n.bind(null,429)),"v-02aef12e":()=>n.e(29).then(n.bind(null,430)),"v-e33712b6":()=>n.e(28).then(n.bind(null,431)),"v-121d90a9":()=>n.e(30).then(n.bind(null,432)),"v-c1b2e1c6":()=>n.e(31).then(n.bind(null,433)),"v-26a9c736":()=>n.e(32).then(n.bind(null,434)),"v-b267e276":()=>n.e(33).then(n.bind(null,435)),"v-259f44f9":()=>n.e(34).then(n.bind(null,436)),"v-2e715932":()=>n.e(35).then(n.bind(null,437)),"v-2f8a0a7e":()=>n.e(37).then(n.bind(null,438)),"v-f8e02736":()=>n.e(36).then(n.bind(null,439)),"v-01216c79":()=>n.e(38).then(n.bind(null,440))};function Yo(e){const t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}const Zo=/-(\w)/g,Jo=Yo(e=>e.replace(Zo,(e,t)=>t?t.toUpperCase():"")),Xo=/\B([A-Z])/g,Qo=Yo(e=>e.replace(Xo,"-$1").toLowerCase()),es=Yo(e=>e.charAt(0).toUpperCase()+e.slice(1));function ts(e,t){if(!t)return;if(e(t))return e(t);return t.includes("-")?e(es(Jo(t))):e(es(t))||e(Qo(t))}const ns=Object.assign({},Wo,Ko),rs=e=>ns[e],as=e=>Ko[e],is=e=>Wo[e],os=e=>Wn.component(e);function ss(e){return ts(as,e)}function cs(e){return ts(is,e)}function ls(e){return ts(rs,e)}function us(e){return ts(os,e)}function hs(...e){return Promise.all(e.filter(e=>e).map(async e=>{if(!us(e)&&ls(e)){const t=await ls(e)();Wn.component(e,t.default)}}))}function ds(e,t){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=t)}var ps=n(112),fs=n.n(ps),ms={created(){if(this.siteMeta=this.$site.headTags.filter(([e])=>"meta"===e).map(([e,t])=>t),this.$ssrContext){const t=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=t)?e.map(e=>{let t="<meta";return Object.keys(e).forEach(n=>{t+=` ${n}="${e[n]}"`}),t+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=ys(this.$canonicalUrl)}var e},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const e=this.getMergedMetaTags();this.currentMetaTags=vs(e,this.currentMetaTags)},getMergedMetaTags(){const e=this.$page.frontmatter.meta||[];return fs()([{name:"description",content:this.$description}],e,this.siteMeta,bs)},updateCanonicalLink(){gs(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",ys(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){vs(null,this.currentMetaTags),gs()}};function gs(){const e=document.querySelector("link[rel='canonical']");e&&e.remove()}function ys(e=""){return e?`<link href="${e}" rel="canonical" />`:""}function vs(e,t){if(t&&[...t].filter(e=>e.parentNode===document.head).forEach(e=>document.head.removeChild(e)),e)return e.map(e=>{const t=document.createElement("meta");return Object.keys(e).forEach(n=>{t.setAttribute(n,e[n])}),document.head.appendChild(t),t})}function bs(e){for(const t of["name","property","itemprop"])if(e.hasOwnProperty(t))return e[t]+t;return JSON.stringify(e)}var ws=n(58),_s={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:n.n(ws)()((function(){this.setActiveHash()}),300),setActiveHash(){const e=[].slice.call(document.querySelectorAll(".sidebar-link")),t=[].slice.call(document.querySelectorAll(".header-anchor")).filter(t=>e.some(e=>e.hash===t.hash)),n=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),r=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),a=window.innerHeight+n;for(let e=0;e<t.length;e++){const i=t[e],o=t[e+1],s=0===e&&0===n||n>=i.parentElement.offsetTop+10&&(!o||n<o.parentElement.offsetTop-10),c=decodeURIComponent(this.$route.hash);if(s&&c!==decodeURIComponent(i.hash)){const n=i;if(a===r)for(let n=e+1;n<t.length;n++)if(c===decodeURIComponent(t[n].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(n.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},xs=n(27),ks=n.n(xs),Cs={mounted(){ks.a.configure({showSpinner:!1}),this.$router.beforeEach((e,t,n)=>{e.path===t.path||Wn.component(e.name)||ks.a.start(),n()}),this.$router.afterEach(()=>{ks.a.done(),this.isSidebarOpen=!1})}};n(262),n(263);class Ms{constructor(){this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}show({text:e="",duration:t=3e3}){let n=document.createElement("div");n.className="message move-in",n.innerHTML=`\n      <i style="fill: #06a35a;font-size: 14px;display:inline-flex;align-items: center;">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">${e}</div>\n    `,this.containerEl.appendChild(n),t>0&&setTimeout(()=>{this.close(n)},t)}close(e){e.className=e.className.replace("move-in",""),e.className+="move-out",e.addEventListener("animationend",()=>{e.remove()})}}var As={mounted(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},updated(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},methods:{updateCopy(){setTimeout(()=>{(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach(e=>{document.querySelectorAll(e).forEach(this.generateCopyButton)})},1e3)},generateCopyButton(e){if(e.classList.contains("codecopy-enabled"))return;const t=document.createElement("i");t.className="code-copy",t.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',t.title="Copy to clipboard",t.addEventListener("click",()=>{this.copyToClipboard(e.innerText)}),e.appendChild(t),e.classList.add("codecopy-enabled")},copyToClipboard(e){const t=document.createElement("textarea");t.value=e,t.setAttribute("readonly",""),t.style.position="absolute",t.style.left="-9999px",document.body.appendChild(t);const n=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);t.select(),document.execCommand("copy");(new Ms).show({text:"复制成功",duration:1e3}),document.body.removeChild(t),n&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(n))}}},Ps="auto",Ts="zoom-in",Ss="zoom-out",Os="grab",Es="move";function Is(e,t,n){var r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a={passive:!1};r?e.addEventListener(t,n,a):e.removeEventListener(t,n,a)}function Ls(e,t){if(e){var n=new Image;n.onload=function(){t&&t(n)},n.src=e}}function js(e){return e.dataset.original?e.dataset.original:"A"===e.parentNode.tagName?e.parentNode.getAttribute("href"):null}function Rs(e,t,n){!function(e){var t=$s,n=Ds;if(e.transition){var r=e.transition;delete e.transition,e[t]=r}if(e.transform){var a=e.transform;delete e.transform,e[n]=a}}(t);var r=e.style,a={};for(var i in t)n&&(a[i]=r[i]||""),r[i]=t[i];return a}var $s="transition",Ds="transform",zs="transform",Us="transitionend";var Bs=function(){},qs={enableGrab:!0,preloadImage:!1,closeOnWindowResize:!0,transitionDuration:.4,transitionTimingFunction:"cubic-bezier(0.4, 0, 0, 1)",bgColor:"rgb(255, 255, 255)",bgOpacity:1,scaleBase:1,scaleExtra:.5,scrollThreshold:40,zIndex:998,customSize:null,onOpen:Bs,onClose:Bs,onGrab:Bs,onMove:Bs,onRelease:Bs,onBeforeOpen:Bs,onBeforeClose:Bs,onBeforeGrab:Bs,onBeforeRelease:Bs,onImageLoading:Bs,onImageLoaded:Bs},Fs={init:function(e){var t,n;t=this,n=e,Object.getOwnPropertyNames(Object.getPrototypeOf(t)).forEach((function(e){t[e]=t[e].bind(n)}))},click:function(e){if(e.preventDefault(),Hs(e))return window.open(this.target.srcOriginal||e.currentTarget.src,"_blank");this.shown?this.released?this.close():this.release():this.open(e.currentTarget)},scroll:function(){var e=document.documentElement||document.body.parentNode||document.body,t=window.pageXOffset||e.scrollLeft,n=window.pageYOffset||e.scrollTop;null===this.lastScrollPosition&&(this.lastScrollPosition={x:t,y:n});var r=this.lastScrollPosition.x-t,a=this.lastScrollPosition.y-n,i=this.options.scrollThreshold;(Math.abs(a)>=i||Math.abs(r)>=i)&&(this.lastScrollPosition=null,this.close())},keydown:function(e){(function(e){return"Escape"===(e.key||e.code)||27===e.keyCode})(e)&&(this.released?this.close():this.release(this.close))},mousedown:function(e){if(Ns(e)&&!Hs(e)){e.preventDefault();var t=e.clientX,n=e.clientY;this.pressTimer=setTimeout(function(){this.grab(t,n)}.bind(this),200)}},mousemove:function(e){this.released||this.move(e.clientX,e.clientY)},mouseup:function(e){Ns(e)&&!Hs(e)&&(clearTimeout(this.pressTimer),this.released?this.close():this.release())},touchstart:function(e){e.preventDefault();var t=e.touches[0],n=t.clientX,r=t.clientY;this.pressTimer=setTimeout(function(){this.grab(n,r)}.bind(this),200)},touchmove:function(e){if(!this.released){var t=e.touches[0],n=t.clientX,r=t.clientY;this.move(n,r)}},touchend:function(e){(function(e){e.targetTouches.length})(e)||(clearTimeout(this.pressTimer),this.released?this.close():this.release())},clickOverlay:function(){this.close()},resizeWindow:function(){this.close()}};function Ns(e){return 0===e.button}function Hs(e){return e.metaKey||e.ctrlKey}var Gs={init:function(e){this.el=document.createElement("div"),this.instance=e,this.parent=document.body,Rs(this.el,{position:"fixed",top:0,left:0,right:0,bottom:0,opacity:0}),this.updateStyle(e.options),Is(this.el,"click",e.handler.clickOverlay.bind(e))},updateStyle:function(e){Rs(this.el,{zIndex:e.zIndex,backgroundColor:e.bgColor,transition:"opacity\n        "+e.transitionDuration+"s\n        "+e.transitionTimingFunction})},insert:function(){this.parent.appendChild(this.el)},remove:function(){this.parent.removeChild(this.el)},fadeIn:function(){this.el.offsetWidth,this.el.style.opacity=this.instance.options.bgOpacity},fadeOut:function(){this.el.style.opacity=0}},Vs="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ws=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),Ks=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Ys={init:function(e,t){this.el=e,this.instance=t,this.srcThumbnail=this.el.getAttribute("src"),this.srcset=this.el.getAttribute("srcset"),this.srcOriginal=js(this.el),this.rect=this.el.getBoundingClientRect(),this.translate=null,this.scale=null,this.styleOpen=null,this.styleClose=null},zoomIn:function(){var e=this.instance.options,t=e.zIndex,n=e.enableGrab,r=e.transitionDuration,a=e.transitionTimingFunction;this.translate=this.calculateTranslate(),this.scale=this.calculateScale(),this.styleOpen={position:"relative",zIndex:t+1,cursor:n?Os:Ss,transition:zs+"\n        "+r+"s\n        "+a,transform:"translate3d("+this.translate.x+"px, "+this.translate.y+"px, 0px)\n        scale("+this.scale.x+","+this.scale.y+")",height:this.rect.height+"px",width:this.rect.width+"px"},this.el.offsetWidth,this.styleClose=Rs(this.el,this.styleOpen,!0)},zoomOut:function(){this.el.offsetWidth,Rs(this.el,{transform:"none"})},grab:function(e,t,n){var r=Zs(),a=r.x-e,i=r.y-t;Rs(this.el,{cursor:Es,transform:"translate3d(\n        "+(this.translate.x+a)+"px, "+(this.translate.y+i)+"px, 0px)\n        scale("+(this.scale.x+n)+","+(this.scale.y+n)+")"})},move:function(e,t,n){var r=Zs(),a=r.x-e,i=r.y-t;Rs(this.el,{transition:zs,transform:"translate3d(\n        "+(this.translate.x+a)+"px, "+(this.translate.y+i)+"px, 0px)\n        scale("+(this.scale.x+n)+","+(this.scale.y+n)+")"})},restoreCloseStyle:function(){Rs(this.el,this.styleClose)},restoreOpenStyle:function(){Rs(this.el,this.styleOpen)},upgradeSource:function(){if(this.srcOriginal){var e=this.el.parentNode;this.srcset&&this.el.removeAttribute("srcset");var t=this.el.cloneNode(!1);t.setAttribute("src",this.srcOriginal),t.style.position="fixed",t.style.visibility="hidden",e.appendChild(t),setTimeout(function(){this.el.setAttribute("src",this.srcOriginal),e.removeChild(t)}.bind(this),50)}},downgradeSource:function(){this.srcOriginal&&(this.srcset&&this.el.setAttribute("srcset",this.srcset),this.el.setAttribute("src",this.srcThumbnail))},calculateTranslate:function(){var e=Zs(),t=this.rect.left+this.rect.width/2,n=this.rect.top+this.rect.height/2;return{x:e.x-t,y:e.y-n}},calculateScale:function(){var e=this.el.dataset,t=e.zoomingHeight,n=e.zoomingWidth,r=this.instance.options,a=r.customSize,i=r.scaleBase;if(!a&&t&&n)return{x:n/this.rect.width,y:t/this.rect.height};if(a&&"object"===(void 0===a?"undefined":Vs(a)))return{x:a.width/this.rect.width,y:a.height/this.rect.height};var o=this.rect.width/2,s=this.rect.height/2,c=Zs(),l={x:c.x-o,y:c.y-s},u=l.x/o,h=l.y/s,d=i+Math.min(u,h);if(a&&"string"==typeof a){var p=n||this.el.naturalWidth,f=t||this.el.naturalHeight,m=parseFloat(a)*p/(100*this.rect.width),g=parseFloat(a)*f/(100*this.rect.height);if(d>m||d>g)return{x:m,y:g}}return{x:d,y:d}}};function Zs(){var e=document.documentElement;return{x:Math.min(e.clientWidth,window.innerWidth)/2,y:Math.min(e.clientHeight,window.innerHeight)/2}}function Js(e,t,n){["mousedown","mousemove","mouseup","touchstart","touchmove","touchend"].forEach((function(r){Is(e,r,t[r],n)}))}var Xs=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.target=Object.create(Ys),this.overlay=Object.create(Gs),this.handler=Object.create(Fs),this.body=document.body,this.shown=!1,this.lock=!1,this.released=!0,this.lastScrollPosition=null,this.pressTimer=null,this.options=Ks({},qs,t),this.overlay.init(this),this.handler.init(this)}return Ws(e,[{key:"listen",value:function(e){if("string"==typeof e)for(var t=document.querySelectorAll(e),n=t.length;n--;)this.listen(t[n]);else"IMG"===e.tagName&&(e.style.cursor=Ts,Is(e,"click",this.handler.click),this.options.preloadImage&&Ls(js(e)));return this}},{key:"config",value:function(e){return e?(Ks(this.options,e),this.overlay.updateStyle(this.options),this):this.options}},{key:"open",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.onOpen;if(!this.shown&&!this.lock){var r="string"==typeof e?document.querySelector(e):e;if("IMG"===r.tagName){if(this.options.onBeforeOpen(r),this.target.init(r,this),!this.options.preloadImage){var a=this.target.srcOriginal;null!=a&&(this.options.onImageLoading(r),Ls(a,this.options.onImageLoaded))}this.shown=!0,this.lock=!0,this.target.zoomIn(),this.overlay.insert(),this.overlay.fadeIn(),Is(document,"scroll",this.handler.scroll),Is(document,"keydown",this.handler.keydown),this.options.closeOnWindowResize&&Is(window,"resize",this.handler.resizeWindow);var i=function e(){Is(r,Us,e,!1),t.lock=!1,t.target.upgradeSource(),t.options.enableGrab&&Js(document,t.handler,!0),n(r)};return Is(r,Us,i),this}}}},{key:"close",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onClose;if(this.shown&&!this.lock){var n=this.target.el;this.options.onBeforeClose(n),this.lock=!0,this.body.style.cursor=Ps,this.overlay.fadeOut(),this.target.zoomOut(),Is(document,"scroll",this.handler.scroll,!1),Is(document,"keydown",this.handler.keydown,!1),this.options.closeOnWindowResize&&Is(window,"resize",this.handler.resizeWindow,!1);var r=function r(){Is(n,Us,r,!1),e.shown=!1,e.lock=!1,e.target.downgradeSource(),e.options.enableGrab&&Js(document,e.handler,!1),e.target.restoreCloseStyle(),e.overlay.remove(),t(n)};return Is(n,Us,r),this}}},{key:"grab",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onGrab;if(this.shown&&!this.lock){var a=this.target.el;this.options.onBeforeGrab(a),this.released=!1,this.target.grab(e,t,n);var i=function e(){Is(a,Us,e,!1),r(a)};return Is(a,Us,i),this}}},{key:"move",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onMove;if(this.shown&&!this.lock){this.released=!1,this.body.style.cursor=Es,this.target.move(e,t,n);var a=this.target.el,i=function e(){Is(a,Us,e,!1),r(a)};return Is(a,Us,i),this}}},{key:"release",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onRelease;if(this.shown&&!this.lock){var n=this.target.el;this.options.onBeforeRelease(n),this.lock=!0,this.body.style.cursor=Ps,this.target.restoreOpenStyle();var r=function r(){Is(n,Us,r,!1),e.lock=!1,e.released=!0,t(n)};return Is(n,Us,r),this}}}]),e}();const Qs=JSON.parse('{"bgColor":"rgba(0,0,0,0.6)"}'),ec=Number("500");class tc{constructor(){this.instance=new Xs(Qs)}update(e=".theme-vdoing-content img:not(.no-zoom)"){"undefined"!=typeof window&&this.instance.listen(e)}updateDelay(e=".theme-vdoing-content img:not(.no-zoom)",t=ec){setTimeout(()=>this.update(e),t)}}var nc=[ms,_s,Cs,As,{watch:{"$page.path"(){void 0!==this.$vuepress.zooming&&this.$vuepress.zooming.updateDelay()}},mounted(){this.$vuepress.zooming=new tc,this.$vuepress.zooming.updateDelay()}}],rc={name:"GlobalLayout",computed:{layout(){const e=this.getLayout();return ds("layout",e),Wn.component(e)}},methods:{getLayout(){if(this.$page.path){const e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},ac=n(5),ic=Object(ac.a)(rc,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,t,n){switch(t){case"components":e[t]||(e[t]={}),Object.assign(e[t],n);break;case"mixins":e[t]||(e[t]=[]),e[t].push(...n);break;default:throw new Error("Unknown option name.")}}(ic,"mixins",nc);const oc=[{name:"v-0fdda314",path:"/pages/f27694/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-0fdda314").then(n)}},{path:"/pages/f27694/index.html",redirect:"/pages/f27694/"},{path:"/00.目录页/00.Content.html",redirect:"/pages/f27694/"},{name:"v-37c5bc96",path:"/hbm/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-37c5bc96").then(n)}},{path:"/hbm/index.html",redirect:"/hbm/"},{path:"/00.目录页/01.hbm.html",redirect:"/hbm/"},{name:"v-4553c3a8",path:"/compiler/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-4553c3a8").then(n)}},{path:"/compiler/index.html",redirect:"/compiler/"},{path:"/00.目录页/02.compiler.html",redirect:"/compiler/"},{name:"v-07282236",path:"/gpu/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-07282236").then(n)}},{path:"/gpu/index.html",redirect:"/gpu/"},{path:"/00.目录页/03.gpu.html",redirect:"/gpu/"},{name:"v-bd5cd4d4",path:"/cpu/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-bd5cd4d4").then(n)}},{path:"/cpu/index.html",redirect:"/cpu/"},{path:"/00.目录页/04.cpu.html",redirect:"/cpu/"},{name:"v-abb0f8a2",path:"/pages/24769e/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-abb0f8a2").then(n)}},{path:"/pages/24769e/index.html",redirect:"/pages/24769e/"},{path:"/01.hbm/01.HBM_Paper_List.html",redirect:"/pages/24769e/"},{name:"v-07abb6d6",path:"/llm/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-07abb6d6").then(n)}},{path:"/llm/index.html",redirect:"/llm/"},{path:"/00.目录页/05.llm.html",redirect:"/llm/"},{name:"v-d7471e16",path:"/pages/2476af/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-d7471e16").then(n)}},{path:"/pages/2476af/index.html",redirect:"/pages/2476af/"},{path:"/01.hbm/02.hbm_dead_block_predictor.html",redirect:"/pages/2476af/"},{name:"v-9842a21a",path:"/pages/24760e/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-9842a21a").then(n)}},{path:"/pages/24760e/index.html",redirect:"/pages/24760e/"},{path:"/01.hbm/04.DRAM_PCM_NVM_Cache.html",redirect:"/pages/24760e/"},{name:"v-b2fd417c",path:"/pages/24769f/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-b2fd417c").then(n)}},{path:"/pages/24769f/index.html",redirect:"/pages/24769f/"},{path:"/01.hbm/03.Dynamically_Adapting _Page_Migration_Policies_Based_on_Applications_Memory_Access_Behaviors.html",redirect:"/pages/24769f/"},{name:"v-7f8db936",path:"/pages/2476bf/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-7f8db936").then(n)}},{path:"/pages/2476bf/index.html",redirect:"/pages/2476bf/"},{path:"/01.hbm/05.cache_mem_compression.html",redirect:"/pages/2476bf/"},{name:"v-171f66aa",path:"/pages/f07695/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-171f66aa").then(n)}},{path:"/pages/f07695/index.html",redirect:"/pages/f07695/"},{path:"/01.hbm/06.memory ecc.html",redirect:"/pages/f07695/"},{name:"v-788071c5",path:"/pages/f07696/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-788071c5").then(n)}},{path:"/pages/f07696/index.html",redirect:"/pages/f07696/"},{path:"/01.hbm/07.hbm-latency.html",redirect:"/pages/f07696/"},{name:"v-25995465",path:"/pages/f07698/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-25995465").then(n)}},{path:"/pages/f07698/index.html",redirect:"/pages/f07698/"},{path:"/01.hbm/08.compression.html",redirect:"/pages/f07698/"},{name:"v-f3b213e2",path:"/pages/000001/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-f3b213e2").then(n)}},{path:"/pages/000001/index.html",redirect:"/pages/000001/"},{path:"/02.compiler/01.llvm_frontend.html",redirect:"/pages/000001/"},{name:"v-b25c491a",path:"/pages/2476ae/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-b25c491a").then(n)}},{path:"/pages/2476ae/index.html",redirect:"/pages/2476ae/"},{path:"/03.gpu/02.warp_execution.html",redirect:"/pages/2476ae/"},{name:"v-6ffd4505",path:"/pages/cc7034/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-6ffd4505").then(n)}},{path:"/pages/cc7034/index.html",redirect:"/pages/cc7034/"},{path:"/03.gpu/01.operand_collector.html",redirect:"/pages/cc7034/"},{name:"v-f96426b0",path:"/pages/14769f/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-f96426b0").then(n)}},{path:"/pages/14769f/index.html",redirect:"/pages/14769f/"},{path:"/03.gpu/03.Precise Exception.html",redirect:"/pages/14769f/"},{name:"v-5849f946",path:"/pages/44771e/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-5849f946").then(n)}},{path:"/pages/44771e/index.html",redirect:"/pages/44771e/"},{path:"/03.gpu/04.Unified_Memory.html",redirect:"/pages/44771e/"},{name:"v-2861ec8b",path:"/pages/44871e/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-2861ec8b").then(n)}},{path:"/pages/44871e/index.html",redirect:"/pages/44871e/"},{path:"/03.gpu/05.TensorCore.html",redirect:"/pages/44871e/"},{name:"v-d22a70f6",path:"/pages/45871f/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-d22a70f6").then(n)}},{path:"/pages/45871f/index.html",redirect:"/pages/45871f/"},{path:"/03.gpu/07.GPUVirtualization.html",redirect:"/pages/45871f/"},{name:"v-04292a45",path:"/pages/45871e/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-04292a45").then(n)}},{path:"/pages/45871e/index.html",redirect:"/pages/45871e/"},{path:"/03.gpu/06.MemoryBehaviour.html",redirect:"/pages/45871e/"},{name:"v-65bd31e5",path:"/pages/458720/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-65bd31e5").then(n)}},{path:"/pages/458720/index.html",redirect:"/pages/458720/"},{path:"/03.gpu/08.LLM.html",redirect:"/pages/458720/"},{name:"v-02aef12e",path:"/pages/47871e/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-02aef12e").then(n)}},{path:"/pages/47871e/index.html",redirect:"/pages/47871e/"},{path:"/03.gpu/1234.TODO.html",redirect:"/pages/47871e/"},{name:"v-e33712b6",path:"/pages/458721/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-e33712b6").then(n)}},{path:"/pages/458721/index.html",redirect:"/pages/458721/"},{path:"/03.gpu/09.Simulator.html",redirect:"/pages/458721/"},{name:"v-121d90a9",path:"/pages/cc7035/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-121d90a9").then(n)}},{path:"/pages/cc7035/index.html",redirect:"/pages/cc7035/"},{path:"/04.cpu/01.checkpoint.html",redirect:"/pages/cc7035/"},{name:"v-c1b2e1c6",path:"/pages/f07697/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-c1b2e1c6").then(n)}},{path:"/pages/f07697/index.html",redirect:"/pages/f07697/"},{path:"/04.cpu/1234.markdown.html",redirect:"/pages/f07697/"},{name:"v-26a9c736",path:"/pages/dc7035/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-26a9c736").then(n)}},{path:"/pages/dc7035/index.html",redirect:"/pages/dc7035/"},{path:"/05.llm/01.How_LLM_Works.html",redirect:"/pages/dc7035/"},{name:"v-b267e276",path:"/pages/dc7036/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-b267e276").then(n)}},{path:"/pages/dc7036/index.html",redirect:"/pages/dc7036/"},{path:"/05.llm/02.LLM_HW_Opt.html",redirect:"/pages/dc7036/"},{name:"v-259f44f9",path:"/pages/dc7037/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-259f44f9").then(n)}},{path:"/pages/dc7037/index.html",redirect:"/pages/dc7037/"},{path:"/05.llm/03.gem5_LLAMA.html",redirect:"/pages/dc7037/"},{name:"v-2e715932",path:"/message-board/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-2e715932").then(n)}},{path:"/message-board/index.html",redirect:"/message-board/"},{path:"/09.nine/01.留言板.html",redirect:"/message-board/"},{name:"v-2f8a0a7e",path:"/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-2f8a0a7e").then(n)}},{path:"/index.html",redirect:"/"},{name:"v-f8e02736",path:"/archives/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-f8e02736").then(n)}},{path:"/archives/index.html",redirect:"/archives/"},{path:"/@pages/archivesPage.html",redirect:"/archives/"},{name:"v-01216c79",path:"/pages/3a292e/",component:ic,beforeEnter:(e,t,n)=>{hs("Layout","v-01216c79").then(n)}},{path:"/pages/3a292e/index.html",redirect:"/pages/3a292e/"},{path:"/pictures/addPictures.html",redirect:"/pages/3a292e/"},{path:"*",component:ic}],sc={title:"Qi Shao",description:"Computer System",base:"/qishao-notes/",headTags:[["link",{rel:"icon",href:"https://cdn.staticaly.com/gh/eryajf/tu/main/img/image_20220720_132133.ico"}],["meta",{name:"keywords",content:"Hitqishao,golang,vue,go-web,go-admin,go-ldap-admin"}],["meta",{name:"theme-color",content:"#11a8cd"}],["meta",{name:"referrer",content:"no-referrer-when-downgrade"}],["script",{language:"javascript",type:"text/javascript",src:"/qishao-notes/js/pgmanor-self.js"}]],pages:[{title:"Content",frontmatter:{title:"Content",date:"2022-07-18T17:23:23.000Z",permalink:"/pages/f27694/"},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/00.Content.html",relativePath:"00.目录页/00.Content.md",key:"v-0fdda314",path:"/pages/f27694/",headersStr:null,content:" 1. GPU\n 2. CPU\n 3. HBM\n 4. Compiler",normalizedContent:" 1. gpu\n 2. cpu\n 3. hbm\n 4. compiler",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"HBM",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"01.hbm"}},title:"HBM",date:"2022-07-20T11:05:42.000Z",permalink:"/hbm/",sidebar:!1,article:!1,comment:!1,editLink:!1},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/01.hbm.html",relativePath:"00.目录页/01.hbm.md",key:"v-37c5bc96",path:"/hbm/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"llvm & mlir",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"02.compiler"}},title:"llvm & mlir",date:"2023-11-21T11:05:54.000Z",permalink:"/compiler/",sidebar:!1,article:!1,comment:!1,editLink:!1},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/02.compiler.html",relativePath:"00.目录页/02.compiler.md",key:"v-4553c3a8",path:"/compiler/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"gpu",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"03.gpu"}},title:"gpu",date:"2022-07-20T11:05:54.000Z",permalink:"/gpu/",sidebar:!1,article:!1,comment:!1,editLink:!1},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/03.gpu.html",relativePath:"00.目录页/03.gpu.md",key:"v-07282236",path:"/gpu/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"cpu",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"04.cpu"}},title:"cpu",date:"2023-11-09T15:54:15.000Z",permalink:"/cpu/",sidebar:!1,article:!1,comment:!1,editLink:!1},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/04.cpu.html",relativePath:"00.目录页/04.cpu.md",key:"v-bd5cd4d4",path:"/cpu/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"HBM Paper List",frontmatter:{title:"HBM Paper List",date:"2023-05-08T00:00:00.000Z",permalink:"/pages/24769e/"},regularPath:"/01.hbm/01.HBM_Paper_List.html",relativePath:"01.hbm/01.HBM_Paper_List.md",key:"v-abb0f8a2",path:"/pages/24769e/",headers:[{level:3,title:"2. CAMEO:A Two-Level Memory Organization with Capacity of Main Memory and Flexibility of Hardware-Managed Cache",slug:"_2-cameo-a-two-level-memory-organization-with-capacity-of-main-memory-and-flexibility-of-hardware-managed-cache",normalizedTitle:"2. cameo:a two-level memory organization with capacity of main memory and flexibility of hardware-managed cache",charIndex:1920},{level:3,title:"5. MemPod: A Clustered Architecture for Efficient and Scalable Migration in Flat Address Space Multi-level Memories",slug:"_5-mempod-a-clustered-architecture-for-efficient-and-scalable-migration-in-flat-address-space-multi-level-memories",normalizedTitle:"5. mempod: a clustered architecture for efficient and scalable migration in flat address space multi-level memories",charIndex:2752},{level:3,title:"6. Transparent Hardware Management of Stacked DRAM as Part of Memory",slug:"_6-transparent-hardware-management-of-stacked-dram-as-part-of-memory",normalizedTitle:"6. transparent hardware management of stacked dram as part of memory",charIndex:4917},{level:3,title:"8.BATMAN: Techniques for Maximizing System Bandwidth of Memory Systems with Stacked-DRAM",slug:"_8-batman-techniques-for-maximizing-system-bandwidth-of-memory-systems-with-stacked-dram",normalizedTitle:"8.batman: techniques for maximizing system bandwidth of memory systems with stacked-dram",charIndex:7541},{level:3,title:"9. Heterogeneous Memory Architectures: A HW/SW Approach for Mixing Die-stacked and Off-package Memories",slug:"_9-heterogeneous-memory-architectures-a-hw-sw-approach-for-mixing-die-stacked-and-off-package-memories",normalizedTitle:"9. heterogeneous memory architectures: a hw/sw approach for mixing die-stacked and off-package memories",charIndex:8728},{level:3,title:"10.Challenges in Heterogeneous Die-Stacked and Off-Chip Memory Systems",slug:"_10-challenges-in-heterogeneous-die-stacked-and-off-chip-memory-systems",normalizedTitle:"10.challenges in heterogeneous die-stacked and off-chip memory systems",charIndex:10648},{level:3,title:"11. Banshee: Bandwidth-Efficient DRAM Caching Via Software/Hardware Cooperation",slug:"_11-banshee-bandwidth-efficient-dram-caching-via-software-hardware-cooperation",normalizedTitle:"11. banshee: bandwidth-efficient dram caching via software/hardware cooperation",charIndex:874},{level:3,title:"13. Unison Cache: A Scalable and Effective Die-Stacked DRAM Cache",slug:"_13-unison-cache-a-scalable-and-effective-die-stacked-dram-cache",normalizedTitle:"13. unison cache: a scalable and effective die-stacked dram cache",charIndex:1006},{level:3,title:"14. Dynamically Adapting Page Migration Policies Based on Applications Memory Access Behaviors",slug:"_14-dynamically-adapting-page-migration-policies-based-on-applications-memory-access-behaviors",normalizedTitle:"14. dynamically adapting page migration policies based on applications memory access behaviors",charIndex:1073},{level:3,title:"15. On-the-fly Page Migration and Address Reconciliation for Heterogeneous Memory Systems",slug:"_15-on-the-fly-page-migration-and-address-reconciliation-for-heterogeneous-memory-systems",normalizedTitle:"15. on-the-fly page migration and address reconciliation for heterogeneous memory systems",charIndex:1169}],headersStr:"2. CAMEO:A Two-Level Memory Organization with Capacity of Main Memory and Flexibility of Hardware-Managed Cache 5. MemPod: A Clustered Architecture for Efficient and Scalable Migration in Flat Address Space Multi-level Memories 6. Transparent Hardware Management of Stacked DRAM as Part of Memory 8.BATMAN: Techniques for Maximizing System Bandwidth of Memory Systems with Stacked-DRAM 9. Heterogeneous Memory Architectures: A HW/SW Approach for Mixing Die-stacked and Off-package Memories 10.Challenges in Heterogeneous Die-Stacked and Off-Chip Memory Systems 11. Banshee: Bandwidth-Efficient DRAM Caching Via Software/Hardware Cooperation 13. Unison Cache: A Scalable and Effective Die-Stacked DRAM Cache 14. Dynamically Adapting Page Migration Policies Based on Applications Memory Access Behaviors 15. On-the-fly Page Migration and Address Reconciliation for Heterogeneous Memory Systems",content:" 1.  Baryon: Efficient Hybrid Memory Management with Compression and Sub-Blocking\n 2.  CAMEO:A Two-Level Memory Organization with Capacity of Main Memory and Flexibility of Hardware-Managed Cache\n 3.  Hybrid2: Combining Caching and Migration in Hybrid Memory Systems\n 4.  SILC-FM: Subblocked InterLeaved Cache-Like Flat Memory Organization\n 5.  MemPod: A Clustered Architecture for Efficient and Scalable Migration in Flat Address Space Multi-level Memories\n 6.  Transparent Hardware Management of Stacked DRAM as Part of Memory\n 7.  CHAMELEON: A Dynamically Reconfigurable Heterogeneous Memory System\n 8.  BATMAN: Techniques for Maximizing System Bandwidth of Memory Systems with Stacked-DRAM\n 9.  Heterogeneous Memory Architectures: A HW/SW Approach for Mixing Die-stacked and Off-package Memories\n 10. Challenges in Heterogeneous Die-Stacked and Off-Chip Memory Systems\n 11. Banshee: Bandwidth-Efficient DRAM Caching Via Software/Hardware Cooperation\n 12. Die-Stacked DRAM: Memory, Cache, or MemCache?\n 13. Unison Cache: A Scalable and Effective Die-Stacked DRAM Cache\n 14. Dynamically Adapting Page Migration Policies Based on Applications Memory Access Behaviors\n 15. On-the-fly Page Migration and Address Reconciliation for Heterogeneous Memory Systems\n 16. Bumblebee: A MemCache Design for Die-stacked and Off-chip Heterogeneous Memory Systems [DAC]\n 17. TicToc: Enabling Bandwidth-Efficient DRAM Caching for both Hits and Misses in Hybrid Memory Systems International Conference on Computer Design (ICCD)\n\nDRAM NVM\n\n 1. An Operating System Level Data Migration Scheme in Hybrid DRAM-NVM Memory Architecture\n 2. CLOCK-DWF: A Write-History-Aware Page Replacement Algorithm for Hybrid PCM and DRAM Memory Architectures\n 3. APMigration: Improving Performance of Hybrid Memory Performance via An Adaptive Page Migration Method\n 4. Page Placement in Hybrid Memory Systems\n\n----------------------------------------\n\n\n# 2. CAMEO:A Two-Level Memory Organization with Capacity of Main Memory and Flexibility of Hardware-Managed Cache\n\n# MemPod:\n\nCAMEO [13] proposes a cache-like flat address space memory management scheme in an attempt to close the gap between cache and flat memory organizations. CAMEO operates similarly to THM, however it does so at the granularity of cache lines (64B). Migrations are restricted within segments with one fast line location per segment. Its bookkeeping structures are entirely stored in memory, while a “Line Location Predictor” attempts to save some bookkeeping-related accesses by predicting the location of a line.\n\nCAMEO initiates a line migration upon every access to slow memory.\n\nCAMEO can incur high migration traffic as every access could induce a migration.\n\n\n\n----------------------------------------\n\n\n# 5. MemPod: A Clustered Architecture for Efficient and Scalable Migration in Flat Address Space Multi-level Memories\n\nYear: 2017\n\nMemPod uses MEA counters to track page access activity and identify hot pages. They are dramatically smaller than prior tracking mechanisms while capturing activity counts and temporal recency in a way that provides more effective prediction of future page access.\n\nWhat makes MEA most useful, though, is its failure mode – when it fails to find the most-accessed pages, it does so by favoring recency over quantity. That is, a page accessed several times near the end of an interval can easily knock out a page accessed many more times early in the interval. As a result, it combines both access counting and temporal locality, at a fraction of the cost of access counting alone.\n\n\n\nThree triggers are most commonly used whenever state must be updated based on tracking information (MC scheduling, migrations, dynamic voltage and frequency scaling etc.). Interval-based (or epoch-based) triggers occur with a set frequency, while threshold-based solutions trigger whenever a predetermined criterion is met. Finally, event-based triggers react to predefined events. Both interval-based and threshold-based approaches face the same challenge of identifying the optimal interval or threshold value.\n\nMemPod achieves the best performance (lower AMMAT) with 50us intervals and 64 counters per Pod. MemPod’s lightweight operation allows for such small intervals. For comparison purposes, HMA [14] identi-fied the best epoch length to be 100ms (2000x larger) in order to support all the lengthy processes that take place during a migration event for that method.\n\nBased on these results, we use 64 MEA 2-bit counters over 50us intervals for subsequent results in this paper. Each one of the 64 MEA entries needs 21 bits for addressing the 1.1M pages per Pod and 2 bits for its counter, leading to an area cost of only 184B per Pod and 736B total. Compared to the state of the art, MemPod’s activity tracking requirement is ∼712x smaller than THM’s (512KB) and ∼12800x smaller than HMA’s (9MB).\n\n\n\n----------------------------------------\n\n\n# 6. Transparent Hardware Management of Stacked DRAM as Part of Memory\n\n# MemPod:\n\nSim, et al. proposed a technique for transparent hardware management of a hybrid memory system [17],which we will refer to as “THM”. THM does not require OS intervention while managing migrations. In order to keep bookkeeping costs manageable, THM allows migrations only within sets of pages (called segments). Each segment includes one fast memory page and a set of slow memory pages. The slow pages of each segment can only migrate to the one fast page location, and any such migration results in the eviction of the currently-residing page. THM monitors memory accesses with one “competing counter” per segment resulting in a low cost profiling solution. Finally, THM supports caching part of its structures on chip while the rest is stored in memory.\n\nTHM’s competing counters can lead to false positives, allowing a cold page to migrate to fast memory.\n\nTHM offers significantly limited flexibility by restricting migrations withing segments, however this decision reduces bookkeeping costs significantly. Competing counters in each segment are used for activity tracking, occasionally leading to false (threshold-based) migration triggering if a cold page gets accessed at the right time. Identifying migration candidates incurs very little overhead since there is exactly one fast memory location for each slow memory page that triggers migration.\n\nCite from paper\n\n\n\nSimilar to set dueling, they adopted sample region. The locations in fast memory are grouped into 32 distinct regions in an interleaving fashion, and four regions are dedicated to sampling, while other 28 regions follow the threshold decision from sampling.\n\n• Nstatic: # of memory requests serviced from fast memory with static mapping • Ndynamic: # of memory requests expected to be serviced from fast memory when swapping with a given threshold • Nswap: # of expected swaps for a given threshold.\n\n\n\nK differs depending on the relative latency of fast and slow memory. The cost of a single fast swap is about 1200 cycles, and the difference in access latency between fast and slow memory is 72 cycles.Thus, in general, the swapped-in segment needs to get at least 17 more (future) hits than the swapped-out segment for swapping to be valuable. K is computed in hardware at boot time.\n\nMe Competing counter needs a threshold to invoke swap.\n\nSample region will have different threshold. Based on different threshold, Nswap is different. Thus they choose the the best threshold with max Bexpected as candidate threshold.\n\n----------------------------------------\n\n\n# 8.BATMAN: Techniques for Maximizing System Bandwidth of Memory Systems with Stacked-DRAM\n\nInsights\n\n * bandwidth distribution\n * dram and hbm similar latency\n\nAs the NM simply offers higher bandwidth, not lower latency,the performance of tiered-memory systems is determined by the utilization of system bandwidth. We observe that both system bandwidth and performance are maximized when memory accesses are distributed proportional to the bandwidth of each memory.\n\nWe leverage our key insight on controlling data movement and propose Bandwidth-Aware Tiered-Memory Management (BATMAN), which is a runtime mechanism that monitors memory access distribution and explicitly controls the data movement between the NM and the FM. We define the desired access rate of the NM as the target access rate (TAR). TAR is the fraction of memory accesses serviced by the NM when memory accesses to both memories are proportional to the respective bandwidth.\n\n\n\n2X 2/3 4X 4/5 8X 8/9\n\nMe Bandwidth-Aware Tired-Memory Management tries to distritube memory according to HBM and DRAM bandwidth ratio. And also treat it as a threshold to refuse page migration.\n\n----------------------------------------\n\n\n# 9. Heterogeneous Memory Architectures: A HW/SW Approach for Mixing Die-stacked and Off-package Memories\n\n# MemPod:\n\nHMA [14] is a HW/SW mechanism that attempts to predict frequently accessed pages in memory and, at predefined intervals, migrate those pages to fast memory. HW support is required for profiling memory accesses using counters for each memory page, while the migration is handled by the OS. Due to the costly OS involvement, HMA’s intervals are kept large. Additionally, the hardware cost of its profiling counters is high. However, HMA is capable of managing migrations in a flat address space without the need of additional bookkeeping for finding migrated pages as the OS can update page tables and TLBs to reflect migrations.\n\nHMA does not require a remap table due to the OS updating the existing system’s structures. For activity tracking it uses Full Counters. The costly OS involvement and the high penalty for sorting all its counters force HMA to operate at very large intervals, weakening its adaptability to phase changes. However, HMA offers full flexibility for migrations.\n\nCite from org paper This first-touch hot-page (FTHP) policy is effectively a generalization of both the history-based and first-touch algorithms.\n\nWe propose a dynamic feedback-directed HMA policy that can dynamically adjust the hotness threshold θ to achieve a best-of-both-worlds approach between history-based and first-touch policies.\n\n * At the start of each epoch, the size of the hot set is compared to the size of the die-stacked DRAM (N).\n * If the hot set is too small to fill the fast memory, then θ is lowered which causes more pages to be classified as hot.\n * Likewise, if the hot set is too large, θ is increased which causes fewer pages to be put in the hot set.\n * If the feedback mechanism works well, then the size of the hot set should converge to N.\n\n----------------------------------------\n\n\n# 10.Challenges in Heterogeneous Die-Stacked and Off-Chip Memory Systems\n\nYear: 2012 Software OS management To prevent the mapping of pages with insufficient miss traffic, we employ a threshold θ such that any page with fewer than θ LLC misses is not considered for mapping into stacked DRAM. The application of a threshold may result in cases when the list of most frequently missed pages has only k < P items. In this case, we simply keep a random set of P − k of the existing pages from the previous epoch already in stacked DRAM to avoid consuming bandwidth to swap out the page back to the off-chip memory.\n\n----------------------------------------\n\n\n# 11. Banshee: Bandwidth-Efficient DRAM Caching Via Software/Hardware Cooperation\n\nYear: 2017 Software aovid tag look up by storing DRAM Cache presence information in the page table and tlbs.\n\nSpecifically, Banshee uses a hardwaremanaged frequency-based replacement (FBR) policy that only caches hot pages to reduce unnecessary data replacement traffic. To reduce the cost of accessing/updating frequency counters (which are stored in in-package DRAM), Banshee uses a new sampling approach to only read/write counters for a fraction of memory accesses.\n\nBackground\n\n * Using tags Alloy Cache | Unison Cache\n * Using address remapping Heterogeneous Memory Architecture (HMA) | Tagless DRAM Cache (TDC)\n\n\n\nThey reuse reverse maping mechanism.\n\nBanshee tracks each page’s access frequency with a counter, stored in the metadata. We store counters not only for the pages in the DRAM cache, but also for some pages not in cache, which are candidates to bring into the cache.\n\nInstead, an access in Banshee only updates a page’s frequency counter with a certain sample rate. For a sample rate of 10%, for example, the frequency counters are accessed/updated only once for every 10 DRAM accesses.\n\nFrequency-based replacement may lead to thrashing problem.\n\nBanshee solves this problem by only replacing a page when the candidate’s counter is greater than the victim’s counter by a certain threshold. This ensures that a page just evicted from the DRAM cache must be accessed for at least 2·threshold/sampling rate times before it can enter the cache again, thus preventing a page from entering and leaving frequently.\n\nBy default, the threshold is the product of the number of cachelines in a page and the sampling coefficient divided by two (threshold = page_size x sampling_coeff / 2). Intuitively, this means replacement can happen only if the benefit of swapping the pages outweighs the cost of the replacement operation.\n\nIf a counter saturates after being incremented, all counters in the metadata will be reduced by half using a shift operation in hardware.\n\n\n\n----------------------------------------\n\n\n# 13. Unison Cache: A Scalable and Effective Die-Stacked DRAM Cache\n\nThe state-of-the-art block-based design, called Alloy Cache, colocates a tag with each data block (e.g., 64B) in the stacked DRAM to provide fast access to data in a single DRAM access. However, such a design suffers from low hit rates due to poor temporal locality in the DRAM cache. In contrast, the state-of-the-art page-based design, called Footprint Cache, organizes the DRAM cache at page granularity (e.g., 4KB), but fetches only the blocks that will likely be touched within a page. In doing so, the Footprint Cache achieves high hit rates with moderate on-chip tag storage and reasonable lookup latency. However, multi-gigabyte stacked DRAM caches will soon be practical and needed by server applications, thereby mandating tens of MBs of tag storage even for page-based DRAM caches.\n\nWe introduce a novel stacked-DRAM cache design, Unison Cache. Similar to Alloy Cache’s approach, Unison Cache incorporates the tag metadata directly into the stacked DRAM to enable scalability to arbitrary stacked-DRAM capacities. Then, leveraging the insights from the Footprint Cache design, Unison Cache employs large, page-sized cache allocation units to achieve high hit rates and reduction in tag overheads, while predicting and fetching only the useful blocks within each page to minimize the off-chip traffic. Our evaluation using server workloads and caches of up to 8GB reveals that Unison cache improves performance by 14% compared to Alloy Cache due to its high hit rate, while outperforming the state-of-the art page-based designs that require impractical SRAM-based tags of around 50MB.\n\nMe Block-based high miss ratio, page-based high migration penalty when fetching useless data. If footprint meta data is adopted to collect data trace, FootCache meta table cannot scale with increasing capactiy of HBM.\n\n\n\n----------------------------------------\n\n\n# 14. Dynamically Adapting Page Migration Policies Based on Applications Memory Access Behaviors\n\nLink to notes for Dynamically Adapting...\n\n\n# 15. On-the-fly Page Migration and Address Reconciliation for Heterogeneous Memory Systems\n\n“on-the-fly” migration performs better than epoch-based page migration techniques, since we migrate recent hot pages.\n\nInstead of relying completely on OS to perform AR for the evicted entries, as done in [Ramoset al. 2011], we propose a hardware-based AR, where the MigC hardware initiates TLB shootdown and cache flushing without explicitly stopping the user program.\n\nLike previous studies [Meswani et al. 2015; Prodromou et al. 2017; Su et al. 2015], we observe that not all applications benefit from page migration, since page migration incurs performance overheads due to extra data movement.\n\nThe model works with the principle that, to get performance benefit, one should migrate the smallest set of pages from slow to fast memory that yields in the largest increase in memory accesses to fast memory to amortize the migration overhead.\n\nMe Try to use 80% principle. In our study, we look at the 80-percentile accesses and identify the “set of top-accessed pages” that contribute to more than 80% of all memory accesses.\n\nIn our proposal, we migrate a page immediately when it receives sufficient number of memory accesses, unlike any epoch-based schemes. We allow full flexibility in page relocation like HMAHS [Meswani et al. 2015] and keep a remap table for address redirection. We keep this table small by periodically evicting entries and it is placed on-chip.\n\nThe particular access count, which can separate such top-accessed pages from other pages, is referred to as “filter count.” Note that, filter count indicates an upper bound for hotness threshold\n\nMe This paper explain the address reconciliation AR in detail.\n\nFlow of AR -First, all cache lines from these pages, which are currently residing in the cache hierarchies and tagged with OS-visible PA, must be invalidated (and dirty lines written back), since the current OS-visible PA will be replaced with the new PA. All future accesses to these pages will only have access to the new PA. -Next,corresponding page table entries (PTEs) for A and B need to be updated with new PAs. -The TLB entries in all cores using the old PA must also be invalidated (as well as any other OS structures that contain the physical page addresses).\n\n(i) flush_cache_page() (ii) change PTE, (iii) flush_tlb_page()\n\nWe use a Migration Benefit Quotient (MBQ), by calculating the difference between the total number of accesses to any page and the filter count used in classifying applications’ memory locality, as described. MBQ indicates how many of the future accesses of a page may go to fast memory if the page were migrated from slow to fast memory using the filter count as a hotness threshold.\n\nSacturation account the sum of access counts of all pages with 32,909 accesses or less (the bars corresponding to x-axis 0 to 3,290) accounts for 98% of all accesses. For our purposes, we use this access count as a saturation count (or assume that the maximum number of accesses any page can receive).\n\nFor each workload, we use the difference between the saturation count and the filter count to determine MBQ.\n\n\n\n 1. Low MBQ, difference is less than 1K. For example, in Figure 5(b) xalanc, pages with memory access count 609 or less (the bars corresponding to x-axis 0 to 60) provide 98% of the memory accesses. Hence, the difference between saturation count (609) and filter count (70) is 539. These workloads may not achieve significant increase in accesses to fast memory after page migration.\n 2. Medium MBQ, difference is in between 1K to K (e.g., Figure 5(c) omnetpp). These workloads may receive moderate benefits, depending the migration overheads.\n 3. High MBQ, difference is more than 8K (e.g., Figure 5(a) mcf). These workloads are likely to receive higher hits in faster memory as a result of page migration.\n\nMe In short\n\n * sactuartion account. The sum of access counts fo all pages with sactuartion account accounts for 98% of all accesses.\n * filter account. The “set of top-accessed pages” that contribute to more than 80% of all memory accesses. If they are close, it means that this is a uniform benchmark. If they have a large difference, this means that there is a subset of pages that has far more memory accesses.\n\n----------------------------------------\n\n# 17. TicToc: Enabling Bandwidth-Efficient DRAM Caching for both Hits and Misses in Hybrid Memory Systems International Conference on Computer Design (ICCD)\n\nYear: 2019",normalizedContent:" 1.  baryon: efficient hybrid memory management with compression and sub-blocking\n 2.  cameo:a two-level memory organization with capacity of main memory and flexibility of hardware-managed cache\n 3.  hybrid2: combining caching and migration in hybrid memory systems\n 4.  silc-fm: subblocked interleaved cache-like flat memory organization\n 5.  mempod: a clustered architecture for efficient and scalable migration in flat address space multi-level memories\n 6.  transparent hardware management of stacked dram as part of memory\n 7.  chameleon: a dynamically reconfigurable heterogeneous memory system\n 8.  batman: techniques for maximizing system bandwidth of memory systems with stacked-dram\n 9.  heterogeneous memory architectures: a hw/sw approach for mixing die-stacked and off-package memories\n 10. challenges in heterogeneous die-stacked and off-chip memory systems\n 11. banshee: bandwidth-efficient dram caching via software/hardware cooperation\n 12. die-stacked dram: memory, cache, or memcache?\n 13. unison cache: a scalable and effective die-stacked dram cache\n 14. dynamically adapting page migration policies based on applications memory access behaviors\n 15. on-the-fly page migration and address reconciliation for heterogeneous memory systems\n 16. bumblebee: a memcache design for die-stacked and off-chip heterogeneous memory systems [dac]\n 17. tictoc: enabling bandwidth-efficient dram caching for both hits and misses in hybrid memory systems international conference on computer design (iccd)\n\ndram nvm\n\n 1. an operating system level data migration scheme in hybrid dram-nvm memory architecture\n 2. clock-dwf: a write-history-aware page replacement algorithm for hybrid pcm and dram memory architectures\n 3. apmigration: improving performance of hybrid memory performance via an adaptive page migration method\n 4. page placement in hybrid memory systems\n\n----------------------------------------\n\n\n# 2. cameo:a two-level memory organization with capacity of main memory and flexibility of hardware-managed cache\n\n# mempod:\n\ncameo [13] proposes a cache-like flat address space memory management scheme in an attempt to close the gap between cache and flat memory organizations. cameo operates similarly to thm, however it does so at the granularity of cache lines (64b). migrations are restricted within segments with one fast line location per segment. its bookkeeping structures are entirely stored in memory, while a “line location predictor” attempts to save some bookkeeping-related accesses by predicting the location of a line.\n\ncameo initiates a line migration upon every access to slow memory.\n\ncameo can incur high migration traffic as every access could induce a migration.\n\n\n\n----------------------------------------\n\n\n# 5. mempod: a clustered architecture for efficient and scalable migration in flat address space multi-level memories\n\nyear: 2017\n\nmempod uses mea counters to track page access activity and identify hot pages. they are dramatically smaller than prior tracking mechanisms while capturing activity counts and temporal recency in a way that provides more effective prediction of future page access.\n\nwhat makes mea most useful, though, is its failure mode – when it fails to find the most-accessed pages, it does so by favoring recency over quantity. that is, a page accessed several times near the end of an interval can easily knock out a page accessed many more times early in the interval. as a result, it combines both access counting and temporal locality, at a fraction of the cost of access counting alone.\n\n\n\nthree triggers are most commonly used whenever state must be updated based on tracking information (mc scheduling, migrations, dynamic voltage and frequency scaling etc.). interval-based (or epoch-based) triggers occur with a set frequency, while threshold-based solutions trigger whenever a predetermined criterion is met. finally, event-based triggers react to predefined events. both interval-based and threshold-based approaches face the same challenge of identifying the optimal interval or threshold value.\n\nmempod achieves the best performance (lower ammat) with 50us intervals and 64 counters per pod. mempod’s lightweight operation allows for such small intervals. for comparison purposes, hma [14] identi-fied the best epoch length to be 100ms (2000x larger) in order to support all the lengthy processes that take place during a migration event for that method.\n\nbased on these results, we use 64 mea 2-bit counters over 50us intervals for subsequent results in this paper. each one of the 64 mea entries needs 21 bits for addressing the 1.1m pages per pod and 2 bits for its counter, leading to an area cost of only 184b per pod and 736b total. compared to the state of the art, mempod’s activity tracking requirement is ∼712x smaller than thm’s (512kb) and ∼12800x smaller than hma’s (9mb).\n\n\n\n----------------------------------------\n\n\n# 6. transparent hardware management of stacked dram as part of memory\n\n# mempod:\n\nsim, et al. proposed a technique for transparent hardware management of a hybrid memory system [17],which we will refer to as “thm”. thm does not require os intervention while managing migrations. in order to keep bookkeeping costs manageable, thm allows migrations only within sets of pages (called segments). each segment includes one fast memory page and a set of slow memory pages. the slow pages of each segment can only migrate to the one fast page location, and any such migration results in the eviction of the currently-residing page. thm monitors memory accesses with one “competing counter” per segment resulting in a low cost profiling solution. finally, thm supports caching part of its structures on chip while the rest is stored in memory.\n\nthm’s competing counters can lead to false positives, allowing a cold page to migrate to fast memory.\n\nthm offers significantly limited flexibility by restricting migrations withing segments, however this decision reduces bookkeeping costs significantly. competing counters in each segment are used for activity tracking, occasionally leading to false (threshold-based) migration triggering if a cold page gets accessed at the right time. identifying migration candidates incurs very little overhead since there is exactly one fast memory location for each slow memory page that triggers migration.\n\ncite from paper\n\n\n\nsimilar to set dueling, they adopted sample region. the locations in fast memory are grouped into 32 distinct regions in an interleaving fashion, and four regions are dedicated to sampling, while other 28 regions follow the threshold decision from sampling.\n\n• nstatic: # of memory requests serviced from fast memory with static mapping • ndynamic: # of memory requests expected to be serviced from fast memory when swapping with a given threshold • nswap: # of expected swaps for a given threshold.\n\n\n\nk differs depending on the relative latency of fast and slow memory. the cost of a single fast swap is about 1200 cycles, and the difference in access latency between fast and slow memory is 72 cycles.thus, in general, the swapped-in segment needs to get at least 17 more (future) hits than the swapped-out segment for swapping to be valuable. k is computed in hardware at boot time.\n\nme competing counter needs a threshold to invoke swap.\n\nsample region will have different threshold. based on different threshold, nswap is different. thus they choose the the best threshold with max bexpected as candidate threshold.\n\n----------------------------------------\n\n\n# 8.batman: techniques for maximizing system bandwidth of memory systems with stacked-dram\n\ninsights\n\n * bandwidth distribution\n * dram and hbm similar latency\n\nas the nm simply offers higher bandwidth, not lower latency,the performance of tiered-memory systems is determined by the utilization of system bandwidth. we observe that both system bandwidth and performance are maximized when memory accesses are distributed proportional to the bandwidth of each memory.\n\nwe leverage our key insight on controlling data movement and propose bandwidth-aware tiered-memory management (batman), which is a runtime mechanism that monitors memory access distribution and explicitly controls the data movement between the nm and the fm. we define the desired access rate of the nm as the target access rate (tar). tar is the fraction of memory accesses serviced by the nm when memory accesses to both memories are proportional to the respective bandwidth.\n\n\n\n2x 2/3 4x 4/5 8x 8/9\n\nme bandwidth-aware tired-memory management tries to distritube memory according to hbm and dram bandwidth ratio. and also treat it as a threshold to refuse page migration.\n\n----------------------------------------\n\n\n# 9. heterogeneous memory architectures: a hw/sw approach for mixing die-stacked and off-package memories\n\n# mempod:\n\nhma [14] is a hw/sw mechanism that attempts to predict frequently accessed pages in memory and, at predefined intervals, migrate those pages to fast memory. hw support is required for profiling memory accesses using counters for each memory page, while the migration is handled by the os. due to the costly os involvement, hma’s intervals are kept large. additionally, the hardware cost of its profiling counters is high. however, hma is capable of managing migrations in a flat address space without the need of additional bookkeeping for finding migrated pages as the os can update page tables and tlbs to reflect migrations.\n\nhma does not require a remap table due to the os updating the existing system’s structures. for activity tracking it uses full counters. the costly os involvement and the high penalty for sorting all its counters force hma to operate at very large intervals, weakening its adaptability to phase changes. however, hma offers full flexibility for migrations.\n\ncite from org paper this first-touch hot-page (fthp) policy is effectively a generalization of both the history-based and first-touch algorithms.\n\nwe propose a dynamic feedback-directed hma policy that can dynamically adjust the hotness threshold θ to achieve a best-of-both-worlds approach between history-based and first-touch policies.\n\n * at the start of each epoch, the size of the hot set is compared to the size of the die-stacked dram (n).\n * if the hot set is too small to fill the fast memory, then θ is lowered which causes more pages to be classified as hot.\n * likewise, if the hot set is too large, θ is increased which causes fewer pages to be put in the hot set.\n * if the feedback mechanism works well, then the size of the hot set should converge to n.\n\n----------------------------------------\n\n\n# 10.challenges in heterogeneous die-stacked and off-chip memory systems\n\nyear: 2012 software os management to prevent the mapping of pages with insufficient miss traffic, we employ a threshold θ such that any page with fewer than θ llc misses is not considered for mapping into stacked dram. the application of a threshold may result in cases when the list of most frequently missed pages has only k < p items. in this case, we simply keep a random set of p − k of the existing pages from the previous epoch already in stacked dram to avoid consuming bandwidth to swap out the page back to the off-chip memory.\n\n----------------------------------------\n\n\n# 11. banshee: bandwidth-efficient dram caching via software/hardware cooperation\n\nyear: 2017 software aovid tag look up by storing dram cache presence information in the page table and tlbs.\n\nspecifically, banshee uses a hardwaremanaged frequency-based replacement (fbr) policy that only caches hot pages to reduce unnecessary data replacement traffic. to reduce the cost of accessing/updating frequency counters (which are stored in in-package dram), banshee uses a new sampling approach to only read/write counters for a fraction of memory accesses.\n\nbackground\n\n * using tags alloy cache | unison cache\n * using address remapping heterogeneous memory architecture (hma) | tagless dram cache (tdc)\n\n\n\nthey reuse reverse maping mechanism.\n\nbanshee tracks each page’s access frequency with a counter, stored in the metadata. we store counters not only for the pages in the dram cache, but also for some pages not in cache, which are candidates to bring into the cache.\n\ninstead, an access in banshee only updates a page’s frequency counter with a certain sample rate. for a sample rate of 10%, for example, the frequency counters are accessed/updated only once for every 10 dram accesses.\n\nfrequency-based replacement may lead to thrashing problem.\n\nbanshee solves this problem by only replacing a page when the candidate’s counter is greater than the victim’s counter by a certain threshold. this ensures that a page just evicted from the dram cache must be accessed for at least 2·threshold/sampling rate times before it can enter the cache again, thus preventing a page from entering and leaving frequently.\n\nby default, the threshold is the product of the number of cachelines in a page and the sampling coefficient divided by two (threshold = page_size x sampling_coeff / 2). intuitively, this means replacement can happen only if the benefit of swapping the pages outweighs the cost of the replacement operation.\n\nif a counter saturates after being incremented, all counters in the metadata will be reduced by half using a shift operation in hardware.\n\n\n\n----------------------------------------\n\n\n# 13. unison cache: a scalable and effective die-stacked dram cache\n\nthe state-of-the-art block-based design, called alloy cache, colocates a tag with each data block (e.g., 64b) in the stacked dram to provide fast access to data in a single dram access. however, such a design suffers from low hit rates due to poor temporal locality in the dram cache. in contrast, the state-of-the-art page-based design, called footprint cache, organizes the dram cache at page granularity (e.g., 4kb), but fetches only the blocks that will likely be touched within a page. in doing so, the footprint cache achieves high hit rates with moderate on-chip tag storage and reasonable lookup latency. however, multi-gigabyte stacked dram caches will soon be practical and needed by server applications, thereby mandating tens of mbs of tag storage even for page-based dram caches.\n\nwe introduce a novel stacked-dram cache design, unison cache. similar to alloy cache’s approach, unison cache incorporates the tag metadata directly into the stacked dram to enable scalability to arbitrary stacked-dram capacities. then, leveraging the insights from the footprint cache design, unison cache employs large, page-sized cache allocation units to achieve high hit rates and reduction in tag overheads, while predicting and fetching only the useful blocks within each page to minimize the off-chip traffic. our evaluation using server workloads and caches of up to 8gb reveals that unison cache improves performance by 14% compared to alloy cache due to its high hit rate, while outperforming the state-of-the art page-based designs that require impractical sram-based tags of around 50mb.\n\nme block-based high miss ratio, page-based high migration penalty when fetching useless data. if footprint meta data is adopted to collect data trace, footcache meta table cannot scale with increasing capactiy of hbm.\n\n\n\n----------------------------------------\n\n\n# 14. dynamically adapting page migration policies based on applications memory access behaviors\n\nlink to notes for dynamically adapting...\n\n\n# 15. on-the-fly page migration and address reconciliation for heterogeneous memory systems\n\n“on-the-fly” migration performs better than epoch-based page migration techniques, since we migrate recent hot pages.\n\ninstead of relying completely on os to perform ar for the evicted entries, as done in [ramoset al. 2011], we propose a hardware-based ar, where the migc hardware initiates tlb shootdown and cache flushing without explicitly stopping the user program.\n\nlike previous studies [meswani et al. 2015; prodromou et al. 2017; su et al. 2015], we observe that not all applications benefit from page migration, since page migration incurs performance overheads due to extra data movement.\n\nthe model works with the principle that, to get performance benefit, one should migrate the smallest set of pages from slow to fast memory that yields in the largest increase in memory accesses to fast memory to amortize the migration overhead.\n\nme try to use 80% principle. in our study, we look at the 80-percentile accesses and identify the “set of top-accessed pages” that contribute to more than 80% of all memory accesses.\n\nin our proposal, we migrate a page immediately when it receives sufficient number of memory accesses, unlike any epoch-based schemes. we allow full flexibility in page relocation like hmahs [meswani et al. 2015] and keep a remap table for address redirection. we keep this table small by periodically evicting entries and it is placed on-chip.\n\nthe particular access count, which can separate such top-accessed pages from other pages, is referred to as “filter count.” note that, filter count indicates an upper bound for hotness threshold\n\nme this paper explain the address reconciliation ar in detail.\n\nflow of ar -first, all cache lines from these pages, which are currently residing in the cache hierarchies and tagged with os-visible pa, must be invalidated (and dirty lines written back), since the current os-visible pa will be replaced with the new pa. all future accesses to these pages will only have access to the new pa. -next,corresponding page table entries (ptes) for a and b need to be updated with new pas. -the tlb entries in all cores using the old pa must also be invalidated (as well as any other os structures that contain the physical page addresses).\n\n(i) flush_cache_page() (ii) change pte, (iii) flush_tlb_page()\n\nwe use a migration benefit quotient (mbq), by calculating the difference between the total number of accesses to any page and the filter count used in classifying applications’ memory locality, as described. mbq indicates how many of the future accesses of a page may go to fast memory if the page were migrated from slow to fast memory using the filter count as a hotness threshold.\n\nsacturation account the sum of access counts of all pages with 32,909 accesses or less (the bars corresponding to x-axis 0 to 3,290) accounts for 98% of all accesses. for our purposes, we use this access count as a saturation count (or assume that the maximum number of accesses any page can receive).\n\nfor each workload, we use the difference between the saturation count and the filter count to determine mbq.\n\n\n\n 1. low mbq, difference is less than 1k. for example, in figure 5(b) xalanc, pages with memory access count 609 or less (the bars corresponding to x-axis 0 to 60) provide 98% of the memory accesses. hence, the difference between saturation count (609) and filter count (70) is 539. these workloads may not achieve significant increase in accesses to fast memory after page migration.\n 2. medium mbq, difference is in between 1k to k (e.g., figure 5(c) omnetpp). these workloads may receive moderate benefits, depending the migration overheads.\n 3. high mbq, difference is more than 8k (e.g., figure 5(a) mcf). these workloads are likely to receive higher hits in faster memory as a result of page migration.\n\nme in short\n\n * sactuartion account. the sum of access counts fo all pages with sactuartion account accounts for 98% of all accesses.\n * filter account. the “set of top-accessed pages” that contribute to more than 80% of all memory accesses. if they are close, it means that this is a uniform benchmark. if they have a large difference, this means that there is a subset of pages that has far more memory accesses.\n\n----------------------------------------\n\n# 17. tictoc: enabling bandwidth-efficient dram caching for both hits and misses in hybrid memory systems international conference on computer design (iccd)\n\nyear: 2019",charsets:{cjk:!0},lastUpdated:"2024/01/21, 22:21:54"},{title:"llm",frontmatter:{pageComponent:{name:"Catalogue",data:{key:"05.llm"}},title:"llm",date:"2024-01-02T15:54:15.000Z",permalink:"/llm/",sidebar:!1,article:!1,comment:!1,editLink:!1},regularPath:"/00.%E7%9B%AE%E5%BD%95%E9%A1%B5/05.llm.html",relativePath:"00.目录页/05.llm.md",key:"v-07abb6d6",path:"/llm/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"HBM Dead Block Predictor",frontmatter:{title:"HBM Dead Block Predictor",date:"2023-05-15T00:00:00.000Z",permalink:"/pages/2476af/"},regularPath:"/01.hbm/02.hbm_dead_block_predictor.html",relativePath:"01.hbm/02.hbm_dead_block_predictor.md",key:"v-d7471e16",path:"/pages/2476af/",headers:[{level:3,title:"1. Data Placement in HPC Architectures with Heterogeneous Off-chip Memory",slug:"_1-data-placement-in-hpc-architectures-with-heterogeneous-off-chip-memory",normalizedTitle:"1. data placement in hpc architectures with heterogeneous off-chip memory",charIndex:1},{level:3,title:"2. Die-Stacked DRAM: Memory, Cache, or MemCache?",slug:"_2-die-stacked-dram-memory-cache-or-memcache",normalizedTitle:"2. die-stacked dram: memory, cache, or memcache?",charIndex:76},{level:3,title:"4. Bumblebee: A MemCache Design for Die-stacked and Off-chip Heterogeneous Memory Systems (2023)",slug:"_4-bumblebee-a-memcache-design-for-die-stacked-and-off-chip-heterogeneous-memory-systems-2023",normalizedTitle:"4. bumblebee: a memcache design for die-stacked and off-chip heterogeneous memory systems (2023)",charIndex:182},{level:3,title:"5.BATMAN: Techniques for Maximizing System Bandwidth of Memory Systems with Stacked-DRAM",slug:"_5-batman-techniques-for-maximizing-system-bandwidth-of-memory-systems-with-stacked-dram",normalizedTitle:"5.batman: techniques for maximizing system bandwidth of memory systems with stacked-dram",charIndex:7054},{level:3,title:"6. BEAR: Techniques for Mitigating Bandwidth Bloat in Gigascale DRAM Caches",slug:"_6-bear-techniques-for-mitigating-bandwidth-bloat-in-gigascale-dram-caches",normalizedTitle:"6. bear: techniques for mitigating bandwidth bloat in gigascale dram caches",charIndex:371},{level:3,title:"7.To Update or Not To Update?: Bandwidth-Efficient Intelligent Replacement Policies for DRAM Caches",slug:"_7-to-update-or-not-to-update-bandwidth-efficient-intelligent-replacement-policies-for-dram-caches",normalizedTitle:"7.to update or not to update?: bandwidth-efficient intelligent replacement policies for dram caches",charIndex:10703},{level:3,title:"8.ACCORD: Enabling Associativity for Gigascale DRAM Caches by Coordinating Way-Install and Way-Prediction",slug:"_8-accord-enabling-associativity-for-gigascale-dram-caches-by-coordinating-way-install-and-way-prediction",normalizedTitle:"8.accord: enabling associativity for gigascale dram caches by coordinating way-install and way-prediction",charIndex:13307},{level:3,title:"9. A Survey of Cache Bypassing Techniques",slug:"_9-a-survey-of-cache-bypassing-techniques",normalizedTitle:"9. a survey of cache bypassing techniques",charIndex:13505},{level:3,title:"10. The Evicted-Address Filter: A Unified Mechanism to Address Both Cache Pollution and Thrashing - Not Read Yet Intel",slug:"_10-the-evicted-address-filter-a-unified-mechanism-to-address-both-cache-pollution-and-thrashing-not-read-yet-intel",normalizedTitle:"10. the evicted-address filter: a unified mechanism to address both cache pollution and thrashing - not read yet intel",charIndex:745},{level:3,title:"11. Bypass and Insertion Algorithms for Exclusive Last-level Caches",slug:"_11-bypass-and-insertion-algorithms-for-exclusive-last-level-caches",normalizedTitle:"11. bypass and insertion algorithms for exclusive last-level caches",charIndex:865},{level:3,title:"12. Counter-Based Cache Replacement and Bypassing Algorithms",slug:"_12-counter-based-cache-replacement-and-bypassing-algorithms",normalizedTitle:"12. counter-based cache replacement and bypassing algorithms",charIndex:934},{level:3,title:"13. Techniques for Bandwidth-Efficient Prefetching of Linked Data Structures in Hybrid Prefetching Systems (LDS Prefetch)",slug:"_13-techniques-for-bandwidth-efficient-prefetching-of-linked-data-structures-in-hybrid-prefetching-systems-lds-prefetch",normalizedTitle:"13. techniques for bandwidth-efficient prefetching of linked data structures in hybrid prefetching systems (lds prefetch)",charIndex:996}],headersStr:"1. Data Placement in HPC Architectures with Heterogeneous Off-chip Memory 2. Die-Stacked DRAM: Memory, Cache, or MemCache? 4. Bumblebee: A MemCache Design for Die-stacked and Off-chip Heterogeneous Memory Systems (2023) 5.BATMAN: Techniques for Maximizing System Bandwidth of Memory Systems with Stacked-DRAM 6. BEAR: Techniques for Mitigating Bandwidth Bloat in Gigascale DRAM Caches 7.To Update or Not To Update?: Bandwidth-Efficient Intelligent Replacement Policies for DRAM Caches 8.ACCORD: Enabling Associativity for Gigascale DRAM Caches by Coordinating Way-Install and Way-Prediction 9. A Survey of Cache Bypassing Techniques 10. The Evicted-Address Filter: A Unified Mechanism to Address Both Cache Pollution and Thrashing - Not Read Yet Intel 11. Bypass and Insertion Algorithms for Exclusive Last-level Caches 12. Counter-Based Cache Replacement and Bypassing Algorithms 13. Techniques for Bandwidth-Efficient Prefetching of Linked Data Structures in Hybrid Prefetching Systems (LDS Prefetch)",content:' 1. Data Placement in HPC Architectures with Heterogeneous Off-chip Memory\n 2. Die-Stacked DRAM: Memory, Cache, or MemCache?\n 3. A Survey Of Techniques for Architecting DRAM Caches\n 4. Bumblebee: A MemCache Design for Die-stacked and Off-chip Heterogeneous Memory Systems (2023)\n 5. BATMAN: Techniques for Maximizing System Bandwidth of Memory Systems with Stacked-DRAM\n 6. BEAR: Techniques for Mitigating Bandwidth Bloat in Gigascale DRAM Caches\n 7. To Update or Not To Update?: Bandwidth-Efficient Intelligent Replacement Policies for DRAM Caches\n 8. ACCORD: Enabling Associativity for Gigascale DRAM Caches by Coordinating Way-Install and Way-Prediction\n\n----------------------------------------\n\n 9.  A Survey of Cache Bypassing Techniques\n 10. The Evicted-Address Filter: A Unified Mechanism to Address Both Cache Pollution and Thrashing - Not Read Yet Intel\n 11. Bypass and Insertion Algorithms for Exclusive Last-level Caches\n 12. Counter-Based Cache Replacement and Bypassing Algorithms\n 13. Techniques for Bandwidth-Efficient Prefetching of Linked Data Structures in Hybrid Prefetching Systems (LDS Prefetch)\n\n----------------------------------------\n\n\n# 1. Data Placement in HPC Architectures with Heterogeneous Off-chip Memory\n\n * Software manage DRAM and NVM\n\n 1. First touch policy\n    Alloc all pages in DRAM\n\n 2. Static profile-based policy\n\n 3. Spill Migration\n    LRU spill policy keeps track of last access time for each page in DRAM, and in case of eviction selects one that is least recently used. Spill migration policy first allocates a page in fast memory (in our case DRAM), and later evicts it to PCM. Spill profile-based policy can either spare a page from eviction if its future traffic is high, or victimize it if it is low, regardless of its previous access count.\n\n 4. Dynamic page migration\n    \n    \n    \n    When a page is first brought to the PCM we reset its access counter, regardless of how many times it was accessed in the DRAM. At the same time we keep track of the number of accesses for every page in the DRAM, as well as the average for all the pages (nDRAMavg). When a page in PCM is accessed, we compare its access counter (naccesses) with the average number of accesses to pages in DRAM. Back migration threshold (BMT) is a value that controls the aggressiveness of migration triggering. If it is set to zero, a page is migrated as soon as it is touched in PCM, so the DRAM acts as a typical cache. In this case we expect good performance as the system tends to always move active pages to DRAM, but due to a large number of migrations, number of writes to PCM may go high. On the other hand, if BMT is set to infinity the page never gets migrated back, and then the policy is equivalent to LRU spill. In between those extremes we would like to search for values that give good performace and low number of PCM writes.\n\n----------------------------------------\n\n\n# 2. Die-Stacked DRAM: Memory, Cache, or MemCache?\n\n * Part as Memory ans Part as Cache\n * Discuss and compared with Alloy Cache, Unison Cache, Banshee Cache, HMA\n * Hot Data Sets pages in memory HBM and transient pages in cache HBM\n\nCited from org paper: In this proposal, a software procedure pre-processes the application and determines hot pages,then asks the OS to map them to the memory portion of the die-stacked DRAM. The cache portion of the die-stacked DRAM is managed by hardware, caching data allocated in the off-chip memory.\n\nTo identify hot pages, we use a static profile-based approach before the execution of an application. A software procedure, incorporated into the compiler, pre-processes the application and sorts the pages based on their access frequency. Then it picks the top pages and asks the OS to map them to the memory portion of the die-stacked DRAM.\n\nAfter detection of hot pages, their details are coded into the program binary. Whenever the program gets executed, the Loader passes the required information of hot pages to the OS. Then, the OS tries to map such hot pages to physical locations that belong to the memory portion of the die-stacked DRAM. For the OS, allocating pages in the die-stacked and off-chip memory is similar to the same operations in Non-Uniform Memory Architecture (NUMA) [50] systems.\n\nIn this paper, they raised the issue that when process switches, previous hbm space allocated to a process might left inadequate space for the following process. Other orthogonal research " Various proposals (e.g., [13, 47, 54, 62, 78]) have suggested to optimize memory management in such situations typically by gradually or periodically migrating application pages between different types of memories based on factors like programming model, application’s criticality, sharing degree, and so on".\n\nThey identify the portion of hbm memory(the hot pages that need to be allocated to HBM) for hot pages by trying to allocate the maximum number of pages into hbm memory without worsening the cacheAHF.\n\n\n\n----------------------------------------\n\n\n# 4. Bumblebee: A MemCache Design for Die-stacked and Off-chip Heterogeneous Memory Systems (2023)\n\n# Me\n\n * Hybrid Memory\n * Blk/Page Size 2KB/64KB\n   64KB page size is due to the fact that it maps all memory in dram and hbm.\n   Every request will cam PRT and BLE.\n   In multi core simulation env,it have to support multi core read and write the SRAM.\n   \n * Distinguish Spacial Locality and Temporal Locality.\n   cacheHBM (cHBM) for temporal locality\n   memoryHBM (mHBM) for spacial locality\n   \n * Page Allocation.\n   Different from previous design that allocate all memory in HBM or DRAM. It allocate page according to its neighbour pages. But it does not mention how it interact with page table. If page is deallocate or written back to disk, the PRT should also be updated.\n * The ratio between cHBM and mHBM is flexible.\n\n\n\n * If memory footprint is high, all used by OS, all the HBM will be served as flat memory.\n\nCited from org paper: Program Statistics\n\n\n\nIn each remapping set, the hotness tracker includes a hot table and five parameters: the HBM occupied ratio (Rh), a hotness threshold (T) to decide if an off-chip DRAM page should be brought in HBM for high Rh condition, the number of cHBM pages (Nc), and the number of mHBM pages in which most blocks have/have not been accessed (Na/Nn).\n\n\n\nFor SL>0 (strong spatial locality), more hot data should be brought in mHBM to better exploit the spatial locality and utilize the memory bandwidth. For SL ≤ 0 (weak spatial locality), hot data should be cached in cHBM to reduce over-fetching.\n\nThe threshold T in the hotness tracker can alleviate this issue. If Rh is high, for SL>0, only pages whose hotness value is larger than T are permitted to be migrated to mHBM and for SL ≤ 0, only blocks in a page whose hotness value is larger than T are permitted to be cached in cHBM. Me From this aspect, SL means that number of mHBM pages that most blocks have been accessed is far larger than not been accessed. This means strong spatial locality.\n\n----------------------------------------\n\n\n# 5.BATMAN: Techniques for Maximizing System Bandwidth of Memory Systems with Stacked-DRAM\n\nInsights\n\n * bandwidth distribution\n * dram and hbm similar latency\n\nAs the NM simply offers higher bandwidth, not lower latency,the performance of tiered-memory systems is determined by the utilization of system bandwidth. We observe that both system bandwidth and performance are maximized when memory accesses are distributed proportional to the bandwidth of each memory.\n\nWe leverage our key insight on controlling data movement and propose Bandwidth-Aware Tiered-Memory Management (BATMAN), which is a runtime mechanism that monitors memory access distribution and explicitly controls the data movement between the NM and the FM. We define the desired access rate of the NM as the target access rate (TAR). TAR is the fraction of memory accesses serviced by the NM when memory accesses to both memories are proportional to the respective bandwidth.\n\n\n\n2X 2/3 4X 4/5 8X 8/9\n\nMe Bandwidth-Aware Tired-Memory Management tries to distritube memory according to HBM and DRAM bandwidth ratio. And also treat it as a threshold to refuse page migration.\n\nThis bandwidth division is also adopted in "Design and Implementation of Bandwidth-Aware Memory Placement and Migration Policies for Heterogeneous Memory".\n\n\n\n----------------------------------------\n\n\n# 6. BEAR: Techniques for Mitigating Bandwidth Bloat in Gigascale DRAM Caches\n\nYear:2015\n\nIdeally, we want the bandwidth consumed for such secondary operations to be negligible, and have almost all the bandwidth be available for transfer of useful data from the DRAM cache to the processor. BEAR integrates three components, one each for reducing the bandwidth consumed by miss detection, miss fill, and writeback probes.\n\n 1. Miss Probe (to detect a miss, we need to look up the tag store in the DRAM cache)\n 2. Miss Fill (on a cache miss the missed line is obtained from memory and filled in the cache)\n 3. Write back Probe (on a dirty eviction from the on-chip LLC identifying if that line is present in the DRAM cache)\n 4. Writeback Update (if writeback probe gives a hit, updating the content of the line in DRAM cache)\n 5. Writeback Fill (filling the writeback data in the cache, if a writeback probe gives a miss)\n\nThey define BloatFactor, the ratio of the total bandwidth consumed by the DRAM cache to the bandwidth required for transferring only the data lines to the processor chip.\n\n 1. Bandwidth Efficient Cache Fills We propose Bandwidth Aware Bypass (BAB) to reduce the bandwidth consumed by fill operations while limiting the loss in cache hit rate to a desired level.\n    \n    \n\n 2. Bandwidth Efficient Writeback Probe DRAM Cache Presence (DCP), reduces Writeback Probe by introducing state information in the on-chip Last Level Cache (LLC) to track if the line exists in the DRAM cache. Inclusive Cache\n    \n    \n\n 3. Bandwidth Efficient Miss Probe We reduce the bandwidth consumed by Miss Probe by leveraging the property of DRAM caches to streams multiple tags on each access. We buffer the tags of recently accessed adjacent cache line\'s tags in the Neighboring Tag Cache (NTC). Neighboring Tag Cache\n    \n    \n\nComment from To Update or Not to update Along the same lines, Chou et. al [6] propose a policy that bypasses the cache with 90% probability (we call this policy 90%-Bypass). Me This comment from to update or not to update is not accurate, the bear paper mentioned that "Overall, the speed up from probabilistic bypass is negligible, and we may deem PB to be ineffective at improving performance." Then it prefers set-duleling.\n\n----------------------------------------\n\n\n# 7.To Update or Not To Update?: Bandwidth-Efficient Intelligent Replacement Policies for DRAM Caches\n\nYear: 2019\n\nMe Previous dram cache is stateless, due to the fact that maintaining state of cache would require significant bandwidth.\n\nCite from org paper We propose a stateful replacement/bypass policy called RRIP Age-On-Bypass (RRIP-AOB), that tracks reuse state for high-reuse lines, protects such lines by bypassing other lines, and Ages the state On cache Bypass.\n\nThe DRAM cache in KNL [4, 5],for example, employs an Always-Install policy. The DRAM cache places each tag information in the unused bits in the ECC space and streams out the data and tag (contained in ECC) on each access.\n\n\n\nOur goal is to increase the hit-rate of such DRAM caches. In fact, the DRAM cache only uses about 8-10 bits from the unused 28 bits in the ECC space, so we have 18-20 bits per line available for managing the DRAM cache intelligently.\n\nTo reduce significant bandwidth to update state, we propose Efficient Tracking of Reuse (ETR). ETR makes state tracking efficient by accurately tracking the state of only one line from a region, and using the state of that line to guide the replacement decisions for other lines in that region.\n\n 1. We propose a bypass version of RRIP (RRIP-AOB) suitable for caches with limited associativity. However, we find an effective replacement policy for DRAM caches must optimize not only hit-rate but also state update cost. We introduce two properties, coresidency and eviction-locality, that can be exploited to reduce state update cost for implementing intelligent replacement.\n    \n    \n    \n    Coresidency indicates that at any given time if a line is present, then several other line belonging to that 4KB region are also present in the cache. Eviction-Locality indicates that when a line gets evicted from the cache, the replacement-state of the other coresident lines belonging to that region tend to have similar replacement state as the line being evicted. Me Just a synonym for spacial locality. This granularity is 4KB. Doubt about its authenticity.\n\n 2. We propose Efficient Tracking of Reuse (ETR), a design that performs updates for only a subset of lines and uses their state to guide the replacement decisions of other lines.\n\n\n\nMe This is similar to set dueling.\n\nThe design of ETR consists of three parts: (1) Selecting a Representative-Line in the region. (2) Keeping accurate RRPV for only the Representative-Line. (3) Using the representative’s RRPV to infer coresident lines’ RRPV to make bypass decisions.\n\n----------------------------------------\n\n\n# 8.ACCORD: Enabling Associativity for Gigascale DRAM Caches by Coordinating Way-Install and Way-Prediction\n\nA method to optimize prediction way of dram.\n\n----------------------------------------\n\n\n# 9. A Survey of Cache Bypassing Techniques\n\n----------------------------------------\n\n\n# 10. The Evicted-Address Filter: A Unified Mechanism to Address Both Cache Pollution and Thrashing - Not Read Yet Intel\n\n----------------------------------------\n\n\n# 11. Bypass and Insertion Algorithms for Exclusive Last-level Caches\n\n----------------------------------------\n\n\n# 12. Counter-Based Cache Replacement and Bypassing Algorithms\n\n----------------------------------------\n\n\n# 13. Techniques for Bandwidth-Efficient Prefetching of Linked Data Structures in Hybrid Prefetching Systems (LDS Prefetch)',normalizedContent:' 1. data placement in hpc architectures with heterogeneous off-chip memory\n 2. die-stacked dram: memory, cache, or memcache?\n 3. a survey of techniques for architecting dram caches\n 4. bumblebee: a memcache design for die-stacked and off-chip heterogeneous memory systems (2023)\n 5. batman: techniques for maximizing system bandwidth of memory systems with stacked-dram\n 6. bear: techniques for mitigating bandwidth bloat in gigascale dram caches\n 7. to update or not to update?: bandwidth-efficient intelligent replacement policies for dram caches\n 8. accord: enabling associativity for gigascale dram caches by coordinating way-install and way-prediction\n\n----------------------------------------\n\n 9.  a survey of cache bypassing techniques\n 10. the evicted-address filter: a unified mechanism to address both cache pollution and thrashing - not read yet intel\n 11. bypass and insertion algorithms for exclusive last-level caches\n 12. counter-based cache replacement and bypassing algorithms\n 13. techniques for bandwidth-efficient prefetching of linked data structures in hybrid prefetching systems (lds prefetch)\n\n----------------------------------------\n\n\n# 1. data placement in hpc architectures with heterogeneous off-chip memory\n\n * software manage dram and nvm\n\n 1. first touch policy\n    alloc all pages in dram\n\n 2. static profile-based policy\n\n 3. spill migration\n    lru spill policy keeps track of last access time for each page in dram, and in case of eviction selects one that is least recently used. spill migration policy first allocates a page in fast memory (in our case dram), and later evicts it to pcm. spill profile-based policy can either spare a page from eviction if its future traffic is high, or victimize it if it is low, regardless of its previous access count.\n\n 4. dynamic page migration\n    \n    \n    \n    when a page is first brought to the pcm we reset its access counter, regardless of how many times it was accessed in the dram. at the same time we keep track of the number of accesses for every page in the dram, as well as the average for all the pages (ndramavg). when a page in pcm is accessed, we compare its access counter (naccesses) with the average number of accesses to pages in dram. back migration threshold (bmt) is a value that controls the aggressiveness of migration triggering. if it is set to zero, a page is migrated as soon as it is touched in pcm, so the dram acts as a typical cache. in this case we expect good performance as the system tends to always move active pages to dram, but due to a large number of migrations, number of writes to pcm may go high. on the other hand, if bmt is set to infinity the page never gets migrated back, and then the policy is equivalent to lru spill. in between those extremes we would like to search for values that give good performace and low number of pcm writes.\n\n----------------------------------------\n\n\n# 2. die-stacked dram: memory, cache, or memcache?\n\n * part as memory ans part as cache\n * discuss and compared with alloy cache, unison cache, banshee cache, hma\n * hot data sets pages in memory hbm and transient pages in cache hbm\n\ncited from org paper: in this proposal, a software procedure pre-processes the application and determines hot pages,then asks the os to map them to the memory portion of the die-stacked dram. the cache portion of the die-stacked dram is managed by hardware, caching data allocated in the off-chip memory.\n\nto identify hot pages, we use a static profile-based approach before the execution of an application. a software procedure, incorporated into the compiler, pre-processes the application and sorts the pages based on their access frequency. then it picks the top pages and asks the os to map them to the memory portion of the die-stacked dram.\n\nafter detection of hot pages, their details are coded into the program binary. whenever the program gets executed, the loader passes the required information of hot pages to the os. then, the os tries to map such hot pages to physical locations that belong to the memory portion of the die-stacked dram. for the os, allocating pages in the die-stacked and off-chip memory is similar to the same operations in non-uniform memory architecture (numa) [50] systems.\n\nin this paper, they raised the issue that when process switches, previous hbm space allocated to a process might left inadequate space for the following process. other orthogonal research " various proposals (e.g., [13, 47, 54, 62, 78]) have suggested to optimize memory management in such situations typically by gradually or periodically migrating application pages between different types of memories based on factors like programming model, application’s criticality, sharing degree, and so on".\n\nthey identify the portion of hbm memory(the hot pages that need to be allocated to hbm) for hot pages by trying to allocate the maximum number of pages into hbm memory without worsening the cacheahf.\n\n\n\n----------------------------------------\n\n\n# 4. bumblebee: a memcache design for die-stacked and off-chip heterogeneous memory systems (2023)\n\n# me\n\n * hybrid memory\n * blk/page size 2kb/64kb\n   64kb page size is due to the fact that it maps all memory in dram and hbm.\n   every request will cam prt and ble.\n   in multi core simulation env,it have to support multi core read and write the sram.\n   \n * distinguish spacial locality and temporal locality.\n   cachehbm (chbm) for temporal locality\n   memoryhbm (mhbm) for spacial locality\n   \n * page allocation.\n   different from previous design that allocate all memory in hbm or dram. it allocate page according to its neighbour pages. but it does not mention how it interact with page table. if page is deallocate or written back to disk, the prt should also be updated.\n * the ratio between chbm and mhbm is flexible.\n\n\n\n * if memory footprint is high, all used by os, all the hbm will be served as flat memory.\n\ncited from org paper: program statistics\n\n\n\nin each remapping set, the hotness tracker includes a hot table and five parameters: the hbm occupied ratio (rh), a hotness threshold (t) to decide if an off-chip dram page should be brought in hbm for high rh condition, the number of chbm pages (nc), and the number of mhbm pages in which most blocks have/have not been accessed (na/nn).\n\n\n\nfor sl>0 (strong spatial locality), more hot data should be brought in mhbm to better exploit the spatial locality and utilize the memory bandwidth. for sl ≤ 0 (weak spatial locality), hot data should be cached in chbm to reduce over-fetching.\n\nthe threshold t in the hotness tracker can alleviate this issue. if rh is high, for sl>0, only pages whose hotness value is larger than t are permitted to be migrated to mhbm and for sl ≤ 0, only blocks in a page whose hotness value is larger than t are permitted to be cached in chbm. me from this aspect, sl means that number of mhbm pages that most blocks have been accessed is far larger than not been accessed. this means strong spatial locality.\n\n----------------------------------------\n\n\n# 5.batman: techniques for maximizing system bandwidth of memory systems with stacked-dram\n\ninsights\n\n * bandwidth distribution\n * dram and hbm similar latency\n\nas the nm simply offers higher bandwidth, not lower latency,the performance of tiered-memory systems is determined by the utilization of system bandwidth. we observe that both system bandwidth and performance are maximized when memory accesses are distributed proportional to the bandwidth of each memory.\n\nwe leverage our key insight on controlling data movement and propose bandwidth-aware tiered-memory management (batman), which is a runtime mechanism that monitors memory access distribution and explicitly controls the data movement between the nm and the fm. we define the desired access rate of the nm as the target access rate (tar). tar is the fraction of memory accesses serviced by the nm when memory accesses to both memories are proportional to the respective bandwidth.\n\n\n\n2x 2/3 4x 4/5 8x 8/9\n\nme bandwidth-aware tired-memory management tries to distritube memory according to hbm and dram bandwidth ratio. and also treat it as a threshold to refuse page migration.\n\nthis bandwidth division is also adopted in "design and implementation of bandwidth-aware memory placement and migration policies for heterogeneous memory".\n\n\n\n----------------------------------------\n\n\n# 6. bear: techniques for mitigating bandwidth bloat in gigascale dram caches\n\nyear:2015\n\nideally, we want the bandwidth consumed for such secondary operations to be negligible, and have almost all the bandwidth be available for transfer of useful data from the dram cache to the processor. bear integrates three components, one each for reducing the bandwidth consumed by miss detection, miss fill, and writeback probes.\n\n 1. miss probe (to detect a miss, we need to look up the tag store in the dram cache)\n 2. miss fill (on a cache miss the missed line is obtained from memory and filled in the cache)\n 3. write back probe (on a dirty eviction from the on-chip llc identifying if that line is present in the dram cache)\n 4. writeback update (if writeback probe gives a hit, updating the content of the line in dram cache)\n 5. writeback fill (filling the writeback data in the cache, if a writeback probe gives a miss)\n\nthey define bloatfactor, the ratio of the total bandwidth consumed by the dram cache to the bandwidth required for transferring only the data lines to the processor chip.\n\n 1. bandwidth efficient cache fills we propose bandwidth aware bypass (bab) to reduce the bandwidth consumed by fill operations while limiting the loss in cache hit rate to a desired level.\n    \n    \n\n 2. bandwidth efficient writeback probe dram cache presence (dcp), reduces writeback probe by introducing state information in the on-chip last level cache (llc) to track if the line exists in the dram cache. inclusive cache\n    \n    \n\n 3. bandwidth efficient miss probe we reduce the bandwidth consumed by miss probe by leveraging the property of dram caches to streams multiple tags on each access. we buffer the tags of recently accessed adjacent cache line\'s tags in the neighboring tag cache (ntc). neighboring tag cache\n    \n    \n\ncomment from to update or not to update along the same lines, chou et. al [6] propose a policy that bypasses the cache with 90% probability (we call this policy 90%-bypass). me this comment from to update or not to update is not accurate, the bear paper mentioned that "overall, the speed up from probabilistic bypass is negligible, and we may deem pb to be ineffective at improving performance." then it prefers set-duleling.\n\n----------------------------------------\n\n\n# 7.to update or not to update?: bandwidth-efficient intelligent replacement policies for dram caches\n\nyear: 2019\n\nme previous dram cache is stateless, due to the fact that maintaining state of cache would require significant bandwidth.\n\ncite from org paper we propose a stateful replacement/bypass policy called rrip age-on-bypass (rrip-aob), that tracks reuse state for high-reuse lines, protects such lines by bypassing other lines, and ages the state on cache bypass.\n\nthe dram cache in knl [4, 5],for example, employs an always-install policy. the dram cache places each tag information in the unused bits in the ecc space and streams out the data and tag (contained in ecc) on each access.\n\n\n\nour goal is to increase the hit-rate of such dram caches. in fact, the dram cache only uses about 8-10 bits from the unused 28 bits in the ecc space, so we have 18-20 bits per line available for managing the dram cache intelligently.\n\nto reduce significant bandwidth to update state, we propose efficient tracking of reuse (etr). etr makes state tracking efficient by accurately tracking the state of only one line from a region, and using the state of that line to guide the replacement decisions for other lines in that region.\n\n 1. we propose a bypass version of rrip (rrip-aob) suitable for caches with limited associativity. however, we find an effective replacement policy for dram caches must optimize not only hit-rate but also state update cost. we introduce two properties, coresidency and eviction-locality, that can be exploited to reduce state update cost for implementing intelligent replacement.\n    \n    \n    \n    coresidency indicates that at any given time if a line is present, then several other line belonging to that 4kb region are also present in the cache. eviction-locality indicates that when a line gets evicted from the cache, the replacement-state of the other coresident lines belonging to that region tend to have similar replacement state as the line being evicted. me just a synonym for spacial locality. this granularity is 4kb. doubt about its authenticity.\n\n 2. we propose efficient tracking of reuse (etr), a design that performs updates for only a subset of lines and uses their state to guide the replacement decisions of other lines.\n\n\n\nme this is similar to set dueling.\n\nthe design of etr consists of three parts: (1) selecting a representative-line in the region. (2) keeping accurate rrpv for only the representative-line. (3) using the representative’s rrpv to infer coresident lines’ rrpv to make bypass decisions.\n\n----------------------------------------\n\n\n# 8.accord: enabling associativity for gigascale dram caches by coordinating way-install and way-prediction\n\na method to optimize prediction way of dram.\n\n----------------------------------------\n\n\n# 9. a survey of cache bypassing techniques\n\n----------------------------------------\n\n\n# 10. the evicted-address filter: a unified mechanism to address both cache pollution and thrashing - not read yet intel\n\n----------------------------------------\n\n\n# 11. bypass and insertion algorithms for exclusive last-level caches\n\n----------------------------------------\n\n\n# 12. counter-based cache replacement and bypassing algorithms\n\n----------------------------------------\n\n\n# 13. techniques for bandwidth-efficient prefetching of linked data structures in hybrid prefetching systems (lds prefetch)',charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"DRAM PCM NVM Cache",frontmatter:{title:"DRAM PCM NVM Cache",date:"2023-05-12T00:00:00.000Z",permalink:"/pages/24760e/"},regularPath:"/01.hbm/04.DRAM_PCM_NVM_Cache.html",relativePath:"01.hbm/04.DRAM_PCM_NVM_Cache.md",key:"v-9842a21a",path:"/pages/24760e/",headers:[{level:3,title:"Me",slug:"me",normalizedTitle:"me",charIndex:88}],headersStr:"Me",content:" 1. CLOCK-DWF: A Write-History-Aware Page Replacement Algorithm for Hybrid PCM and DRAM Memory Architectures\n 2. An Operating System Level Data Migration Scheme in Hybrid DRAM-NVM Memory Architecture\n 3. APMigration: Improving Performance of Hybrid Memory Performance via An Adaptive Page Migration Method\n 4. Page Placement in Hybrid Memory Systems\n\n----------------------------------------\n\n# 1. CLOCK-DWF: A Write-History-Aware Page Replacement Algorithm for Hybrid PCM and DRAM Memory Architectures\n\nLRU: Even though it requires only constant time and space overhead, LRU has a critical weakness in virtual memory environments. On every memory hit, LRU needs to move a page to the most recently used (MRU) position in the list. This involves list manipulations that cannot be handled by the paging unit hardware. CLOCK: Specifically, on a hit to a page, the paging unit hardware sets the reference bit of the page to 1 when a read or a write reference for that page occurs, and sets the dirty bit to 1 when a write reference occurs. Then, pages are maintained in a circular list. In the course of the scan, for every page with reference bit 1, CLOCK clears it to zero, without removing the page from the list.\n\nThe reference bit of each page is an indication of whether that page has recently been accessed or not; and pages not referenced upon the return of the clock-hand to that page will be replaced. Even though CLOCK does not replace the least recently used page, it replaces a page that has not been referenced recently, that is, through the cycle of the circular list, so that temporal locality is exploited to some extent.\n\nLRU maintains the temporal locality. Frequency of Write Reference collect statistics of reference cnter.\n\nThe shape of the curves in these figures can be modeled as a monotonic decreasing function, implying that a more recently referenced page is more likely to be written in the near future.\n\nSpecifically, we can observe ranking inversion of temporal locality, i.e., a more recently used page shows a smaller fraction of writes for some ranking ranges.\n\nIn Fig. 3, x axis is the ranking by LRU. y axis represents the number of write references of the page ranking in x-axis.\n\nIn Fig. 4, the x-axis represents the ranking of pages based on their past write counts (black plot) and read/write counts (gray plot). The y-axis represents the number of writes occurring on that ranking.\n\nThe reference bit of each page is an indication of whether that page has recently been accessed or not; and pages not referenced upon the return of the clock-hand to that page will be replaced. Even though CLOCK does not replace the least recently used page, it replaces a page that has not been referenced recently, that is, through the cycle of the circular list, so that temporal locality is exploited to some extent.\n\nThis indicates that frequency based estimations are more accurate compared to temporal locality based estimations for most cases. Specifically, frequency based stimations indicate that a wide range of top ranking pages, that is, pages that have been written to frequently in the past, are likely to be written to again in the future.\n\nIn summary, write frequency is generally a better estimator than temporal locality in predicting the re-reference likelihood of write references, but the very recent past write history is also a strong indicator of future writes.\n\nMe In pic4, the axis x is also ranked by number of reference. That's why its x axis can correlates with y axis. Maybe 80% rule can also explain this.\n\n----------------------------------------\n\n# 2. An Operating System Level Data Migration Scheme in Hybrid DRAM-NVM Memory Architecture\n\nContrary to CLOCK-DWF that places page faults issued by read requests on NVM, the proposed scheme moves all pages from disk to DRAM area. This is motivated by the fact that moving to either NVM or DRAM will result in a page write in NVM since the DRAM is always full and moving a data page to DRAM will issue an eviction to NVM. Therefore, the cost of moving to NVM or DRAM is the same in terms of writes in NVM. The newly accessed data pages have higher probability of access compared to the older data pages and moving this new page to DRAM will result in increase in DRAM hit ratio instead of NVM hit ratio.\n\nFirst,it requires an ordering scheme in order to identify data pages that are cold but will be accessed once in a long time. These data pages will reside long enough in NVM to have a high counter values and therefore will be moved to DRAM where they cannot compete with hot data pages and will return to NVM which makes their migration to DRAM without any benefits. Second, there is no difference between pages that are frequently accessed and typically reside near the head of the NVM LRU queue for the entire time and data pages which go back and forth in the queue.\n\nThe housekeeping information will be only stored for a few percentage of top positions in the NVM LRU queue. Once a data page moves to the end of this selected percentage of LRU, the corresponding counter will be reset to zero. This will handle both ordering scheme and identifying burst data accesses.\n\nFinding the data page in DRAM will result in a normal LRU housekeeping. Otherwise, the extra housekeeping information in NVM will be updated based on the request type. The read and write counters will be stored for readperc and writeperc top data pages in the NVM, respectively. [Still confused why they have readperc and writeperc]\n\nThe values of read threshold and write threshold determine how aggressive we plan to prevent the migrations with low probability of being useful.\n\nTo this end, we use two Least Recently Used (LRU) queues (one for DRAM and one for NVM) and optimize the LRU queue for NVM to prevent nonbeneficial migrations to DRAM.\n\n# 3. APMigration: Improving Performance of Hybrid Memory Performance via An Adaptive Page Migration Method\n\nComments on the previous paper: CLOCK-DWF [19]. CLOCK-DWF first proposes to load the write-request pages into DRAM. For new pages, if it is for a write request, it will be swapped into DRAM. Otherwise, it will be placed in NVRAM. For pages stored in NVRAM, if one is hit by a write request, it will be migrated from NVRAM to DRAM. At this time when DRAM is full, CLOCK-DWF will select a victim page that has the lowest number of writes or that has not been accessed for the longest period of time in DRAM to be evicted. Double LRU [20]. Double LRU recognizes the high migration cost between NVRAM and DRAM, and tries to restrict the number of page migrations by setting some threshold. It uses two separate LRU linked lists to manage pages in DRAM and NVRAM. For each page in NVRAM, it maintains a read/write request count. When a page is accessed, Double LRU checks its read/write request count, and if the count reaches a certain threshold, it will be migrated from NVRAM to DRAM; otherwise, it will remain in NVRAM. In DRAM, the page at the end of the LRU list is always selected as the victim. For new pages, Double LRU stores them directly in DRAM, assuming new pages will be accessed frequently in the near future. regardless of the read or write requests.\n\nUIMigrate consists of three parts: unified hot page identification, page migration, and self-adaptive adjustment.\n\nTo consider both the number of accesses and access time,we add the attenuation factor to quantify the hotness of each page, hoping to quickly reduce the access counts for pages that are accessed a long time ago. Thus, while updating page hotness upon each access, UIMigrate also uses an attenuation coefficient to lower the page popularity of old accesses.\n\nIf all DRAM pages should be accessed in one cycle, (acc_count.global-acc.countpage)/DRAMsize denotes the number of cycles the page that has not been accessed.\n\nthe attenuation coefficient d is closely related to the value of hotold and the number of cycles the page that has not been accessed since last time.\n\nUIMigrate sets a threshold, called new page threshold, to measure the hotness of each victim page. When the quantified hotness of a selected victim is larger than the preset threshold, it means that this victim page is too hot to be evicted, and so UIMigrate will store the new page in NVRAM. Otherwise, it will be migrated to DRAM.\n\nIn order to effectively adapt to the change of access patterns, UIMigrate adjusts migration thresholds (new page threshold, hot page threshold and cold page threshold) automatically to promote or suppress the page migrations, according to real-time migration revenue.\n\nWhen they are evicted from DRAM, UIMigrate calculates the migration revenue based on Equations (3) and (4). If the migration revenue is below zero, it means that the migration cost is greater than the benefit. In this case, UIMigrate will increase hot page threshold to prevent certain pages from getting hot in NVRAM and decrease cold page threshold to prevent some pages from becoming cold in DRAM, thus retaining more pages in NVRAM. For new pages, UIMigrate will also reduce new page threshold, so that more new pages will go to NVRAM instead of DRAM. When the calculated migration benefit is larger than the migration cost, UIMigare will reduce hot page threshold and increase cold page threshold to make migrate more pages to DRAM, and increase new page threshold to keep more new pages in DRAM.\n\n# 4. Page Placement in Hybrid Memory Systems\n\nGiven the characteristics of DRAM and PCM, RaPP seeks to (1) place performance-critical pages and frequently written pages in DRAM (2) place non-critical pages and rarely written pages in PCM (3) spread writes to PCM across many physical frames.\n\nUsing this information, RaPP dynamically ranks frames based on frequency and recency of accesses, as detailed below. Frames that rank high are called “popular”, and frames that rank low are called “unpopular”.\n\n# Algorithm\n\n 1. The descriptors in queue M − 1 represent the blocks that are most frequently used. On the first access to a block, its descriptor is placed in the tail of queue 0.\n 2. In addition, the block’s expiration time ExpirationTime is set to CurrentTime + LifeTime, where both times are measured in number of accesses and LifeT ime specifies the number of consecutive accesses that n must directed to other blocks before we expire the block.\n 3. Every time the block is accessed, its reference counter is incremented, its expiration time is reset to CurrentT ime + LifeT ime, and its descriptor is moved to the tail of its current queue.\n 4. The descriptor of a frequently used block is promoted to a higher queue (saturating at queue M − 1, of course) after a certain number of accesses to the block.\n 5. Specifically, if the descriptor is currently in queue i, it will be upgraded to queue i + 1 when its reference counter reaches 2i+1.\n 6. Conversely, MQ demotes blocks that have not been accessed recently. On each access, the descriptors at the heads of all M queues (representing the LRU block of each queue) are checked for expiration (CurrentT ime > ExpirationTime).\n\nIf a block descriptor expires, it is placed at the tail of the immediately inferior queue, and has its expiration time again set to CurrentTime + LifeTime.\n\nFirst,instead of counting all accesses, we only count an access if it occurs more than a threshold time (measured in memory cycles) after the last access to the same frame. This latter threshold is called the “filter threshold”. The MC stores the time of the last access in the descriptor for the frame. Using a 2-competitive approach, we set the filter threshold to be MigrationCost/MigrationThreshold, where MigrationCost is the uncontended number of memory cycles needed to migrate a page. (MigrationCost is roughly 1.6µs in our experiments.)\n\nSecond, we modified the demotion policy in the following ways: (a) we use time, not number of accesses, as the metric for demotion to reduce space requirements (in our experiments, we set LifeT ime to 100µs, which works well for our workloads); (b) we only demote from one queue at a time (in round-robin fashion) to reduce runtime overhead; (c) a DRAM frame that is demoted twice without any intervening accesses leaves the MQ queues and becomes a candidate to receive a popular PCM page.\n\nTo select a destination DRAM frame for a page, the MC maintains an LRU list of victim DRAM frames. The victim frames are not in any of the LRU queues (the list is initialized with all DRAM frames).\n\nTo effect a page migration to DRAM, the MC (1) migrates the page stored in the selected DRAM frame to one of the unranked PCM frames, (2) migrates the content of this latter frame to the most popular PCM frame, and finally (3) migrates the content of the most popular PCM frame to the selected DRAM frame.\n\n\n# Me\n\nWhy swap 3 time? not 2?",normalizedContent:" 1. clock-dwf: a write-history-aware page replacement algorithm for hybrid pcm and dram memory architectures\n 2. an operating system level data migration scheme in hybrid dram-nvm memory architecture\n 3. apmigration: improving performance of hybrid memory performance via an adaptive page migration method\n 4. page placement in hybrid memory systems\n\n----------------------------------------\n\n# 1. clock-dwf: a write-history-aware page replacement algorithm for hybrid pcm and dram memory architectures\n\nlru: even though it requires only constant time and space overhead, lru has a critical weakness in virtual memory environments. on every memory hit, lru needs to move a page to the most recently used (mru) position in the list. this involves list manipulations that cannot be handled by the paging unit hardware. clock: specifically, on a hit to a page, the paging unit hardware sets the reference bit of the page to 1 when a read or a write reference for that page occurs, and sets the dirty bit to 1 when a write reference occurs. then, pages are maintained in a circular list. in the course of the scan, for every page with reference bit 1, clock clears it to zero, without removing the page from the list.\n\nthe reference bit of each page is an indication of whether that page has recently been accessed or not; and pages not referenced upon the return of the clock-hand to that page will be replaced. even though clock does not replace the least recently used page, it replaces a page that has not been referenced recently, that is, through the cycle of the circular list, so that temporal locality is exploited to some extent.\n\nlru maintains the temporal locality. frequency of write reference collect statistics of reference cnter.\n\nthe shape of the curves in these figures can be modeled as a monotonic decreasing function, implying that a more recently referenced page is more likely to be written in the near future.\n\nspecifically, we can observe ranking inversion of temporal locality, i.e., a more recently used page shows a smaller fraction of writes for some ranking ranges.\n\nin fig. 3, x axis is the ranking by lru. y axis represents the number of write references of the page ranking in x-axis.\n\nin fig. 4, the x-axis represents the ranking of pages based on their past write counts (black plot) and read/write counts (gray plot). the y-axis represents the number of writes occurring on that ranking.\n\nthe reference bit of each page is an indication of whether that page has recently been accessed or not; and pages not referenced upon the return of the clock-hand to that page will be replaced. even though clock does not replace the least recently used page, it replaces a page that has not been referenced recently, that is, through the cycle of the circular list, so that temporal locality is exploited to some extent.\n\nthis indicates that frequency based estimations are more accurate compared to temporal locality based estimations for most cases. specifically, frequency based stimations indicate that a wide range of top ranking pages, that is, pages that have been written to frequently in the past, are likely to be written to again in the future.\n\nin summary, write frequency is generally a better estimator than temporal locality in predicting the re-reference likelihood of write references, but the very recent past write history is also a strong indicator of future writes.\n\nme in pic4, the axis x is also ranked by number of reference. that's why its x axis can correlates with y axis. maybe 80% rule can also explain this.\n\n----------------------------------------\n\n# 2. an operating system level data migration scheme in hybrid dram-nvm memory architecture\n\ncontrary to clock-dwf that places page faults issued by read requests on nvm, the proposed scheme moves all pages from disk to dram area. this is motivated by the fact that moving to either nvm or dram will result in a page write in nvm since the dram is always full and moving a data page to dram will issue an eviction to nvm. therefore, the cost of moving to nvm or dram is the same in terms of writes in nvm. the newly accessed data pages have higher probability of access compared to the older data pages and moving this new page to dram will result in increase in dram hit ratio instead of nvm hit ratio.\n\nfirst,it requires an ordering scheme in order to identify data pages that are cold but will be accessed once in a long time. these data pages will reside long enough in nvm to have a high counter values and therefore will be moved to dram where they cannot compete with hot data pages and will return to nvm which makes their migration to dram without any benefits. second, there is no difference between pages that are frequently accessed and typically reside near the head of the nvm lru queue for the entire time and data pages which go back and forth in the queue.\n\nthe housekeeping information will be only stored for a few percentage of top positions in the nvm lru queue. once a data page moves to the end of this selected percentage of lru, the corresponding counter will be reset to zero. this will handle both ordering scheme and identifying burst data accesses.\n\nfinding the data page in dram will result in a normal lru housekeeping. otherwise, the extra housekeeping information in nvm will be updated based on the request type. the read and write counters will be stored for readperc and writeperc top data pages in the nvm, respectively. [still confused why they have readperc and writeperc]\n\nthe values of read threshold and write threshold determine how aggressive we plan to prevent the migrations with low probability of being useful.\n\nto this end, we use two least recently used (lru) queues (one for dram and one for nvm) and optimize the lru queue for nvm to prevent nonbeneficial migrations to dram.\n\n# 3. apmigration: improving performance of hybrid memory performance via an adaptive page migration method\n\ncomments on the previous paper: clock-dwf [19]. clock-dwf first proposes to load the write-request pages into dram. for new pages, if it is for a write request, it will be swapped into dram. otherwise, it will be placed in nvram. for pages stored in nvram, if one is hit by a write request, it will be migrated from nvram to dram. at this time when dram is full, clock-dwf will select a victim page that has the lowest number of writes or that has not been accessed for the longest period of time in dram to be evicted. double lru [20]. double lru recognizes the high migration cost between nvram and dram, and tries to restrict the number of page migrations by setting some threshold. it uses two separate lru linked lists to manage pages in dram and nvram. for each page in nvram, it maintains a read/write request count. when a page is accessed, double lru checks its read/write request count, and if the count reaches a certain threshold, it will be migrated from nvram to dram; otherwise, it will remain in nvram. in dram, the page at the end of the lru list is always selected as the victim. for new pages, double lru stores them directly in dram, assuming new pages will be accessed frequently in the near future. regardless of the read or write requests.\n\nuimigrate consists of three parts: unified hot page identification, page migration, and self-adaptive adjustment.\n\nto consider both the number of accesses and access time,we add the attenuation factor to quantify the hotness of each page, hoping to quickly reduce the access counts for pages that are accessed a long time ago. thus, while updating page hotness upon each access, uimigrate also uses an attenuation coefficient to lower the page popularity of old accesses.\n\nif all dram pages should be accessed in one cycle, (acc_count.global-acc.countpage)/dramsize denotes the number of cycles the page that has not been accessed.\n\nthe attenuation coefficient d is closely related to the value of hotold and the number of cycles the page that has not been accessed since last time.\n\nuimigrate sets a threshold, called new page threshold, to measure the hotness of each victim page. when the quantified hotness of a selected victim is larger than the preset threshold, it means that this victim page is too hot to be evicted, and so uimigrate will store the new page in nvram. otherwise, it will be migrated to dram.\n\nin order to effectively adapt to the change of access patterns, uimigrate adjusts migration thresholds (new page threshold, hot page threshold and cold page threshold) automatically to promote or suppress the page migrations, according to real-time migration revenue.\n\nwhen they are evicted from dram, uimigrate calculates the migration revenue based on equations (3) and (4). if the migration revenue is below zero, it means that the migration cost is greater than the benefit. in this case, uimigrate will increase hot page threshold to prevent certain pages from getting hot in nvram and decrease cold page threshold to prevent some pages from becoming cold in dram, thus retaining more pages in nvram. for new pages, uimigrate will also reduce new page threshold, so that more new pages will go to nvram instead of dram. when the calculated migration benefit is larger than the migration cost, uimigare will reduce hot page threshold and increase cold page threshold to make migrate more pages to dram, and increase new page threshold to keep more new pages in dram.\n\n# 4. page placement in hybrid memory systems\n\ngiven the characteristics of dram and pcm, rapp seeks to (1) place performance-critical pages and frequently written pages in dram (2) place non-critical pages and rarely written pages in pcm (3) spread writes to pcm across many physical frames.\n\nusing this information, rapp dynamically ranks frames based on frequency and recency of accesses, as detailed below. frames that rank high are called “popular”, and frames that rank low are called “unpopular”.\n\n# algorithm\n\n 1. the descriptors in queue m − 1 represent the blocks that are most frequently used. on the first access to a block, its descriptor is placed in the tail of queue 0.\n 2. in addition, the block’s expiration time expirationtime is set to currenttime + lifetime, where both times are measured in number of accesses and lifet ime specifies the number of consecutive accesses that n must directed to other blocks before we expire the block.\n 3. every time the block is accessed, its reference counter is incremented, its expiration time is reset to currentt ime + lifet ime, and its descriptor is moved to the tail of its current queue.\n 4. the descriptor of a frequently used block is promoted to a higher queue (saturating at queue m − 1, of course) after a certain number of accesses to the block.\n 5. specifically, if the descriptor is currently in queue i, it will be upgraded to queue i + 1 when its reference counter reaches 2i+1.\n 6. conversely, mq demotes blocks that have not been accessed recently. on each access, the descriptors at the heads of all m queues (representing the lru block of each queue) are checked for expiration (currentt ime > expirationtime).\n\nif a block descriptor expires, it is placed at the tail of the immediately inferior queue, and has its expiration time again set to currenttime + lifetime.\n\nfirst,instead of counting all accesses, we only count an access if it occurs more than a threshold time (measured in memory cycles) after the last access to the same frame. this latter threshold is called the “filter threshold”. the mc stores the time of the last access in the descriptor for the frame. using a 2-competitive approach, we set the filter threshold to be migrationcost/migrationthreshold, where migrationcost is the uncontended number of memory cycles needed to migrate a page. (migrationcost is roughly 1.6µs in our experiments.)\n\nsecond, we modified the demotion policy in the following ways: (a) we use time, not number of accesses, as the metric for demotion to reduce space requirements (in our experiments, we set lifet ime to 100µs, which works well for our workloads); (b) we only demote from one queue at a time (in round-robin fashion) to reduce runtime overhead; (c) a dram frame that is demoted twice without any intervening accesses leaves the mq queues and becomes a candidate to receive a popular pcm page.\n\nto select a destination dram frame for a page, the mc maintains an lru list of victim dram frames. the victim frames are not in any of the lru queues (the list is initialized with all dram frames).\n\nto effect a page migration to dram, the mc (1) migrates the page stored in the selected dram frame to one of the unranked pcm frames, (2) migrates the content of this latter frame to the most popular pcm frame, and finally (3) migrates the content of the most popular pcm frame to the selected dram frame.\n\n\n# me\n\nwhy swap 3 time? not 2?",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"Dynamically Adapting  Page Migration Policies Based on Applications Memory Access Behaviors",frontmatter:{title:"Dynamically Adapting  Page Migration Policies Based on Applications Memory Access Behaviors",date:"2023-05-11T00:00:00.000Z",permalink:"/pages/24769f/"},regularPath:"/01.hbm/03.Dynamically_Adapting%20_Page_Migration_Policies_Based_on_Applications_Memory_Access_Behaviors.html",relativePath:"01.hbm/03.Dynamically_Adapting _Page_Migration_Policies_Based_on_Applications_Memory_Access_Behaviors.md",key:"v-b2fd417c",path:"/pages/24769f/",headersStr:null,content:'Year: 2021 Mem : HBM & PCM\n\n * migration friendly\n * migration unfriendly\n\nBased on previous research "On-the-fly Page Migration and Address Reconciliation for Heterogeneous Memory Systems" from the same author.\n\n 1. Adaptive migration polices Our technique increases or reduces the hotness thresholds to reduce or increase the number of pages migrated based on either the number of pages migrated over a window of observation or based on the observed benefits of page migrations (were pages accessed after the migration to faster memories).\n 2. AR overheads can defeat the benefits of page migration To eliminate AR, we explore the benefit of reverse migrating pages to their original locations, particularly when the migrated pages are no longer heavily accessed. AR: OS tables (translation look-aside buffers (TLBs), page tables) must also be updated since physical addresses (PAs) in such memory systems are based on the physical location of pages and a migration changes PAs: we call this process of changing PAs and updating system tables address reconciliation (AR).\n\nWe discovered that an exponential-shaped histogram indicates that very few pages receive most accesses and that those applications benefit by either placing those few pages in the faster (HBM) memory at the start of execution, or migrated to HBM on demand.\n\nMcf 3% of all pages cause 97% of memory accesses. Milc 65% of pages contribute to 82% of all accesses.\n\nIf most of all pages receive about the same number of accesses, implying that too many pages may be migrated if a fixed hotness threshold is used for migrating pages, and the migration overheads outweigh performance gains. Doubt about this statement.\n\nMigration of pages to faster memories results in performance gains if those pages continue to be heavily used, because these accesses will be satisfied by faster memories.\n\nLinux3 performs the following functions when the virtual to PA mapping of a page is changed.\n\n 1. flush_cache_page\n 2. change PTE\n 3. flush_tlb_page\n\n# Key Insights\n\nAdaptive migration polices: Previous page migration techniques relied on fixed hotness thresholds: a page is migrated from slow memories to faster memories when the number of times that page was accessed exceeds the hotness threshold. In contrast, we control page migration policies based on applications’ memory access behaviors. Our technique increases or reduces the hotness thresholds to reduce or increase the number of pages migrated based on either the number of pages migrated over a window of observation or based on the observed benefits of page migrations (were pages accessed after the migration to faster memories).\n\nAR overheads can defeat the benefits of page migration: To eliminate AR, we explore the benefit of reverse migrating pages to their original locations, particularly when the migrated pages are no longer heavily accessed. Reverse migration makes page migration invisible to the OS. However, reverse migrations can result in excessive data movement between slow and fast memories. In this work, we evaluate the effectiveness of the reverse migration technique.\n\n# Algorithm\n\nIf the count is high (too many pages have been migrated), we double the hotness threshold to reduce future migrations; likewise, if too few pages have been migrated in a twindow, we halve the hotness threshold to increase future Adaptive Migration Based on Number of Pages Migrated migrations. In our experiments, we used 4 million cycles as our twindow.6 We also limit the hotness threshold variations between 64 and 256.\n\nWe define the MBQ as the average number of accesses to pages that were recently migrated to HBM.\n\n\n\n * threshold adaption We increase the threshold if more than 240 pages have been migrated in a window and reduce the threshold if fewer than 160 pages have been migrated in a window.\n * pause and resume migration If the MBQ is less than a threshold (min_MBQ), then migrations are halted. migrations are resumed if the MBQ is greater than another threshold (max_MBQ).\n\nAdaptive Migration Based on the MBQ\n\n# Summary\n\nTwo Algorithm\n\n 1. Based on number of page migrated, if too many page is migrared, reduce migration by increase threshold.\n 2. Based on reference after migration, if too less after migration, reduce or stop.',normalizedContent:'year: 2021 mem : hbm & pcm\n\n * migration friendly\n * migration unfriendly\n\nbased on previous research "on-the-fly page migration and address reconciliation for heterogeneous memory systems" from the same author.\n\n 1. adaptive migration polices our technique increases or reduces the hotness thresholds to reduce or increase the number of pages migrated based on either the number of pages migrated over a window of observation or based on the observed benefits of page migrations (were pages accessed after the migration to faster memories).\n 2. ar overheads can defeat the benefits of page migration to eliminate ar, we explore the benefit of reverse migrating pages to their original locations, particularly when the migrated pages are no longer heavily accessed. ar: os tables (translation look-aside buffers (tlbs), page tables) must also be updated since physical addresses (pas) in such memory systems are based on the physical location of pages and a migration changes pas: we call this process of changing pas and updating system tables address reconciliation (ar).\n\nwe discovered that an exponential-shaped histogram indicates that very few pages receive most accesses and that those applications benefit by either placing those few pages in the faster (hbm) memory at the start of execution, or migrated to hbm on demand.\n\nmcf 3% of all pages cause 97% of memory accesses. milc 65% of pages contribute to 82% of all accesses.\n\nif most of all pages receive about the same number of accesses, implying that too many pages may be migrated if a fixed hotness threshold is used for migrating pages, and the migration overheads outweigh performance gains. doubt about this statement.\n\nmigration of pages to faster memories results in performance gains if those pages continue to be heavily used, because these accesses will be satisfied by faster memories.\n\nlinux3 performs the following functions when the virtual to pa mapping of a page is changed.\n\n 1. flush_cache_page\n 2. change pte\n 3. flush_tlb_page\n\n# key insights\n\nadaptive migration polices: previous page migration techniques relied on fixed hotness thresholds: a page is migrated from slow memories to faster memories when the number of times that page was accessed exceeds the hotness threshold. in contrast, we control page migration policies based on applications’ memory access behaviors. our technique increases or reduces the hotness thresholds to reduce or increase the number of pages migrated based on either the number of pages migrated over a window of observation or based on the observed benefits of page migrations (were pages accessed after the migration to faster memories).\n\nar overheads can defeat the benefits of page migration: to eliminate ar, we explore the benefit of reverse migrating pages to their original locations, particularly when the migrated pages are no longer heavily accessed. reverse migration makes page migration invisible to the os. however, reverse migrations can result in excessive data movement between slow and fast memories. in this work, we evaluate the effectiveness of the reverse migration technique.\n\n# algorithm\n\nif the count is high (too many pages have been migrated), we double the hotness threshold to reduce future migrations; likewise, if too few pages have been migrated in a twindow, we halve the hotness threshold to increase future adaptive migration based on number of pages migrated migrations. in our experiments, we used 4 million cycles as our twindow.6 we also limit the hotness threshold variations between 64 and 256.\n\nwe define the mbq as the average number of accesses to pages that were recently migrated to hbm.\n\n\n\n * threshold adaption we increase the threshold if more than 240 pages have been migrated in a window and reduce the threshold if fewer than 160 pages have been migrated in a window.\n * pause and resume migration if the mbq is less than a threshold (min_mbq), then migrations are halted. migrations are resumed if the mbq is greater than another threshold (max_mbq).\n\nadaptive migration based on the mbq\n\n# summary\n\ntwo algorithm\n\n 1. based on number of page migrated, if too many page is migrared, reduce migration by increase threshold.\n 2. based on reference after migration, if too less after migration, reduce or stop.',charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"Cache Memory Compression",frontmatter:{title:"Cache Memory Compression",date:"2023-06-06T00:00:00.000Z",permalink:"/pages/2476bf/"},regularPath:"/01.hbm/05.cache_mem_compression.html",relativePath:"01.hbm/05.cache_mem_compression.md",key:"v-7f8db936",path:"/pages/2476bf/",headersStr:null,content:" 1. Compresso: Pragmatic Main Memory Compression\n 2. Translation-optimized Memory Compression for Capacity\n 3. Touche: Towards Ideal and Efficient Cache Compression By Mitigating Tag Area Overheads\n\n----------------------------------------\n\n# 1. Compresso: Pragmatic Main Memory Compression\n\nCite from the paper: We propose Compresso, with optimizations to reduce compressed data movement in a hardware compressed memory, while maintaining high compression ratio by repacking data at the right time.\n\nCompresso uses the modified BPC compression algorithm, achieving 1.85x average compression on a wide range of applications.\n\nCompresso uses the compression granularity of 64B.\n\nCompresso uses LinePack with 4 possible cache line sizes.\n\nWe compare variable-sized chunks (512B, 1KB, 2KB and 4KB) with 512B fixed-sized chunks. Compresso uses incremental allocation in 512B chunks,thereby allowing 8 page sizes (512B, 1KB, 1.5KB and so on).\n\n\n\nAdditional Data Movement:\n\n 1. split-access cachelines\n 2. changes in compressibility(overflows)\n 3. metadata access\n\n\n\nDifference in exception in LCP compression Instead, Compresso allows some number of such inflated cachelines to be stored uncompressed in the inflation room at the end of an MPA page, provided that there is space in that page (Fig. 5a). This is similar to the exception region in LCP, but is used for an entirely different reason—to reduce compression-related data movement, rather than to support a specific packing scheme.\n\n\n\nWe present the first main-memory compression architecture that is designed to run an unmodified operating system.\n\n----------------------------------------\n\n# 2. Translation-optimized Memory Compression for Capacity\n\nprior workscompress and pack/migrate data at a small - memory block-level - granularity; this introduces an additional block-level translation after the page-level virtual address translation. In general, the smaller the granularity of address translation, the higher the translation overhead.\n\nA promising solution is to only save memory from cold (i.e.,less recently accessed) pages without saving memory from hot (i.e., more recently accessed) pages (e.g., keep the hot pages uncompressed).\n\nTwo challenges:\n\n 1. after a compressed cold page becomes hot again, migrating the page to a full 4KB DRAM location still adds another level (albeit page-level, instead of block-level) of translation on top of existing virtual address translation. Solution we propose compressing page table blocks in hardware to opportunistically embed compression translations into them in a software-transparent manner to effectively prefetch compression translations during a page walk, instead of serially fetching them after the walk.\n\nFirst, CTE misses typically occur after PTE misses in TLB because CTEs, especially the page-level CTEs under an OS-inspired approach, have similar translation reach as PTEs. Second, we observe page table blocks (PTBs) are highly compressible because adjacent virtual pages often have identical status bits and the most significant bits in physical page numbers are unused. As such, to hide the latency of CTE misses, TMCC transparently compresses each PTB in hardware to free up space in the PTB to embed the CTEs of the 4KB pages (i.e., either data pages or page table pages) that the PTB points to; this enables each page walk to also prefetch the matching CTE required for fetching from DRAM either the end data or the next PTB.\n\n 2. only compressing cold data require compressing them very aggressively to achieve high overall memory savings. Solution we perform a large design space exploration across many hardware configurations and diverse workloads to derive and implement in HDL an ASIC Deflate that is specialized for memory.\n\nPrior new hardware managed translation entries as Compression Translation Entries (CTEs), as they are similar to OS page table entries (PTEs). Prior works cache CTEs in the memory controller via a dedicated CTE cache, similar to the TLBs dedicated to caching PTEs.\n\nlet hardware take on an OS-inspired approach: only save memory from cold (i.e., less recently accessed) pages without saving memory from hot (i.e., recently accessed) pages (e.g., keep the hot pages uncompressed), like OS memory compression. Solves the problem of\n\n 1. translation overheads that large and/or irregular workloads suffer from high PTE miss under hardware memory compression.\n 2. Fine-grained address translation\n\nAccesses to a compressed virtual page in ML2 incurs a page fault to wake up OS to pop a free physical page from ML1’s free list and migrate the virtual page to the page.\n\nML2 also keeps many free lists, each tracking sub-physical pages of a different size, to store any compressed virtual page in a practically ideal matching sub-physical page.\n\nML2 gracefully grows and shrinks relative to ML1 with increasing and decreasing memory usage. When everything can fit in memory uncompressed, ML2 shrinks to zero bytes in physical size so ML1 can have every physical page. Specifically, when ML2’s free list(s) get large (e.g., due to reducing memory usage), ML2 donates free physical pages from its free list(s) to ML1. OS also grows ML1 free list, when it gets small, by migrating cold virtual pages to ML2. Migrating a virtual page to ML2 shrinks one of ML2’s free lists. If a ML2 free list gets empty, ML1 gives cold victim physical pages to ML2 (i.e., track them in ML2 instead of ML1), so that ML2 can compress the virtual pages currently in the victim pages to free space in the victims to grow ML2’s free list(s).\n\n\n\nKey Idea: Based on our observations, we propose transparently compressing each PTB in hardware to free up space in the PTB to embed the CTEs of the 4KB pages (i.e., either data pages or page table pages) that the PTB points to; this enables each page walk access to also prefetch the matching CTE required either for the next page walk access (i.e., to the next PTB) or for the actual data (or instruction) access after the walk.\n\n\n\nA practical challenge is that after migrating a page (e.g., from ML1 to ML2 after the page becomes cold), the corresponding CTE embedded in the page’s PTB should be updated. However, hardware has no easy way to use the PPN of the migrating page to find/access the page’s PTB(s). TMCC addresses this challenge by lazily updating the CTE in the PTB later around when the PTB is naturally accessed by the page walker, instead of updating it at the time of migrating the page. However, this means that for the first page walker access to the PTB after migrating one of the pages that the PTB points to, the corresponding CTE is out-of-date. To ensure correctness, TMCC also accesses the correct CTE in DRAM (or in CTE cache) in parallel to verify the correctness of the DRAM access. Figure 8 compares and contrasts how TMCC serves an LLC miss that also misses in CTE cache with the baseline approach. Figure 9 provides n architectural overview of TMCC.\n\n\n\n\n\n\n\nMy Comment When os access compressed page, that page is migrated from ML2 to ML1. Hardware cannot update the PTB easily. Thus it utilizes lazily update. During the page table walk, it will buffer the piggybacked CTE into CTE buffer. And when data miss req happens, L2 extracts the PPN from the received request to lookup the CTE Buffer to obtain the CTE for MC to translate the PPN.\n\n----------------------------------------\n\n# 3. Touche: Towards Ideal and Efficient Cache Compression By Mitigating Tag Area Overheads\n\nThe first component, called the “Signature” (SIGN) engine, creates shortened signatures from the tag addresses of compressed blocks. Due to this, the SIGN engine can store multiple signatures in each tag entry. On a cache access, the physical cacheline is accessed only if there is a signature match (which has a negligible probability of false positive). The second component, called the “Tag Appended Data” (TADA) mechanism, stores the full tag addresses with data. TADA enables Touch´e to detect false positive signature matches by ensuring that the actual tag address is available for comparison. The third component, called the “Superblock Marker” (SMARK) mechanism, uses a unique marker in the tag entry to indicate the occurrence of compressed cache blocks from neighboring physical addresses in the same cacheline.\n\n\n\nOn average, 55% of the blocks can be compressed to less than 48 bytes in size. Furthermore, 17% of the lines can be compressed to be less than 16 bytes in size. Therefore, several workloads tend to have blocks with low entropy and can benefit from compression.\n\n\n\n\n\n\n\nFor instance, a cacheline cannot be marked both invalid and dirty at the same time. The tag manager uses this unused state to flag cachelines that contains compressed blocks. Thereafter, for a cacheline that stores compressed blocks, the 1st and 2nd bits of the tag address encodes its valid bit and dirty bit.\n\n\n\n\n\nThe tag manager then retrieves the 16-bit marker from the SMARK mechanism. It then informs the SIGN engine to ignore the last 2-bits (corresponding to four neighboring addresses) of the full tag address to generate a unique 9-bit signature.\n\nThis SMARK generate a random 16-bit marker and concated with signature. Since non-superblocks use 3 signature to identify blks, it should also use a tag to compare not just 0.\n\nIf this paper doest not support superblock 4 compressed blks in a super block, it can only store 3* 16B compressed block or 48B + 64B block, due to extra real tag stored in data, 43bit for each data.",normalizedContent:" 1. compresso: pragmatic main memory compression\n 2. translation-optimized memory compression for capacity\n 3. touche: towards ideal and efficient cache compression by mitigating tag area overheads\n\n----------------------------------------\n\n# 1. compresso: pragmatic main memory compression\n\ncite from the paper: we propose compresso, with optimizations to reduce compressed data movement in a hardware compressed memory, while maintaining high compression ratio by repacking data at the right time.\n\ncompresso uses the modified bpc compression algorithm, achieving 1.85x average compression on a wide range of applications.\n\ncompresso uses the compression granularity of 64b.\n\ncompresso uses linepack with 4 possible cache line sizes.\n\nwe compare variable-sized chunks (512b, 1kb, 2kb and 4kb) with 512b fixed-sized chunks. compresso uses incremental allocation in 512b chunks,thereby allowing 8 page sizes (512b, 1kb, 1.5kb and so on).\n\n\n\nadditional data movement:\n\n 1. split-access cachelines\n 2. changes in compressibility(overflows)\n 3. metadata access\n\n\n\ndifference in exception in lcp compression instead, compresso allows some number of such inflated cachelines to be stored uncompressed in the inflation room at the end of an mpa page, provided that there is space in that page (fig. 5a). this is similar to the exception region in lcp, but is used for an entirely different reason—to reduce compression-related data movement, rather than to support a specific packing scheme.\n\n\n\nwe present the first main-memory compression architecture that is designed to run an unmodified operating system.\n\n----------------------------------------\n\n# 2. translation-optimized memory compression for capacity\n\nprior workscompress and pack/migrate data at a small - memory block-level - granularity; this introduces an additional block-level translation after the page-level virtual address translation. in general, the smaller the granularity of address translation, the higher the translation overhead.\n\na promising solution is to only save memory from cold (i.e.,less recently accessed) pages without saving memory from hot (i.e., more recently accessed) pages (e.g., keep the hot pages uncompressed).\n\ntwo challenges:\n\n 1. after a compressed cold page becomes hot again, migrating the page to a full 4kb dram location still adds another level (albeit page-level, instead of block-level) of translation on top of existing virtual address translation. solution we propose compressing page table blocks in hardware to opportunistically embed compression translations into them in a software-transparent manner to effectively prefetch compression translations during a page walk, instead of serially fetching them after the walk.\n\nfirst, cte misses typically occur after pte misses in tlb because ctes, especially the page-level ctes under an os-inspired approach, have similar translation reach as ptes. second, we observe page table blocks (ptbs) are highly compressible because adjacent virtual pages often have identical status bits and the most significant bits in physical page numbers are unused. as such, to hide the latency of cte misses, tmcc transparently compresses each ptb in hardware to free up space in the ptb to embed the ctes of the 4kb pages (i.e., either data pages or page table pages) that the ptb points to; this enables each page walk to also prefetch the matching cte required for fetching from dram either the end data or the next ptb.\n\n 2. only compressing cold data require compressing them very aggressively to achieve high overall memory savings. solution we perform a large design space exploration across many hardware configurations and diverse workloads to derive and implement in hdl an asic deflate that is specialized for memory.\n\nprior new hardware managed translation entries as compression translation entries (ctes), as they are similar to os page table entries (ptes). prior works cache ctes in the memory controller via a dedicated cte cache, similar to the tlbs dedicated to caching ptes.\n\nlet hardware take on an os-inspired approach: only save memory from cold (i.e., less recently accessed) pages without saving memory from hot (i.e., recently accessed) pages (e.g., keep the hot pages uncompressed), like os memory compression. solves the problem of\n\n 1. translation overheads that large and/or irregular workloads suffer from high pte miss under hardware memory compression.\n 2. fine-grained address translation\n\naccesses to a compressed virtual page in ml2 incurs a page fault to wake up os to pop a free physical page from ml1’s free list and migrate the virtual page to the page.\n\nml2 also keeps many free lists, each tracking sub-physical pages of a different size, to store any compressed virtual page in a practically ideal matching sub-physical page.\n\nml2 gracefully grows and shrinks relative to ml1 with increasing and decreasing memory usage. when everything can fit in memory uncompressed, ml2 shrinks to zero bytes in physical size so ml1 can have every physical page. specifically, when ml2’s free list(s) get large (e.g., due to reducing memory usage), ml2 donates free physical pages from its free list(s) to ml1. os also grows ml1 free list, when it gets small, by migrating cold virtual pages to ml2. migrating a virtual page to ml2 shrinks one of ml2’s free lists. if a ml2 free list gets empty, ml1 gives cold victim physical pages to ml2 (i.e., track them in ml2 instead of ml1), so that ml2 can compress the virtual pages currently in the victim pages to free space in the victims to grow ml2’s free list(s).\n\n\n\nkey idea: based on our observations, we propose transparently compressing each ptb in hardware to free up space in the ptb to embed the ctes of the 4kb pages (i.e., either data pages or page table pages) that the ptb points to; this enables each page walk access to also prefetch the matching cte required either for the next page walk access (i.e., to the next ptb) or for the actual data (or instruction) access after the walk.\n\n\n\na practical challenge is that after migrating a page (e.g., from ml1 to ml2 after the page becomes cold), the corresponding cte embedded in the page’s ptb should be updated. however, hardware has no easy way to use the ppn of the migrating page to find/access the page’s ptb(s). tmcc addresses this challenge by lazily updating the cte in the ptb later around when the ptb is naturally accessed by the page walker, instead of updating it at the time of migrating the page. however, this means that for the first page walker access to the ptb after migrating one of the pages that the ptb points to, the corresponding cte is out-of-date. to ensure correctness, tmcc also accesses the correct cte in dram (or in cte cache) in parallel to verify the correctness of the dram access. figure 8 compares and contrasts how tmcc serves an llc miss that also misses in cte cache with the baseline approach. figure 9 provides n architectural overview of tmcc.\n\n\n\n\n\n\n\nmy comment when os access compressed page, that page is migrated from ml2 to ml1. hardware cannot update the ptb easily. thus it utilizes lazily update. during the page table walk, it will buffer the piggybacked cte into cte buffer. and when data miss req happens, l2 extracts the ppn from the received request to lookup the cte buffer to obtain the cte for mc to translate the ppn.\n\n----------------------------------------\n\n# 3. touche: towards ideal and efficient cache compression by mitigating tag area overheads\n\nthe first component, called the “signature” (sign) engine, creates shortened signatures from the tag addresses of compressed blocks. due to this, the sign engine can store multiple signatures in each tag entry. on a cache access, the physical cacheline is accessed only if there is a signature match (which has a negligible probability of false positive). the second component, called the “tag appended data” (tada) mechanism, stores the full tag addresses with data. tada enables touch´e to detect false positive signature matches by ensuring that the actual tag address is available for comparison. the third component, called the “superblock marker” (smark) mechanism, uses a unique marker in the tag entry to indicate the occurrence of compressed cache blocks from neighboring physical addresses in the same cacheline.\n\n\n\non average, 55% of the blocks can be compressed to less than 48 bytes in size. furthermore, 17% of the lines can be compressed to be less than 16 bytes in size. therefore, several workloads tend to have blocks with low entropy and can benefit from compression.\n\n\n\n\n\n\n\nfor instance, a cacheline cannot be marked both invalid and dirty at the same time. the tag manager uses this unused state to flag cachelines that contains compressed blocks. thereafter, for a cacheline that stores compressed blocks, the 1st and 2nd bits of the tag address encodes its valid bit and dirty bit.\n\n\n\n\n\nthe tag manager then retrieves the 16-bit marker from the smark mechanism. it then informs the sign engine to ignore the last 2-bits (corresponding to four neighboring addresses) of the full tag address to generate a unique 9-bit signature.\n\nthis smark generate a random 16-bit marker and concated with signature. since non-superblocks use 3 signature to identify blks, it should also use a tag to compare not just 0.\n\nif this paper doest not support superblock 4 compressed blks in a super block, it can only store 3* 16b compressed block or 48b + 64b block, due to extra real tag stored in data, 43bit for each data.",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"memory-ecc",frontmatter:{title:"memory-ecc",date:"2023-05-31T17:24:24.000Z",permalink:"/pages/f07695/"},regularPath:"/01.hbm/06.memory%20ecc.html",relativePath:"01.hbm/06.memory ecc.md",key:"v-171f66aa",path:"/pages/f07695/",headersStr:null,content:"Ecc length for different length of data.\n\nhttps://perswww.kuleuven.be/~u0068190/Onderwijs/Extra_info/Hamming%20ecc.pdf\n\n\n\nhttp://www.sxlist.com/techref/method/error/hamming.htm\n\n 1. 4-bit data path requires 3 bits for ECC (8 entry table) (75% increase in size)\n 2. 8-bit data path requires 5 bits for ECC or 1 bit for parity.\n 3. 11-bit data path requires 4 bits for ECC (16 entry table)\n 4. 16-bit data path requires 6 bit for ECC or 2 bits for parity\n 5. 32-bit data path requires 7 bits for ECC or 4 bits for parity (21.8% increase in size)\n 6. 64-bit (8 byte) data path requires 8 bits for ECC and parity (12.5% increase in size)\n 7. 128-bit (16 bytes) data path requires 9 bits for ECC or 16 bits for parity (7% increase in size\n\nUse ECC bit for compression CRAM: Efficient Hardware-Based Memory Compression for Bandwidth Enhancement\n\nEnabling Technologies for Memory Compression: Metadata, Mapping, and Prediction\n\nUse ECC bit for DRAM Cache To Update or Not To Update?: Bandwidth-Efficient Intelligent Replacement Policies for DRAM Caches TicToc: Enabling Bandwidth-Efficient DRAM Caching for both Hits and Misses in Hybrid Memory Systems",normalizedContent:"ecc length for different length of data.\n\nhttps://perswww.kuleuven.be/~u0068190/onderwijs/extra_info/hamming%20ecc.pdf\n\n\n\nhttp://www.sxlist.com/techref/method/error/hamming.htm\n\n 1. 4-bit data path requires 3 bits for ecc (8 entry table) (75% increase in size)\n 2. 8-bit data path requires 5 bits for ecc or 1 bit for parity.\n 3. 11-bit data path requires 4 bits for ecc (16 entry table)\n 4. 16-bit data path requires 6 bit for ecc or 2 bits for parity\n 5. 32-bit data path requires 7 bits for ecc or 4 bits for parity (21.8% increase in size)\n 6. 64-bit (8 byte) data path requires 8 bits for ecc and parity (12.5% increase in size)\n 7. 128-bit (16 bytes) data path requires 9 bits for ecc or 16 bits for parity (7% increase in size\n\nuse ecc bit for compression cram: efficient hardware-based memory compression for bandwidth enhancement\n\nenabling technologies for memory compression: metadata, mapping, and prediction\n\nuse ecc bit for dram cache to update or not to update?: bandwidth-efficient intelligent replacement policies for dram caches tictoc: enabling bandwidth-efficient dram caching for both hits and misses in hybrid memory systems",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"hbm-latency",frontmatter:{title:"hbm-latency",date:"2023-05-31T17:24:24.000Z",permalink:"/pages/f07696/"},regularPath:"/01.hbm/07.hbm-latency.html",relativePath:"01.hbm/07.hbm-latency.md",key:"v-788071c5",path:"/pages/f07696/",headersStr:null,content:" 1. HBM latency\n\nIn flat mode on Knight’s Landing, MCDRAM latency is around 176 ns, while a DDR4 access has a latency of 147 ns.\n\nCited from blog: Knight’s Landing: Atom with AVX-512.\n\nhttps://chipsandcheese.com/2022/12/08/knights-landing-atom-with-avx-512/\n\nWe report 154.0 ns latency for HBM and 130.4 ns for DRAM.\n\nPaper: Exploring the Performance Benefit of Hybrid Memory System on HPC Environments.\n\n 2. The latency and bandwidth comparison of HBM and DRAM Paper: [UPC Phd Thesis] Memory Bandwidth and Latency in HPC: System Requirements and Performance Impact.",normalizedContent:" 1. hbm latency\n\nin flat mode on knight’s landing, mcdram latency is around 176 ns, while a ddr4 access has a latency of 147 ns.\n\ncited from blog: knight’s landing: atom with avx-512.\n\nhttps://chipsandcheese.com/2022/12/08/knights-landing-atom-with-avx-512/\n\nwe report 154.0 ns latency for hbm and 130.4 ns for dram.\n\npaper: exploring the performance benefit of hybrid memory system on hpc environments.\n\n 2. the latency and bandwidth comparison of hbm and dram paper: [upc phd thesis] memory bandwidth and latency in hpc: system requirements and performance impact.",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"compression",frontmatter:{title:"compression",date:"2023-12-20T17:24:24.000Z",permalink:"/pages/f07698/"},regularPath:"/01.hbm/08.compression.html",relativePath:"01.hbm/08.compression.md",key:"v-25995465",path:"/pages/f07698/",headersStr:null,content:" 1. Unified Compilation for Lossless Compression and Sparse Computing\n\ncompute in compressed data && compression on sparse matrix\n\n 2. ",normalizedContent:" 1. unified compilation for lossless compression and sparse computing\n\ncompute in compressed data && compression on sparse matrix\n\n 2. ",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"llvm front end",frontmatter:{title:"llvm front end",date:"2023-11-21T00:00:00.000Z",permalink:"/pages/000001/"},regularPath:"/02.compiler/01.llvm_frontend.html",relativePath:"02.compiler/01.llvm_frontend.md",key:"v-f3b213e2",path:"/pages/000001/",headersStr:null,content:"llvm front end demo",normalizedContent:"llvm front end demo",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"GPU WARP Scheduler",frontmatter:{title:"GPU WARP Scheduler",date:"2023-09-20T00:00:00.000Z",permalink:"/pages/2476ae/"},regularPath:"/03.gpu/02.warp_execution.html",relativePath:"03.gpu/02.warp_execution.md",key:"v-b25c491a",path:"/pages/2476ae/",headers:[{level:3,title:"1. Thread Block Compaction for Efficient SIMT Control Flow",slug:"_1-thread-block-compaction-for-efficient-simt-control-flow",normalizedTitle:"1. thread block compaction for efficient simt control flow",charIndex:1}],headersStr:"1. Thread Block Compaction for Efficient SIMT Control Flow",content:" 1. Thread Block Compaction for Efficient SIMT Control Flow\n\n----------------------------------------\n\n\n# 1. Thread Block Compaction for Efficient SIMT Control Flow",normalizedContent:" 1. thread block compaction for efficient simt control flow\n\n----------------------------------------\n\n\n# 1. thread block compaction for efficient simt control flow",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"operand-collector",frontmatter:{title:"operand-collector",date:"2022-07-18T17:25:49.000Z",permalink:"/pages/cc7034/"},regularPath:"/03.gpu/01.operand_collector.html",relativePath:"03.gpu/01.operand_collector.md",key:"v-6ffd4505",path:"/pages/cc7034/",headersStr:null,content:"Warped-Compression: Enabling Power Efficient GPUs through Register Compression\n\neach register bank entry can store up to four 32-bit register values. All thread registers in a warp are statically allocated on consecutive banks with the same entry index. Therefore, to read one operand of a warp instruction,a buffering unit called operand collector needs to access up to eight register banks with the same index within each bank. While operands from different banks may be concurrently read, operands that access the same bank lead to bank conflicts.\n\nCORF: Coalescing Operand Register File for GPUs\n\nFigure 1 shows our baseline register file organization for the Fermi generation of Nvidia GPUs. It has a register file size of 128 KB per SM split across four banks. A bank is made up of 8 sub-banks that are 128 bits wide each. All 32 registers belonging to the 32 threads in the same warp are statically allocated to consecutive sub-banks (in a single bank) with the same entry index. Thus, a full register for all the threads within a warp can be striped using one entry of one bank, allowing it to be operated on in a single cycle. Each bank can store up to 256 warp-registers.\n\nSummary They all assume that 128bit entry in each bank will supply 4 register to 4 thread in 32 thread per swap.\n\nWarped-Compression assumes that 8 bank will supply 32 registers for a warp. CORF assumes that 8 subbank in each bank will supply 32 registers for a warp.",normalizedContent:"warped-compression: enabling power efficient gpus through register compression\n\neach register bank entry can store up to four 32-bit register values. all thread registers in a warp are statically allocated on consecutive banks with the same entry index. therefore, to read one operand of a warp instruction,a buffering unit called operand collector needs to access up to eight register banks with the same index within each bank. while operands from different banks may be concurrently read, operands that access the same bank lead to bank conflicts.\n\ncorf: coalescing operand register file for gpus\n\nfigure 1 shows our baseline register file organization for the fermi generation of nvidia gpus. it has a register file size of 128 kb per sm split across four banks. a bank is made up of 8 sub-banks that are 128 bits wide each. all 32 registers belonging to the 32 threads in the same warp are statically allocated to consecutive sub-banks (in a single bank) with the same entry index. thus, a full register for all the threads within a warp can be striped using one entry of one bank, allowing it to be operated on in a single cycle. each bank can store up to 256 warp-registers.\n\nsummary they all assume that 128bit entry in each bank will supply 4 register to 4 thread in 32 thread per swap.\n\nwarped-compression assumes that 8 bank will supply 32 registers for a warp. corf assumes that 8 subbank in each bank will supply 32 registers for a warp.",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"Precision Exception",frontmatter:{title:"Precision Exception",date:"2023-11-11T00:00:00.000Z",permalink:"/pages/14769f/"},regularPath:"/03.gpu/03.Precise%20Exception.html",relativePath:"03.gpu/03.Precise Exception.md",key:"v-f96426b0",path:"/pages/14769f/",headers:[{level:3,title:"1. Supporting Virtual Memory in GPGPU without Supporting Precise Exception [2012]",slug:"_1-supporting-virtual-memory-in-gpgpu-without-supporting-precise-exception-2012",normalizedTitle:"1. supporting virtual memory in gpgpu without supporting precise exception [2012]",charIndex:489},{level:3,title:"6. Efficient Exception Handling Support for GPUs [2017]",slug:"_6-efficient-exception-handling-support-for-gpus-2017",normalizedTitle:"6. efficient exception handling support for gpus [2017]",charIndex:2960}],headersStr:"1. Supporting Virtual Memory in GPGPU without Supporting Precise Exception [2012] 6. Efficient Exception Handling Support for GPUs [2017]",content:" 1. Supporting Virtual Memory in GPGPU without Supporting Precise Exception 2012\n 2. Idempotent Processor Architecture 2011\n 3. iGPU: Exception Support and Speculative Execution on GPUs 2012\n 4. Implementing Virtual Memory in a Vector Processor with Software Restart Markers 2006 Not Read\n 5. Imprecise Store Exceptions 2023 ISCA\n 6. Efficient Exception Handling Support for GPUs 2017\n 7. Simple Out of Order Core for GPGPUs\n 8. Other Papers.\n\n----------------------------------------\n\n\n# 1. Supporting Virtual Memory in GPGPU without Supporting Precise Exception [2012]\n\n👍\n\nIntroduction: GPU is designed for grahics. Supporting precise exceptions is not needed at all and it is extremely expensive due to the high number of registers. Other Designs:\n\n 1. Software restart Remarker Implementing virtual memory in a vector processor with software restart markers.[4] 2006 Reducing Exception Management Overhead with Software Restart Markers 2008\n 2. Idempotent Idempotent processor architecture [2] 2011 igpu: Exception support and speculative execution on gpus. [3] 2012\n\na) set start_maker set start_marker indicates a place where a program can be restarted after a page fault exception handler is serviced.\n\nb) LD.pfchk An LD.pfchk instruction sets pfbit, when it generates a page fault. The pfbit registers behave like predicate registers in IA-64. Instructions that can potentially change program’s states are predicated with pfbit.\n\nc) sw_call sw_call is composed of barrier and call instructions. When a processor fetches an sw_call instruction, it enforces an execution barrier.\n\nInstructions after sw_call can be fetched/renamed, but none of the instructions will be executed. call instructions invoke page fault handler. Implementing this execution barrier is very easy, but it reduces the benefit of a fully out-of-order scheduling processor.\n\nLD.pfchk will set pfbits. Instructions that can potentially change program's state are predicated with pfbit. Similar to idempotent processors, instructions that can be safely reexecuted without changing the program’s results do not need to be predicated. If all instructions are predicated, those instructions cannot be executed until the load instruction is completed, thereby degrading performance significantly.\n\n 1. Not all load/store instruction will be set as LD.pfck. Compiler's job to distinguish Static, Malloc, Large Arrays, Stack Operations, Pointers, and so on\n 2. Only those instructions that can safely reexecuted can be predicated.\n\n/* original C-code */\nfor (int ii=0; ii<N; ii++)\na[ii] = b[ii]*2;\n/* new code */\nfor (int ii=0; ii<N; ii++) {\nif (!(ii%kk)) {\n// kk = page size%(size of(a[0]))\npfchk(&(a[0])+ii*kk));\npfchk(&(b[0])+ii*kk));\n}\na[ii] = b[ii]*2;\n}\nvoid pfchk(int addr) {\n/* use intrinsics to insert assembly code */\nset start_marker;\nLD.pfchk(addr);\n(pfbit) sw_call(start_marker);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n----------------------------------------\n\n\n# 6. Efficient Exception Handling Support for GPUs [2017]\n\n👍 👍 👍 👍\n\nThis paper summerize [1] [2] [3] [4] and discuss why altough GPU solves the problem of dependency, it still meets the problem of RAW Hazard on replay\n\n\n\nIn short, since R4 has been read by C, D can issue and might overwrite R4 before C is done. Thus if we resume from C, C might read the value of new R4, which means hazard.\n\nIt propose three method to solve this:\n\n 1. Warp Disable\n\n\n\n 2. Replay Queue\n\n\n\n 3. Operand Log\n\n\n\nThis is a good paper, that deserves reading throughly. 👏",normalizedContent:" 1. supporting virtual memory in gpgpu without supporting precise exception 2012\n 2. idempotent processor architecture 2011\n 3. igpu: exception support and speculative execution on gpus 2012\n 4. implementing virtual memory in a vector processor with software restart markers 2006 not read\n 5. imprecise store exceptions 2023 isca\n 6. efficient exception handling support for gpus 2017\n 7. simple out of order core for gpgpus\n 8. other papers.\n\n----------------------------------------\n\n\n# 1. supporting virtual memory in gpgpu without supporting precise exception [2012]\n\n👍\n\nintroduction: gpu is designed for grahics. supporting precise exceptions is not needed at all and it is extremely expensive due to the high number of registers. other designs:\n\n 1. software restart remarker implementing virtual memory in a vector processor with software restart markers.[4] 2006 reducing exception management overhead with software restart markers 2008\n 2. idempotent idempotent processor architecture [2] 2011 igpu: exception support and speculative execution on gpus. [3] 2012\n\na) set start_maker set start_marker indicates a place where a program can be restarted after a page fault exception handler is serviced.\n\nb) ld.pfchk an ld.pfchk instruction sets pfbit, when it generates a page fault. the pfbit registers behave like predicate registers in ia-64. instructions that can potentially change program’s states are predicated with pfbit.\n\nc) sw_call sw_call is composed of barrier and call instructions. when a processor fetches an sw_call instruction, it enforces an execution barrier.\n\ninstructions after sw_call can be fetched/renamed, but none of the instructions will be executed. call instructions invoke page fault handler. implementing this execution barrier is very easy, but it reduces the benefit of a fully out-of-order scheduling processor.\n\nld.pfchk will set pfbits. instructions that can potentially change program's state are predicated with pfbit. similar to idempotent processors, instructions that can be safely reexecuted without changing the program’s results do not need to be predicated. if all instructions are predicated, those instructions cannot be executed until the load instruction is completed, thereby degrading performance significantly.\n\n 1. not all load/store instruction will be set as ld.pfck. compiler's job to distinguish static, malloc, large arrays, stack operations, pointers, and so on\n 2. only those instructions that can safely reexecuted can be predicated.\n\n/* original c-code */\nfor (int ii=0; ii<n; ii++)\na[ii] = b[ii]*2;\n/* new code */\nfor (int ii=0; ii<n; ii++) {\nif (!(ii%kk)) {\n// kk = page size%(size of(a[0]))\npfchk(&(a[0])+ii*kk));\npfchk(&(b[0])+ii*kk));\n}\na[ii] = b[ii]*2;\n}\nvoid pfchk(int addr) {\n/* use intrinsics to insert assembly code */\nset start_marker;\nld.pfchk(addr);\n(pfbit) sw_call(start_marker);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n----------------------------------------\n\n\n# 6. efficient exception handling support for gpus [2017]\n\n👍 👍 👍 👍\n\nthis paper summerize [1] [2] [3] [4] and discuss why altough gpu solves the problem of dependency, it still meets the problem of raw hazard on replay\n\n\n\nin short, since r4 has been read by c, d can issue and might overwrite r4 before c is done. thus if we resume from c, c might read the value of new r4, which means hazard.\n\nit propose three method to solve this:\n\n 1. warp disable\n\n\n\n 2. replay queue\n\n\n\n 3. operand log\n\n\n\nthis is a good paper, that deserves reading throughly. 👏",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"Unified Memory Paper List",frontmatter:{title:"Unified Memory Paper List",date:"2023-11-11T00:00:00.000Z",permalink:"/pages/44771e/"},regularPath:"/03.gpu/04.Unified_Memory.html",relativePath:"03.gpu/04.Unified_Memory.md",key:"v-5849f946",path:"/pages/44771e/",headers:[{level:3,title:"1. Holistic Performance Analysis and Optimization of Unified Virtual Holistic Performance Analysis and Optimization of Unified Virtual Memory",slug:"_1-holistic-performance-analysis-and-optimization-of-unified-virtual-holistic-performance-analysis-and-optimization-of-unified-virtual-memory",normalizedTitle:"1. holistic performance analysis and optimization of unified virtual holistic performance analysis and optimization of unified virtual memory",charIndex:3366},{level:3,title:"3. Oversubscribing GPU Unified Virtual Memory: Implications and Suggestions",slug:"_3-oversubscribing-gpu-unified-virtual-memory-implications-and-suggestions",normalizedTitle:"3. oversubscribing gpu unified virtual memory: implications and suggestions",charIndex:3653},{level:3,title:"4. Performance Evaluation of Advanced Features in CUDA Unified Memory",slug:"_4-performance-evaluation-of-advanced-features-in-cuda-unified-memory",normalizedTitle:"4. performance evaluation of advanced features in cuda unified memory",charIndex:5932},{level:3,title:"5. Interplay between Hardware Prefetcher and Page Eviction Policy in CPU-GPU Unified Virtual Memory",slug:"_5-interplay-between-hardware-prefetcher-and-page-eviction-policy-in-cpu-gpu-unified-virtual-memory",normalizedTitle:"5. interplay between hardware prefetcher and page eviction policy in cpu-gpu unified virtual memory",charIndex:9455},{level:3,title:"7. Batch-Aware Unified Memory Management in GPUs for Irregular Workloads 2020",slug:"_7-batch-aware-unified-memory-management-in-gpus-for-irregular-workloads-2020",normalizedTitle:"7. batch-aware unified memory management in gpus for irregular workloads 2020",charIndex:11188},{level:3,title:"10. Machine Learning Guided Optimal Use of GPU Unified Memory 2019",slug:"_10-machine-learning-guided-optimal-use-of-gpu-unified-memory-2019",normalizedTitle:"10. machine learning guided optimal use of gpu unified memory 2019",charIndex:18197}],headersStr:"1. Holistic Performance Analysis and Optimization of Unified Virtual Holistic Performance Analysis and Optimization of Unified Virtual Memory 3. Oversubscribing GPU Unified Virtual Memory: Implications and Suggestions 4. Performance Evaluation of Advanced Features in CUDA Unified Memory 5. Interplay between Hardware Prefetcher and Page Eviction Policy in CPU-GPU Unified Virtual Memory 7. Batch-Aware Unified Memory Management in GPUs for Irregular Workloads 2020 10. Machine Learning Guided Optimal Use of GPU Unified Memory 2019",content:' 1.  Holistic Performance Analysis and Optimization of Unified Virtual Holistic Performance Analysis and Optimization of Unified Virtual Memory\n 2.  In-Depth Analyses of Unified Virtual Memory System for GPU Accelerated Computing\n 3.  Oversubscribing GPU Unified Virtual Memory: Implications and Suggestions\n 4.  Performance Evaluation of Advanced Features in CUDA Unified Memory\n 5.  Interplay between Hardware Prefetcher and Page Eviction Policy in CPU-GPU Unified Virtual Memory\n 6.  Unified Memory: GPGPU-Sim/UVM Smart Integration\n 7.  Batch-Aware Unified Memory Management in GPUs for Irregular Workloads\n 8.  An Intelligent Framework for Oversubscription Management in CPU-GPU Unified Memory\n 9.  Architectural Support for Address Translation on GPUs Designing Memory Management Units for CPU/GPUs with Unified Address Spaces\n 10. Machine Learning Guided Optimal Use of GPU Unified Memory\n 11. Towards High Performance Paged Memory for GPUs\n 12. [Virtualization] Virtual Thread: Maximizing Thread-Level Parallelism beyond GPU Scheduling Limit.\n 13. [Virtualization] A Survey of GPU Multitasking Methods Supported by Hardware Architecture\n\n----------------------------------------\n\nUnified Memory History copied from Evolution of Nvidia GPU from microarchitectures Pascal to Ampere\n\nCUDA 4 introduced UVA (Unified Virtual Addressing) to provide a single virtual memory address space for both CPU and GPU memory and enable pointers to be accessed from GPU code no matter where in the system they reside. UVA enables Zero-Copy memory, a pinned CPU memory accessible by GPU code directly, over PCIe, without the need for memory copy. This provides some of the convince of Unified Memory, but at the cost of worse performance, because GPU always accesses it with PCIe’s low bandwidth and high latency.[1]\n\nLater, CUDA 6 introduced Unified Memory, which creates a pool of managed memory that programs running on the CPU and GPU can access without explicit data movement. However, only when CPU and GPU processes are not running together because of the limitation of the Kepler and Maxwell GPU microarchitecture. Also, the Unified Memory address space was limited to the size of the GPU memory.[1, 3]\n\nCUDA 8 and Pascal microarchitectures improve Unified Memory functionality by adding 49-bit virtual addressing and page faulting capability. The larger 49-bit virtual addresses are sufficient to enable GPUs to access the entire system memory plus the memory of all GPUs in the system. Because of the memory page faulting functionality, the CUDA system software does not need to synchronize all managed memory allocations to the GPU before each kernel lunch. Instead, when a thread running on GPU faults on non-resident memory access(demanding page), it stalls until the page can be migrated and the page table updated. Alternatively, the page may be mapped for remote access over PCIe or NVLink interconnects.[1, 3, 6]\n\nThese new features of Unified Memory enable oversubscription of memory, which means that application running on a GPU can use data sets larger than ten their device memory.[1] While the Unified Memory model makes GPU programming more convenient, it comes at a cost; handling page faults and page migrations can be expensive. CUDA 8 addresses this issue with features like prefetch and memory advice.\n\n----------------------------------------\n\n\n# 1. Holistic Performance Analysis and Optimization of Unified Virtual Holistic Performance Analysis and Optimization of Unified Virtual Memory\n\nSame author with In-Depth Analyses of Unified Virtual Memory System for GPU Accelerated Computing\n\n----------------------------------------\n\n\n# 3. Oversubscribing GPU Unified Virtual Memory: Implications and Suggestions\n\nUVM supports memory oversubscription, giving GPU programs the ability to use a larger amount of memory than the physical memory, without worrying about the problem of memory shortage.\n\nAdvanced optimization techniques, mainly prefetching and memory usage hints [1], can be used to fine-tune the performance of UVM applications, mitigating the overheads caused by UVM.\n\n\n\n2）Prefetching and Hints Prefetching and UVM hints are the major approaches provided by CUDA, with the hope that page faults and memory thrashing could be prevented by fine-tuning the behavior of UVM at runtime.\n\nBy calling cudaMemPrefetchAsync (PF), a memory block could be prefetched to GPU. UVM hints provide informed decisions on page handling by indicating the access patterns of data.\n\nChanging UVM hints is done by invoking cudaMemAdvise with one of the following policies：\n\n• cudaMemAdviseSetAccessedBy (AB) implies that the device keeps a direct mapping in its page table. When the data is migrated, the mapping is re-established. • cudaMemAdviseSetPreferredLocation (PL) pins the data and prevents the page to be migrated, which is useful when the page is mainly accessed on one side. • cudaMemAdviseSetReadMostly (RM) indicates the data region is read-intensive. It creates a read-only copy of the page on the faulting side, allowing on current access on both sides.\n\nOnly one policy (AB, PL, or RM) could be specified for each memory block, but each policy can be used along with prefetching.\n\nSuggestions: To ensure performance under all oversubscription conditions, programmer needs to choose the UVM hints dynamically based on the application’s memory usage and available GPU memory. As a prerequisite, the size of the FALL pages needs to be estimated or measured by experiment. Before kernel launch, the program should first check the size of available GPU memory (e.g. via the cudaMemGetInfo API). If no oversubscription will happen, or the available memory is larger than the size of FALL pages, the programmer could set hints based on the conclusions provided by related researches [24]. Otherwise, based on our findings, applying the hint AB is a preferable choice.\n\n----------------------------------------\n\n\n# 4. Performance Evaluation of Advanced Features in CUDA Unified Memory\n\nCUDA has introduced new features for optimizing the data migration on UM, i.e., memory advises and prefetch. Instead of solely relying on page faults, the memory advises feature allows the programmer to provide data access pattern for each memory object so that the runtime can optimize migration decisions. The prefetch proactively triggers asynchronous data migration to GPU before the data is accessed, which reduces page faults and, consequently, the overhead in handling page faults.\n\n-Using memory advises improves application performance in oversubscription execution on the Intel platform and in-memory executions on the IBM platform.\n\n-UM prefetch provides a significant performance improvement on the Intel-Volta/Pascal-PCI-E based systems while it does not show a performance improvement on the Power9-Volta-NVLink based system\n\nUM was first introduced in CUDA 6.0 [21]. Only until the recent Nvidia Pascal microarchitecture that has hardware support for page faults.\n\n\n\n• cudaMemAdviseSetAccessedBy establishes a direct mapping of data to a specified device. Figure 2c illustrates an example of a physical page on GPU being remotely access from the host. When cudaMemAdviseSetPreferredLocation is applied, CUDA runtime tries to build a direct mapping to the page to avoid data migration so that the destination can access data remotely. Differently from cudaMemAdviseSetPreferredLocation, this cudaMemAdviseSetAccessedBy does not try to pin pages on a specific device; instead, its main effect is to establish mapping on the remote device. This advice takes effect on the creation of the memory pages. The mapping will be re-established after the pages are migrated.\n\n• cudaMemAdviseSetPreferredLocation sets the preferred physical location of pages. This advice pins a page and prevents it from migrating to other memories. Figure 2b illustrates a page preferred on the host side, and GPU uses remote mapping to access the page. This advice established a direct (remote) mapping to the memory page. When accessing the page remotely, data is fetched through the remote memory instead of generating a page fault. If the underlying hardware does not support the remote mapping, the page will be migrated as in the standard UM. cudaMemAdviseSetPreferredLocation is useful for applications with little data sharing between CPU and GPU, i.e., part of the application is executed completely on the GPU, and the rest of the application executes on the host. Data that is being used mostly by the GPU can be pinned to the GPU with the advice, avoiding memory thrashing.\n\n• cudaMemAdviseSetReadMostly implies a read-intensive data region. In the basic UM, accessing a page on a remote side triggers page migration. However, with cudaMemAdviseSetReadMostly, a read-only duplicate of the page will be created on the faulting side, which prevents page faults and data migration in the future. Figure 2a illustrates an example, where the second access (step 5) has no page fault and is local access. This mechanism, however, results in a high overhead if there is any update to this memory region because all copies of the corresponding page will be invalidated to preserve consistency between different copies. Thus, this advice is often used in read-only data structures, such as lookup tables and application parameters.\n\nIn general, we found both memory advises and prefetch to be simple and effective.\n\n----------------------------------------\n\n\n# 5. Interplay between Hardware Prefetcher and Page Eviction Policy in CPU-GPU Unified Virtual Memory\n\nCons in traditional GPU: Complicated asynchronous user-directed constructs to overlap data migration and kernel execution are used to address this issue. The second challenge is memory over-subscription. When the working set of the GPU kernel cannot fit in the device memory, the programmers have to painstakingly redefine the data structures and tile the data to transfer back and forth in chunks.\n\nThis flow is inspired by -> 11. Towards High Performance Paged Memory for GPU.\n\n1 Scheduled threads generate global memory accesses.\n\n2 Each SM has its own load/store unit. Every load/store unit has its own TLB. Load/store unit performs a TLB look up to find whether the translation for the issued memory access is cached in TLB or not. A TLB miss is relayed to the GMMU.\n\n3 The GMMU walks through the page table looking for a PTE corresponding to the requested page with valid flag set. A far-fault occurs if there is no PTE for the requested page or the valid flag is not set. Then the far-fault is registered in the Far-fault Miss Status Handling Registers (MSHRs).\n\n4 The page is scheduled for transfer over CPU-GPU PCI-e interconnect.\n\n5 A 4KB page is allocated on demand and data is migrated from host to device memory.\n\n6 The MSHRs are consulted to notify the corresponding load/store unit and the memory access is replayed. A new PTE entry is added to the page table with valid\n\n\n\nThis paper introduces random, sequential and tree-based Neighborhood prefetcher in detail.\n\nAnd come up with pre-eviction for tree-based Neighborhood, different from LRU eviction used in Nvidia.\n\n\n\n----------------------------------------\n\n\n# 7. Batch-Aware Unified Memory Management in GPUs for Irregular Workloads 2020\n\nPropose:\n\n(1) increases the batch size (i.e., the number of page faults handled together), thereby amortizing the GPU runtime fault handling time, and reduces the number of batches by supporting CPU-like thread block context switching\n\nThread Oversubscription (TO), a CPU-like thread block context switching technique, to effectively amortize the GPU runtime fault handling time by increasing the batch size (i.e., the number of page faults handled together).\n\n(2) takes page eviction off the critical path with no hardware changes by overlapping evictions with CPU-to-GPU page migrations. Unobtrusive Eviction (UE) to take GPU page evictions off the critical path with no hardware changes based on the idea of overlapping page evictions with CPU-to-GPU page migrations.\n\nPrior work reports that page fault handling latency ranges from 20µs to 50µs [53]. We find that these numbers are conservative and can be worse depending on the applications and systems. Unfortunately, this page fault latency, which is in the order of microseconds, cannot be easily hidden even with ample thread-level parallelism (TLP) in GPUs, especially when GPU memory is oversubscribed.\n\n\n\nThe GPU runtime processes a group of GPU page faults together, rather than processing each individual one, in order to amortize the overhead of multiple round-trip latencies over the PCIe bus and to avoid invoking multiple interrupt service routines (ISRs) in the operating system (OS). To efficiently process an excessive number of page faults, the GPU runtime performs a series of operations such as preprocessing all the page faults and inserting page prefetching requests, which takes a significant amount of time (in the range of tens to hundreds of microseconds). Once all the operations (e.g., CPU page table walks for all the page faults, page allocation and eviction scheduling, etc.) are finished, page migrations between the CPU and the GPU begin.\n\nThis page fault handling is expensive because (1) it requires long latency communications between the CPU and GPU over the PCIe bus, and (2) the GPU runtime performs a very expensive fault handling service routine.\n\nTo amortize the overhead, the GPU runtime processes a group of page faults together, which we refer to as batch processing.\n\nWhen a page fault exception is raised by the GPU memory management unit (MMU), the GPU runtime begins to handle the exception, shown in 1.\n\n\n\nFrom this, we conclude that page evictions and new page allocations are serialized in modern GPUs to prevent the new pages from overwriting the evicted pages. Note that an eviction is required on every page fault once the pages resident in the GPU’s memory are at capacity.\n\n\n\nThis preprocessing includes sorting the page faults in ascending order of page addresses (to accelerate the page table walks) and the analysis of page addresses to insert page prefetching requests.1 We refer to the time taken by the GPU runtime to perform a collection of operations to handle many page faults together as GPU runtime fault handling time.\n\nhttps://github.com/acsl-technion/gaia_nvidia/blob/e23e4d926f576c2c4169664b6add89e1368ee849/kernel/nvidia-uvm/uvm8_gpu_replayable_faults.c#L787\n\n// Fault cache preprocessing for fault coalescing\n//\n// This function generates an ordered view of the given fault_cache in which faults are sorted by VA space, fault\n// address (aligned to 4K) and access type "intrusiveness" (atomic - write - read - prefetch). In order to minimize\n// the number of instance_ptr to VA space translations we perform a first sort by instance_ptr.\n//\n// This function returns NV_WARN_MORE_PROCESSING_REQUIRED if a fault buffer flush occurred during instance_ptr\n// translation and executed successfully, or the error code if it failed. NV_OK otherwise.\n//\n// Current scheme:\n// 1) sort by instance_ptr\n// 2) translate all instance_ptrs to VA spaces\n// 3) sort by va_space, fault address (GPU already reports 4K-aligned address) and access type\nstatic NV_STATUS preprocess_fault_batch(uvm_gpu_t *gpu, uvm_fault_service_batch_context_t *batch_context)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\nThe batch processing time is measured to be in the range of 223µs to 553µs with a median of 313µs, of which, GPU runtime fault handling accounts for an average of 46.69% of the time (measured to be in the range of 50µs to 430µs with a median of 140µs).\n\n1）Thread Oversubscription\n\nWe enable thread oversubscription from the beginning of the execution by allocating one additional thread block to each SM ( 1 ). The thread block additionally allocated to each SM is inactive at first. It is important to note that the number of active thread blocks does not exceed that of the baseline, which is determined by the physical resource constraints. Once all of the warps in an active thread block are stalled due to page faults, the thread oversubscription mechanism context switches the active (but stalled) thread block with an inactive thread block ( 2 ). The thread oversubscription mechanism can be detrimental if it causes premature evictions. To prevent this, the GPU runtime monitors the premature eviction rates by periodically estimating the running average of the lifetime of pages by tracking when each page is allocated and evicted. We use the running average as an indicator of premature evictions. If the running average is decreased by a certain threshold, the thread oversubscription mechanism does not allow any more context switching by decrementing (and limiting) the number of concurrently runnable thread blocks ( 3 ).6 Otherwise, thread oversubscription allocates one additional thread block to each SM in an incremental manner.\n\n\n\n 2. Unobstrusive Eviction\n\nWhen a page fault interrupt is raised by the GPU MMU, the top-half interrupt service routine (ISR) responds. It checks whether the number of GPU resident pages is at capacity via the GPU memory status tracker. If so, it sends a preemptive eviction request to the GPU. The rest of the fault handling (e.g., preprocessing of the page faults, CPU-side page table walks) is performed by the bottom-half ISR.\n\n\n\n\n\nWhen the GPU runtime begins a batch’s processing, it checks the GPU memory status. If it is at capacity, it initiates a single page eviction ( 1 ). Once page X is evicted from the GPU’s memory, both CPU and GPU page tables are updated ( 2 ). Unlike the baseline case (Figure 4), page A can be migrated to the GPU memory without any delay ( 3 ). At the same time, page Y can be evicted using bidirectional transfers. Since the data transfer speed from the GPU to CPU memory is faster than the other way around [29], eviction is completely unobtrusive and migrations to the GPU can occur without any delay.\n\nIn short, thread oversubscription increase the batch size by switching in in-active thread block. and unobstrusive eviction avoid the serialization of swap pages between host and device.\n\n----------------------------------------\n\n\n# 10. Machine Learning Guided Optimal Use of GPU Unified Memory 2019\n\nTo enable better performance of UM, CUDA allows developers to give the UM driver additional advice on managing a given GPU memory range via an API function named cudaMemAdvise(const void *, size_t, enum cudaMemoryAdvise, int). The first two parameters of this function accept a pointer to a memory range with a specified size. The memory range should be allocated via cudaMallocManaged or declared via __managed__variables. The third parameter sets the advice for the memory range. The last parameter indicates the associated device’s id, which can indicate either a CPU or GPU device. The details and differences of these four kinds of advice are presented as follows:\n\n• Default: This represents the default on-demand page migration to accessing processor, using the first-touch policy.\n\n• cudaMemAdviseSetReadMostly: This advice is used for the data which is mostly going to be read from and only occasionally written to. The UM driver may create read-only copies of the data in a processor’s memory when that processor accesses it. If this region encounters any write requests, then only the write occurred page will be valid and other copies will be invalid.\n\n• cudaMemAdviseSetPreferredLocation: Once a target device is specified, this device memory can be set as the preferred location for the allocated data. The host memory can also be specified as the preferred location. Setting the preferred location does not cause data to migrate to that location immediately. The policy only guides what will happen when a fault occurs on the specified memory region: if data is already in the preferred location, the faulting processor will try to directly establish a mapping to the region without causing page migration. Otherwise, the data will be migrated to the processor accessing it if the data is not in the preferred location or if a direct mapping cannot be established.\n\n• cudaMemAdviseSetAccessedBy: This advice implies that the data will be accessed by a specified CPU or GPU device. It has no impact on the data location and will not cause data migration. It only causes the data to be always mapped in the specified processor’s page tables, when applicable. The mapping will be accordingly updated if the data is migrated somehow. This advice is useful to indicate that avoiding faults is important for some data, especially when the data is accessed by a GPU within a system containing multiple GPUs with peer-to-peer access enabled.',normalizedContent:' 1.  holistic performance analysis and optimization of unified virtual holistic performance analysis and optimization of unified virtual memory\n 2.  in-depth analyses of unified virtual memory system for gpu accelerated computing\n 3.  oversubscribing gpu unified virtual memory: implications and suggestions\n 4.  performance evaluation of advanced features in cuda unified memory\n 5.  interplay between hardware prefetcher and page eviction policy in cpu-gpu unified virtual memory\n 6.  unified memory: gpgpu-sim/uvm smart integration\n 7.  batch-aware unified memory management in gpus for irregular workloads\n 8.  an intelligent framework for oversubscription management in cpu-gpu unified memory\n 9.  architectural support for address translation on gpus designing memory management units for cpu/gpus with unified address spaces\n 10. machine learning guided optimal use of gpu unified memory\n 11. towards high performance paged memory for gpus\n 12. [virtualization] virtual thread: maximizing thread-level parallelism beyond gpu scheduling limit.\n 13. [virtualization] a survey of gpu multitasking methods supported by hardware architecture\n\n----------------------------------------\n\nunified memory history copied from evolution of nvidia gpu from microarchitectures pascal to ampere\n\ncuda 4 introduced uva (unified virtual addressing) to provide a single virtual memory address space for both cpu and gpu memory and enable pointers to be accessed from gpu code no matter where in the system they reside. uva enables zero-copy memory, a pinned cpu memory accessible by gpu code directly, over pcie, without the need for memory copy. this provides some of the convince of unified memory, but at the cost of worse performance, because gpu always accesses it with pcie’s low bandwidth and high latency.[1]\n\nlater, cuda 6 introduced unified memory, which creates a pool of managed memory that programs running on the cpu and gpu can access without explicit data movement. however, only when cpu and gpu processes are not running together because of the limitation of the kepler and maxwell gpu microarchitecture. also, the unified memory address space was limited to the size of the gpu memory.[1, 3]\n\ncuda 8 and pascal microarchitectures improve unified memory functionality by adding 49-bit virtual addressing and page faulting capability. the larger 49-bit virtual addresses are sufficient to enable gpus to access the entire system memory plus the memory of all gpus in the system. because of the memory page faulting functionality, the cuda system software does not need to synchronize all managed memory allocations to the gpu before each kernel lunch. instead, when a thread running on gpu faults on non-resident memory access(demanding page), it stalls until the page can be migrated and the page table updated. alternatively, the page may be mapped for remote access over pcie or nvlink interconnects.[1, 3, 6]\n\nthese new features of unified memory enable oversubscription of memory, which means that application running on a gpu can use data sets larger than ten their device memory.[1] while the unified memory model makes gpu programming more convenient, it comes at a cost; handling page faults and page migrations can be expensive. cuda 8 addresses this issue with features like prefetch and memory advice.\n\n----------------------------------------\n\n\n# 1. holistic performance analysis and optimization of unified virtual holistic performance analysis and optimization of unified virtual memory\n\nsame author with in-depth analyses of unified virtual memory system for gpu accelerated computing\n\n----------------------------------------\n\n\n# 3. oversubscribing gpu unified virtual memory: implications and suggestions\n\nuvm supports memory oversubscription, giving gpu programs the ability to use a larger amount of memory than the physical memory, without worrying about the problem of memory shortage.\n\nadvanced optimization techniques, mainly prefetching and memory usage hints [1], can be used to fine-tune the performance of uvm applications, mitigating the overheads caused by uvm.\n\n\n\n2）prefetching and hints prefetching and uvm hints are the major approaches provided by cuda, with the hope that page faults and memory thrashing could be prevented by fine-tuning the behavior of uvm at runtime.\n\nby calling cudamemprefetchasync (pf), a memory block could be prefetched to gpu. uvm hints provide informed decisions on page handling by indicating the access patterns of data.\n\nchanging uvm hints is done by invoking cudamemadvise with one of the following policies：\n\n• cudamemadvisesetaccessedby (ab) implies that the device keeps a direct mapping in its page table. when the data is migrated, the mapping is re-established. • cudamemadvisesetpreferredlocation (pl) pins the data and prevents the page to be migrated, which is useful when the page is mainly accessed on one side. • cudamemadvisesetreadmostly (rm) indicates the data region is read-intensive. it creates a read-only copy of the page on the faulting side, allowing on current access on both sides.\n\nonly one policy (ab, pl, or rm) could be specified for each memory block, but each policy can be used along with prefetching.\n\nsuggestions: to ensure performance under all oversubscription conditions, programmer needs to choose the uvm hints dynamically based on the application’s memory usage and available gpu memory. as a prerequisite, the size of the fall pages needs to be estimated or measured by experiment. before kernel launch, the program should first check the size of available gpu memory (e.g. via the cudamemgetinfo api). if no oversubscription will happen, or the available memory is larger than the size of fall pages, the programmer could set hints based on the conclusions provided by related researches [24]. otherwise, based on our findings, applying the hint ab is a preferable choice.\n\n----------------------------------------\n\n\n# 4. performance evaluation of advanced features in cuda unified memory\n\ncuda has introduced new features for optimizing the data migration on um, i.e., memory advises and prefetch. instead of solely relying on page faults, the memory advises feature allows the programmer to provide data access pattern for each memory object so that the runtime can optimize migration decisions. the prefetch proactively triggers asynchronous data migration to gpu before the data is accessed, which reduces page faults and, consequently, the overhead in handling page faults.\n\n-using memory advises improves application performance in oversubscription execution on the intel platform and in-memory executions on the ibm platform.\n\n-um prefetch provides a significant performance improvement on the intel-volta/pascal-pci-e based systems while it does not show a performance improvement on the power9-volta-nvlink based system\n\num was first introduced in cuda 6.0 [21]. only until the recent nvidia pascal microarchitecture that has hardware support for page faults.\n\n\n\n• cudamemadvisesetaccessedby establishes a direct mapping of data to a specified device. figure 2c illustrates an example of a physical page on gpu being remotely access from the host. when cudamemadvisesetpreferredlocation is applied, cuda runtime tries to build a direct mapping to the page to avoid data migration so that the destination can access data remotely. differently from cudamemadvisesetpreferredlocation, this cudamemadvisesetaccessedby does not try to pin pages on a specific device; instead, its main effect is to establish mapping on the remote device. this advice takes effect on the creation of the memory pages. the mapping will be re-established after the pages are migrated.\n\n• cudamemadvisesetpreferredlocation sets the preferred physical location of pages. this advice pins a page and prevents it from migrating to other memories. figure 2b illustrates a page preferred on the host side, and gpu uses remote mapping to access the page. this advice established a direct (remote) mapping to the memory page. when accessing the page remotely, data is fetched through the remote memory instead of generating a page fault. if the underlying hardware does not support the remote mapping, the page will be migrated as in the standard um. cudamemadvisesetpreferredlocation is useful for applications with little data sharing between cpu and gpu, i.e., part of the application is executed completely on the gpu, and the rest of the application executes on the host. data that is being used mostly by the gpu can be pinned to the gpu with the advice, avoiding memory thrashing.\n\n• cudamemadvisesetreadmostly implies a read-intensive data region. in the basic um, accessing a page on a remote side triggers page migration. however, with cudamemadvisesetreadmostly, a read-only duplicate of the page will be created on the faulting side, which prevents page faults and data migration in the future. figure 2a illustrates an example, where the second access (step 5) has no page fault and is local access. this mechanism, however, results in a high overhead if there is any update to this memory region because all copies of the corresponding page will be invalidated to preserve consistency between different copies. thus, this advice is often used in read-only data structures, such as lookup tables and application parameters.\n\nin general, we found both memory advises and prefetch to be simple and effective.\n\n----------------------------------------\n\n\n# 5. interplay between hardware prefetcher and page eviction policy in cpu-gpu unified virtual memory\n\ncons in traditional gpu: complicated asynchronous user-directed constructs to overlap data migration and kernel execution are used to address this issue. the second challenge is memory over-subscription. when the working set of the gpu kernel cannot fit in the device memory, the programmers have to painstakingly redefine the data structures and tile the data to transfer back and forth in chunks.\n\nthis flow is inspired by -> 11. towards high performance paged memory for gpu.\n\n1 scheduled threads generate global memory accesses.\n\n2 each sm has its own load/store unit. every load/store unit has its own tlb. load/store unit performs a tlb look up to find whether the translation for the issued memory access is cached in tlb or not. a tlb miss is relayed to the gmmu.\n\n3 the gmmu walks through the page table looking for a pte corresponding to the requested page with valid flag set. a far-fault occurs if there is no pte for the requested page or the valid flag is not set. then the far-fault is registered in the far-fault miss status handling registers (mshrs).\n\n4 the page is scheduled for transfer over cpu-gpu pci-e interconnect.\n\n5 a 4kb page is allocated on demand and data is migrated from host to device memory.\n\n6 the mshrs are consulted to notify the corresponding load/store unit and the memory access is replayed. a new pte entry is added to the page table with valid\n\n\n\nthis paper introduces random, sequential and tree-based neighborhood prefetcher in detail.\n\nand come up with pre-eviction for tree-based neighborhood, different from lru eviction used in nvidia.\n\n\n\n----------------------------------------\n\n\n# 7. batch-aware unified memory management in gpus for irregular workloads 2020\n\npropose:\n\n(1) increases the batch size (i.e., the number of page faults handled together), thereby amortizing the gpu runtime fault handling time, and reduces the number of batches by supporting cpu-like thread block context switching\n\nthread oversubscription (to), a cpu-like thread block context switching technique, to effectively amortize the gpu runtime fault handling time by increasing the batch size (i.e., the number of page faults handled together).\n\n(2) takes page eviction off the critical path with no hardware changes by overlapping evictions with cpu-to-gpu page migrations. unobtrusive eviction (ue) to take gpu page evictions off the critical path with no hardware changes based on the idea of overlapping page evictions with cpu-to-gpu page migrations.\n\nprior work reports that page fault handling latency ranges from 20µs to 50µs [53]. we find that these numbers are conservative and can be worse depending on the applications and systems. unfortunately, this page fault latency, which is in the order of microseconds, cannot be easily hidden even with ample thread-level parallelism (tlp) in gpus, especially when gpu memory is oversubscribed.\n\n\n\nthe gpu runtime processes a group of gpu page faults together, rather than processing each individual one, in order to amortize the overhead of multiple round-trip latencies over the pcie bus and to avoid invoking multiple interrupt service routines (isrs) in the operating system (os). to efficiently process an excessive number of page faults, the gpu runtime performs a series of operations such as preprocessing all the page faults and inserting page prefetching requests, which takes a significant amount of time (in the range of tens to hundreds of microseconds). once all the operations (e.g., cpu page table walks for all the page faults, page allocation and eviction scheduling, etc.) are finished, page migrations between the cpu and the gpu begin.\n\nthis page fault handling is expensive because (1) it requires long latency communications between the cpu and gpu over the pcie bus, and (2) the gpu runtime performs a very expensive fault handling service routine.\n\nto amortize the overhead, the gpu runtime processes a group of page faults together, which we refer to as batch processing.\n\nwhen a page fault exception is raised by the gpu memory management unit (mmu), the gpu runtime begins to handle the exception, shown in 1.\n\n\n\nfrom this, we conclude that page evictions and new page allocations are serialized in modern gpus to prevent the new pages from overwriting the evicted pages. note that an eviction is required on every page fault once the pages resident in the gpu’s memory are at capacity.\n\n\n\nthis preprocessing includes sorting the page faults in ascending order of page addresses (to accelerate the page table walks) and the analysis of page addresses to insert page prefetching requests.1 we refer to the time taken by the gpu runtime to perform a collection of operations to handle many page faults together as gpu runtime fault handling time.\n\nhttps://github.com/acsl-technion/gaia_nvidia/blob/e23e4d926f576c2c4169664b6add89e1368ee849/kernel/nvidia-uvm/uvm8_gpu_replayable_faults.c#l787\n\n// fault cache preprocessing for fault coalescing\n//\n// this function generates an ordered view of the given fault_cache in which faults are sorted by va space, fault\n// address (aligned to 4k) and access type "intrusiveness" (atomic - write - read - prefetch). in order to minimize\n// the number of instance_ptr to va space translations we perform a first sort by instance_ptr.\n//\n// this function returns nv_warn_more_processing_required if a fault buffer flush occurred during instance_ptr\n// translation and executed successfully, or the error code if it failed. nv_ok otherwise.\n//\n// current scheme:\n// 1) sort by instance_ptr\n// 2) translate all instance_ptrs to va spaces\n// 3) sort by va_space, fault address (gpu already reports 4k-aligned address) and access type\nstatic nv_status preprocess_fault_batch(uvm_gpu_t *gpu, uvm_fault_service_batch_context_t *batch_context)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\nthe batch processing time is measured to be in the range of 223µs to 553µs with a median of 313µs, of which, gpu runtime fault handling accounts for an average of 46.69% of the time (measured to be in the range of 50µs to 430µs with a median of 140µs).\n\n1）thread oversubscription\n\nwe enable thread oversubscription from the beginning of the execution by allocating one additional thread block to each sm ( 1 ). the thread block additionally allocated to each sm is inactive at first. it is important to note that the number of active thread blocks does not exceed that of the baseline, which is determined by the physical resource constraints. once all of the warps in an active thread block are stalled due to page faults, the thread oversubscription mechanism context switches the active (but stalled) thread block with an inactive thread block ( 2 ). the thread oversubscription mechanism can be detrimental if it causes premature evictions. to prevent this, the gpu runtime monitors the premature eviction rates by periodically estimating the running average of the lifetime of pages by tracking when each page is allocated and evicted. we use the running average as an indicator of premature evictions. if the running average is decreased by a certain threshold, the thread oversubscription mechanism does not allow any more context switching by decrementing (and limiting) the number of concurrently runnable thread blocks ( 3 ).6 otherwise, thread oversubscription allocates one additional thread block to each sm in an incremental manner.\n\n\n\n 2. unobstrusive eviction\n\nwhen a page fault interrupt is raised by the gpu mmu, the top-half interrupt service routine (isr) responds. it checks whether the number of gpu resident pages is at capacity via the gpu memory status tracker. if so, it sends a preemptive eviction request to the gpu. the rest of the fault handling (e.g., preprocessing of the page faults, cpu-side page table walks) is performed by the bottom-half isr.\n\n\n\n\n\nwhen the gpu runtime begins a batch’s processing, it checks the gpu memory status. if it is at capacity, it initiates a single page eviction ( 1 ). once page x is evicted from the gpu’s memory, both cpu and gpu page tables are updated ( 2 ). unlike the baseline case (figure 4), page a can be migrated to the gpu memory without any delay ( 3 ). at the same time, page y can be evicted using bidirectional transfers. since the data transfer speed from the gpu to cpu memory is faster than the other way around [29], eviction is completely unobtrusive and migrations to the gpu can occur without any delay.\n\nin short, thread oversubscription increase the batch size by switching in in-active thread block. and unobstrusive eviction avoid the serialization of swap pages between host and device.\n\n----------------------------------------\n\n\n# 10. machine learning guided optimal use of gpu unified memory 2019\n\nto enable better performance of um, cuda allows developers to give the um driver additional advice on managing a given gpu memory range via an api function named cudamemadvise(const void *, size_t, enum cudamemoryadvise, int). the first two parameters of this function accept a pointer to a memory range with a specified size. the memory range should be allocated via cudamallocmanaged or declared via __managed__variables. the third parameter sets the advice for the memory range. the last parameter indicates the associated device’s id, which can indicate either a cpu or gpu device. the details and differences of these four kinds of advice are presented as follows:\n\n• default: this represents the default on-demand page migration to accessing processor, using the first-touch policy.\n\n• cudamemadvisesetreadmostly: this advice is used for the data which is mostly going to be read from and only occasionally written to. the um driver may create read-only copies of the data in a processor’s memory when that processor accesses it. if this region encounters any write requests, then only the write occurred page will be valid and other copies will be invalid.\n\n• cudamemadvisesetpreferredlocation: once a target device is specified, this device memory can be set as the preferred location for the allocated data. the host memory can also be specified as the preferred location. setting the preferred location does not cause data to migrate to that location immediately. the policy only guides what will happen when a fault occurs on the specified memory region: if data is already in the preferred location, the faulting processor will try to directly establish a mapping to the region without causing page migration. otherwise, the data will be migrated to the processor accessing it if the data is not in the preferred location or if a direct mapping cannot be established.\n\n• cudamemadvisesetaccessedby: this advice implies that the data will be accessed by a specified cpu or gpu device. it has no impact on the data location and will not cause data migration. it only causes the data to be always mapped in the specified processor’s page tables, when applicable. the mapping will be accordingly updated if the data is migrated somehow. this advice is useful to indicate that avoiding faults is important for some data, especially when the data is accessed by a gpu within a system containing multiple gpus with peer-to-peer access enabled.',charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"TensorCore Paper List",frontmatter:{title:"TensorCore Paper List",date:"2023-11-17T00:00:00.000Z",permalink:"/pages/44871e/"},regularPath:"/03.gpu/05.TensorCore.html",relativePath:"03.gpu/05.TensorCore.md",key:"v-2861ec8b",path:"/pages/44871e/",headers:[{level:3,title:"1. Modeling Deep Learning Accelerator Enabled GPUs",slug:"_1-modeling-deep-learning-accelerator-enabled-gpus",normalizedTitle:"1. modeling deep learning accelerator enabled gpus",charIndex:1}],headersStr:"1. Modeling Deep Learning Accelerator Enabled GPUs",content:" 1. Modeling Deep Learning Accelerator Enabled GPUs 2019\n 2. Dissecting Tensor Cores via Microbenchmarks: Latency, Throughput and Numeric Behaviors 2023\n 3. Demystifying Tensor Cores to Optimize Half-Precision Matrix Multiply 2020\n 4. CS 380 - GPU and GPGPU ProgrammingLecture 26: Programming Tensor Cores\n 5. Dissecting the NVIDIA Volta GPU Architecture via Microbenchmark 2018\n\n----------------------------------------\n\n\n# 1. Modeling Deep Learning Accelerator Enabled GPUs",normalizedContent:" 1. modeling deep learning accelerator enabled gpus 2019\n 2. dissecting tensor cores via microbenchmarks: latency, throughput and numeric behaviors 2023\n 3. demystifying tensor cores to optimize half-precision matrix multiply 2020\n 4. cs 380 - gpu and gpgpu programminglecture 26: programming tensor cores\n 5. dissecting the nvidia volta gpu architecture via microbenchmark 2018\n\n----------------------------------------\n\n\n# 1. modeling deep learning accelerator enabled gpus",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"GPU Virtualization Paper List",frontmatter:{title:"GPU Virtualization Paper List",date:"2023-12-18T00:00:00.000Z",permalink:"/pages/45871f/"},regularPath:"/03.gpu/07.GPUVirtualization.html",relativePath:"03.gpu/07.GPUVirtualization.md",key:"v-d22a70f6",path:"/pages/45871f/",headers:[{level:3,title:"1.TimeGraph: GPU Scheduling for Real-Time Multi-Tasking Environments",slug:"_1-timegraph-gpu-scheduling-for-real-time-multi-tasking-environments",normalizedTitle:"1.timegraph: gpu scheduling for real-time multi-tasking environments",charIndex:500},{level:2,title:"Done.",slug:"done",normalizedTitle:"done.",charIndex:573},{level:3,title:"2.Hardware Compute Partitioning on NVIDIA GPUs",slug:"_2-hardware-compute-partitioning-on-nvidia-gpus",normalizedTitle:"2.hardware compute partitioning on nvidia gpus",charIndex:583},{level:3,title:"3.GPUvm: Why Not Virtualizing GPUs at the Hypervisor [Year 2014 Citation]",slug:"_3-gpuvm-why-not-virtualizing-gpus-at-the-hypervisor-year-2014-citation",normalizedTitle:"3.gpuvm: why not virtualizing gpus at the hypervisor [year 2014 citation]",charIndex:683},{level:3,title:"4.Implementing Open-Source CUDA Runtime",slug:"_4-implementing-open-source-cuda-runtime",normalizedTitle:"4.implementing open-source cuda runtime",charIndex:884},{level:3,title:"5.Gdev: First-Class GPU Resource Management in the Operating System",slug:"_5-gdev-first-class-gpu-resource-management-in-the-operating-system",normalizedTitle:"5.gdev: first-class gpu resource management in the operating system",charIndex:977}],headersStr:"1.TimeGraph: GPU Scheduling for Real-Time Multi-Tasking Environments Done. 2.Hardware Compute Partitioning on NVIDIA GPUs 3.GPUvm: Why Not Virtualizing GPUs at the Hypervisor [Year 2014 Citation] 4.Implementing Open-Source CUDA Runtime 5.Gdev: First-Class GPU Resource Management in the Operating System",content:" 1. TimeGraph: GPU Scheduling for Real-Time Multi-Tasking Environments [Citation 372]\n 2. Hardware Compute Partitioning on NVIDIA GPUs [Year 2022 Citation 3]\n 3. GPUvm: Why Not Virtualizing GPUs at the Hypervisor [Year 2014 Citation 142]\n 4. Implementing Open-Source CUDA Runtime [Year 2013 Citation 13]\n 5. Gdev: First-Class GPU Resource Management in the Operating System [Year 2012 Citation 272]\n\n1.3.4.5 are written by the same author: Shinpei Kato.\n\n----------------------------------------\n\n\n# 1.TimeGraph: GPU Scheduling for Real-Time Multi-Tasking Environments\n\n\n# Done.\n\n\n# 2.Hardware Compute Partitioning on NVIDIA GPUs\n\nDone.\n\n----------------------------------------\n\n\n# 3.GPUvm: Why Not Virtualizing GPUs at the Hypervisor [Year 2014 Citation]\n\nhttps://cseweb.ucsd.edu/~yiying/cse291j-winter20/reading/GPU-Virtualization.pdf\n\n----------------------------------------\n\n\n# 4.Implementing Open-Source CUDA Runtime\n\nDone.\n\n----------------------------------------\n\n\n# 5.Gdev: First-Class GPU Resource Management in the Operating System\n\nDone.",normalizedContent:" 1. timegraph: gpu scheduling for real-time multi-tasking environments [citation 372]\n 2. hardware compute partitioning on nvidia gpus [year 2022 citation 3]\n 3. gpuvm: why not virtualizing gpus at the hypervisor [year 2014 citation 142]\n 4. implementing open-source cuda runtime [year 2013 citation 13]\n 5. gdev: first-class gpu resource management in the operating system [year 2012 citation 272]\n\n1.3.4.5 are written by the same author: shinpei kato.\n\n----------------------------------------\n\n\n# 1.timegraph: gpu scheduling for real-time multi-tasking environments\n\n\n# done.\n\n\n# 2.hardware compute partitioning on nvidia gpus\n\ndone.\n\n----------------------------------------\n\n\n# 3.gpuvm: why not virtualizing gpus at the hypervisor [year 2014 citation]\n\nhttps://cseweb.ucsd.edu/~yiying/cse291j-winter20/reading/gpu-virtualization.pdf\n\n----------------------------------------\n\n\n# 4.implementing open-source cuda runtime\n\ndone.\n\n----------------------------------------\n\n\n# 5.gdev: first-class gpu resource management in the operating system\n\ndone.",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"Memory Behaviour Paper List",frontmatter:{title:"Memory Behaviour Paper List",date:"2023-11-21T00:00:00.000Z",permalink:"/pages/45871e/"},regularPath:"/03.gpu/06.MemoryBehaviour.html",relativePath:"03.gpu/06.MemoryBehaviour.md",key:"v-04292a45",path:"/pages/45871e/",headers:[{level:3,title:"1. A Comparative Analysis of Microarchitecture Effects on CPU and GPU Memory System Behavior",slug:"_1-a-comparative-analysis-of-microarchitecture-effects-on-cpu-and-gpu-memory-system-behavior",normalizedTitle:"1. a comparative analysis of microarchitecture effects on cpu and gpu memory system behavior",charIndex:1}],headersStr:"1. A Comparative Analysis of Microarchitecture Effects on CPU and GPU Memory System Behavior",content:" 1. A Comparative Analysis of Microarchitecture Effects on CPU and GPU Memory System Behavior 2014\n 2. \n\n----------------------------------------\n\n\n# 1. A Comparative Analysis of Microarchitecture Effects on CPU and GPU Memory System Behavior\n\nCPU cores must extract very wide ILP in order to expose MLP to the memory hierarchy, and this MLP can be limited to lower levels of the memory hierarchy due to L1 cache locality. On the other hand, GPU cores and caches aim to mitigate MLP limitations, allowing the programmer to focus their efforts on leveraging the available MLP.\n\n\n\nRodinia is categorized into the above features.\n\n * Pipleline\n * Iterative\n * Head Reads(I/c)\n\nA fairly common factor in compute and memory op count differences between system configurations is due to register handling. For x86 CPU applications, the small architected register set (16) can cause register spilling to the stack and recomputation of previously computed values.\n\nIn contrast, GPU cores have some flexibility in register use due to their core multithreading. By running fewer GPU threads per core and late binding register specifiers to physical registers, there is more flexibility for each thread to access more registers, which can avoid spilling and recomputation.\n\nMemory Access Pattern\n\nCPU cores use a small set of deep per-thread instruction windows, and high-frequency pipelines and caches to expose parallel memory accesses. In contrast, GPU cores expose parallel memory accesses by executing 100s–1000s more threads at lower frequencies, and threads are grouped for smaller perthread instruction windows and memory request coalescing.\n\nwhile CPU cores rely heavily on L1 caches to capture locality, GPU cores capture most locality with coalescing and lessen the L1 cache responsibilities by providing scratch memory.\n\nBeyond the L1 caches, the memory systems tend to capture very similar locality. Further, we see that different core threading and cache filtering result in extreme differences in instantaneous memory access rates; CPU caches tend to filter accesses down to regular intervals, while GPU cores tend to issue bursts of accesses.\n\n\n\nScratch memory: GPU cores provide scratch memory, which can function as local storage for groups of threads to expand the space of local storage with register-like accessibility. In CUDA benchmarks that use the GPU scratch memory, kernels are typically organized into three stages: (1) read a small portion of data from global memory into the scratch memory, (2) compute on the data in scratch memory, and (3) write results back to global memory.\n\nSince GPU request coalescing behaves similarly to CPU single-instruction, multiple-data (SIMD) vectorization, vectorization reduces the total number of memory accesses by 1.32–1.69× (1.44× geometric mean), and that most of the eliminated accesses are to heap data.\n\nOverall, GPU scratch memory and request coalescing reduce the number of global memory accesses by 18–100× compared to CPU applications (27× in the geometric mean).\n\nCompared to CPU cores, this reduction alleviates pressure on caches, which in turn allows GPU cores to operate at lower frequencies while still serving data to threads at rates comparable to or greater than CPU cores.\n\nSpatial Locality\n\nCPU threads have extremely high spatial locality, typically striding through all elements in a heap cache line in subsequent algorithm loop iterations. These access patterns, which also include accesses to stack/local memory that is persistent over many loop iterations, result in high L1 cache hit rates that even exceed those expected by simple strided read memory access.\n\nFor GPU, small number of remaining spatially local accesses is likely due to separate thread groups accessing the same data rather than thread groups being unable to fully coalesce accesses.\n\nTemporal Locality\n\nFor CPU, this leaves the L2 caches mostly responsible for capturing temporally local accesses to data shared across cores rather than temporally or spatially local accesses to data previously evicted from the L1 caches due to limited capacity.\n\nFor GPU, This indicates that instead of competing for L1 capacity, GPU threads from separate cores are generating most of the temporally local accesses to single cache lines, similar to the CPU L2.\n\nBased on the above observations, we find that CPU and GPU L1 caches have very different importance, though their filtering roles are similar.\n\nIn the aggregate for data-parallel workloads, CPU L1 caches have many responsibilities; they must be designed to capture both the spatial locality for heap data accesses and the temporal locality of stack accesses. Fortunately for data-parallel workloads, these responsibilities rarely conflict given sufficient L1 capacity, so CPU L1s are quite effective and important for capturing locality.\n\nFor GPU applications, register and scratch memory can shift local variable accesses away from the caches, which eliminates the L1 responsibility for capturing temporally local stack requests. Further, GPU coalescing greatly reduces the importance of spatial locality across separate heap accesses, so the L1 caches are mostly responsible for capturing the small number of temporally local accesses from separate GPU threads on the same core(this is different from cpu), diminishing the overall responsibility of the GPU L1s compared to CPU L1s.\n\nBandwidth Demands\n\n\n\nThe key takeaway here is that GPU burst access behavior results from the way that GPUs group and launch threads. Specifically, at the beginning of a kernel, all capable thread block contexts begin executing at roughly the same time, so this can cause very large bursts of independent accesses.\n\nFollowing this initial burst, smaller but still significant access bursts occur each time a new thread block begins executing or when thread groups pass synchronization events.\n\nBy contrast, CPU cache access filtering tends to modulate the core’s ability to issue nearly as many parallel accesses to off-chip memory.\n\nLatency Sensitivity and Bandwidth Sensitivity\n\n\n\nThis Figue show CPU is sensitive to latency, but gpu to bandwidth.\n\nInteresting thoughts*\n\n-cache shared by CPU and GPU -interconnect and off-chip memory scheduling\n\nThese should take different characteristic of CPU and GPU into consideration.",normalizedContent:" 1. a comparative analysis of microarchitecture effects on cpu and gpu memory system behavior 2014\n 2. \n\n----------------------------------------\n\n\n# 1. a comparative analysis of microarchitecture effects on cpu and gpu memory system behavior\n\ncpu cores must extract very wide ilp in order to expose mlp to the memory hierarchy, and this mlp can be limited to lower levels of the memory hierarchy due to l1 cache locality. on the other hand, gpu cores and caches aim to mitigate mlp limitations, allowing the programmer to focus their efforts on leveraging the available mlp.\n\n\n\nrodinia is categorized into the above features.\n\n * pipleline\n * iterative\n * head reads(i/c)\n\na fairly common factor in compute and memory op count differences between system configurations is due to register handling. for x86 cpu applications, the small architected register set (16) can cause register spilling to the stack and recomputation of previously computed values.\n\nin contrast, gpu cores have some flexibility in register use due to their core multithreading. by running fewer gpu threads per core and late binding register specifiers to physical registers, there is more flexibility for each thread to access more registers, which can avoid spilling and recomputation.\n\nmemory access pattern\n\ncpu cores use a small set of deep per-thread instruction windows, and high-frequency pipelines and caches to expose parallel memory accesses. in contrast, gpu cores expose parallel memory accesses by executing 100s–1000s more threads at lower frequencies, and threads are grouped for smaller perthread instruction windows and memory request coalescing.\n\nwhile cpu cores rely heavily on l1 caches to capture locality, gpu cores capture most locality with coalescing and lessen the l1 cache responsibilities by providing scratch memory.\n\nbeyond the l1 caches, the memory systems tend to capture very similar locality. further, we see that different core threading and cache filtering result in extreme differences in instantaneous memory access rates; cpu caches tend to filter accesses down to regular intervals, while gpu cores tend to issue bursts of accesses.\n\n\n\nscratch memory: gpu cores provide scratch memory, which can function as local storage for groups of threads to expand the space of local storage with register-like accessibility. in cuda benchmarks that use the gpu scratch memory, kernels are typically organized into three stages: (1) read a small portion of data from global memory into the scratch memory, (2) compute on the data in scratch memory, and (3) write results back to global memory.\n\nsince gpu request coalescing behaves similarly to cpu single-instruction, multiple-data (simd) vectorization, vectorization reduces the total number of memory accesses by 1.32–1.69× (1.44× geometric mean), and that most of the eliminated accesses are to heap data.\n\noverall, gpu scratch memory and request coalescing reduce the number of global memory accesses by 18–100× compared to cpu applications (27× in the geometric mean).\n\ncompared to cpu cores, this reduction alleviates pressure on caches, which in turn allows gpu cores to operate at lower frequencies while still serving data to threads at rates comparable to or greater than cpu cores.\n\nspatial locality\n\ncpu threads have extremely high spatial locality, typically striding through all elements in a heap cache line in subsequent algorithm loop iterations. these access patterns, which also include accesses to stack/local memory that is persistent over many loop iterations, result in high l1 cache hit rates that even exceed those expected by simple strided read memory access.\n\nfor gpu, small number of remaining spatially local accesses is likely due to separate thread groups accessing the same data rather than thread groups being unable to fully coalesce accesses.\n\ntemporal locality\n\nfor cpu, this leaves the l2 caches mostly responsible for capturing temporally local accesses to data shared across cores rather than temporally or spatially local accesses to data previously evicted from the l1 caches due to limited capacity.\n\nfor gpu, this indicates that instead of competing for l1 capacity, gpu threads from separate cores are generating most of the temporally local accesses to single cache lines, similar to the cpu l2.\n\nbased on the above observations, we find that cpu and gpu l1 caches have very different importance, though their filtering roles are similar.\n\nin the aggregate for data-parallel workloads, cpu l1 caches have many responsibilities; they must be designed to capture both the spatial locality for heap data accesses and the temporal locality of stack accesses. fortunately for data-parallel workloads, these responsibilities rarely conflict given sufficient l1 capacity, so cpu l1s are quite effective and important for capturing locality.\n\nfor gpu applications, register and scratch memory can shift local variable accesses away from the caches, which eliminates the l1 responsibility for capturing temporally local stack requests. further, gpu coalescing greatly reduces the importance of spatial locality across separate heap accesses, so the l1 caches are mostly responsible for capturing the small number of temporally local accesses from separate gpu threads on the same core(this is different from cpu), diminishing the overall responsibility of the gpu l1s compared to cpu l1s.\n\nbandwidth demands\n\n\n\nthe key takeaway here is that gpu burst access behavior results from the way that gpus group and launch threads. specifically, at the beginning of a kernel, all capable thread block contexts begin executing at roughly the same time, so this can cause very large bursts of independent accesses.\n\nfollowing this initial burst, smaller but still significant access bursts occur each time a new thread block begins executing or when thread groups pass synchronization events.\n\nby contrast, cpu cache access filtering tends to modulate the core’s ability to issue nearly as many parallel accesses to off-chip memory.\n\nlatency sensitivity and bandwidth sensitivity\n\n\n\nthis figue show cpu is sensitive to latency, but gpu to bandwidth.\n\ninteresting thoughts*\n\n-cache shared by cpu and gpu -interconnect and off-chip memory scheduling\n\nthese should take different characteristic of cpu and gpu into consideration.",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"Large Language Model Paper List",frontmatter:{title:"Large Language Model Paper List",date:"2023-12-19T00:00:00.000Z",permalink:"/pages/458720/"},regularPath:"/03.gpu/08.LLM.html",relativePath:"03.gpu/08.LLM.md",key:"v-65bd31e5",path:"/pages/458720/",headers:[{level:3,title:"1. Efficient Memory Management for Large Language Model Serving with PagedAttention",slug:"_1-efficient-memory-management-for-large-language-model-serving-with-pagedattention",normalizedTitle:"1. efficient memory management for large language model serving with pagedattention",charIndex:1},{level:3,title:"2. LLM in a flash: Efficient Large Language Model Inference with Limited Memory",slug:"_2-llm-in-a-flash-efficient-large-language-model-inference-with-limited-memory",normalizedTitle:"2. llm in a flash: efficient large language model inference with limited memory",charIndex:93},{level:3,title:"1. A Survey on Hallucination in Large Language Models: Principles, Taxonomy, Challenges, and Open Questions",slug:"_1-a-survey-on-hallucination-in-large-language-models-principles-taxonomy-challenges-and-open-questions",normalizedTitle:"1. a survey on hallucination in large language models: principles, taxonomy, challenges, and open questions",charIndex:4386}],headersStr:"1. Efficient Memory Management for Large Language Model Serving with PagedAttention 2. LLM in a flash: Efficient Large Language Model Inference with Limited Memory 1. A Survey on Hallucination in Large Language Models: Principles, Taxonomy, Challenges, and Open Questions",content:" 1. Efficient Memory Management for Large Language Model Serving with PagedAttention [2023]\n 2. LLM in a flash: Efficient Large Language Model Inference with Limited Memory [Apple 2023]\n\n----------------------------------------\n\n\n# 1. Efficient Memory Management for Large Language Model Serving with PagedAttention\n\nDisscussed the GEMM in prompt and GEMV in auto regression. In GEMV, LLM is memory bound. There is lot of fragment in KVCache. It also quantize the memory necessity for parameter in KV Cache. They came up the method similar to paging in OS to manage KV in KV cache, reducing the fragment.\n\n\n# 2. LLM in a flash: Efficient Large Language Model Inference with Limited Memory\n\nUpproject matrix and downprojection matrix: https://developer.nvidia.com/blog/selecting-large-language-model-customization-techniques/ Related paper: Parameter-Efficient Transfer Learning for NLP This introduce low-rank.\n\nsliding window.\n\n 1. high sparsity in FeedForward Layers, more than 90% Selectively only load parameters from memory either no-zero input or predicted have non-zero output\n\n 2. Minimize data transfer and maximize flash memory throughout Window sliding: Load parameters for only the past few tokens, reusing activations from recently computed tokens. This sliding window approach reduces the number of IO requests to load weights. Row-column bundling: We store a concatenated row and column of the up-projection and down-projection layers to read bigger contiguous chunks from flash memory. This increases throughput by reading larger chunks.\n\n 3. Predict FFN sparsity and avoid loading zeroed-out parameter to minimize the number of weights to be transferred from flash memory to DRAM.\n\n 4. Static memory preallocation\n\nAlso a model to predict the tradeoff between loading less data and reading larger chunks\n\nLoad only 2% of FFN layer from flash\n\n 1. Larger chunk Although throughput growth is not linear (larger chunks take longer to transfer), the latency for the initial byte becomes a smaller fraction of the total request time, resulting in more efficient data reading.\n\n 2. Load From Flash\n\n2.1 inherent sparsity found in Feed-Forward Network (FFN) model\n\nSelective Persistence Strategy Retain the embeddings and matrices within the attention mechanism of the transformer constant.Attentions weights 1/3 of the model size.For the Feed-Forward Network (FFN) portions, only the non-sparse segments are dynamically loaded into DRAM as needed.\n\nAnticipating ReLU Sparsity\nRelu activation can induce 90% sparsity. Optimize preceding layer, up project by low-rank predictor to identify the zeroed elements post-ReLU.\nIn contrast to their work, our predictor needs only the output of the current layer’s attention module and not the previous layer’s FFN module.\n\nNeuron Data Management via Sliding Window Technique Our approach focuses on managing neuron data by employing a Sliding Window Technique. This methodology entails maintaining neuron data only for a recent subset of input tokens in the memory.\nThe key aspect of this technique is the selective loading of neuron data that differs between the current input token and its immediate predecessors.\nFrees up memory resources previously allocated to neuron data from older tokens that are no longer within the sliding window\n\nLet sagg(k) denote the cumulative use of neuron data across a sequence of k input tokens. This reduction in data loading is counterbalanced by the memory cost associated with storing sagg(k). In determining the size of the sliding window, the aim is to maximize it within the constraints imposed by the available memory capacity.\n\n2.2 Improve Transfer Throughput with Increased Chunk Sizes\n\nBundling Columns and Rows for upward and downward projection\n\nBundling Based on Co-activation fetch neuron with its cloest friend. But there is WARM-GUY problem.\n\n2.3 Optimized Data Management in DRAM\n\nWhen a substantial portion (approximately 25%) of the Feed-Forward Networks (FFNs) in DRAM needs to be rewritten.\n\nWhen introducing data for new neurons, reallocating the matrix and appending new matrices can lead to significant overhead due to the need for rewriting existing neurons data in DRAM. This involves the preallocation of all necessary memory and the establishment of a corresponding data structure for efficient management.\n\n----------------------------------------\n\nLLM Principles\n\n\n# 1. A Survey on Hallucination in Large Language Models: Principles, Taxonomy, Challenges, and Open Questions\n\n",normalizedContent:" 1. efficient memory management for large language model serving with pagedattention [2023]\n 2. llm in a flash: efficient large language model inference with limited memory [apple 2023]\n\n----------------------------------------\n\n\n# 1. efficient memory management for large language model serving with pagedattention\n\ndisscussed the gemm in prompt and gemv in auto regression. in gemv, llm is memory bound. there is lot of fragment in kvcache. it also quantize the memory necessity for parameter in kv cache. they came up the method similar to paging in os to manage kv in kv cache, reducing the fragment.\n\n\n# 2. llm in a flash: efficient large language model inference with limited memory\n\nupproject matrix and downprojection matrix: https://developer.nvidia.com/blog/selecting-large-language-model-customization-techniques/ related paper: parameter-efficient transfer learning for nlp this introduce low-rank.\n\nsliding window.\n\n 1. high sparsity in feedforward layers, more than 90% selectively only load parameters from memory either no-zero input or predicted have non-zero output\n\n 2. minimize data transfer and maximize flash memory throughout window sliding: load parameters for only the past few tokens, reusing activations from recently computed tokens. this sliding window approach reduces the number of io requests to load weights. row-column bundling: we store a concatenated row and column of the up-projection and down-projection layers to read bigger contiguous chunks from flash memory. this increases throughput by reading larger chunks.\n\n 3. predict ffn sparsity and avoid loading zeroed-out parameter to minimize the number of weights to be transferred from flash memory to dram.\n\n 4. static memory preallocation\n\nalso a model to predict the tradeoff between loading less data and reading larger chunks\n\nload only 2% of ffn layer from flash\n\n 1. larger chunk although throughput growth is not linear (larger chunks take longer to transfer), the latency for the initial byte becomes a smaller fraction of the total request time, resulting in more efficient data reading.\n\n 2. load from flash\n\n2.1 inherent sparsity found in feed-forward network (ffn) model\n\nselective persistence strategy retain the embeddings and matrices within the attention mechanism of the transformer constant.attentions weights 1/3 of the model size.for the feed-forward network (ffn) portions, only the non-sparse segments are dynamically loaded into dram as needed.\n\nanticipating relu sparsity\nrelu activation can induce 90% sparsity. optimize preceding layer, up project by low-rank predictor to identify the zeroed elements post-relu.\nin contrast to their work, our predictor needs only the output of the current layer’s attention module and not the previous layer’s ffn module.\n\nneuron data management via sliding window technique our approach focuses on managing neuron data by employing a sliding window technique. this methodology entails maintaining neuron data only for a recent subset of input tokens in the memory.\nthe key aspect of this technique is the selective loading of neuron data that differs between the current input token and its immediate predecessors.\nfrees up memory resources previously allocated to neuron data from older tokens that are no longer within the sliding window\n\nlet sagg(k) denote the cumulative use of neuron data across a sequence of k input tokens. this reduction in data loading is counterbalanced by the memory cost associated with storing sagg(k). in determining the size of the sliding window, the aim is to maximize it within the constraints imposed by the available memory capacity.\n\n2.2 improve transfer throughput with increased chunk sizes\n\nbundling columns and rows for upward and downward projection\n\nbundling based on co-activation fetch neuron with its cloest friend. but there is warm-guy problem.\n\n2.3 optimized data management in dram\n\nwhen a substantial portion (approximately 25%) of the feed-forward networks (ffns) in dram needs to be rewritten.\n\nwhen introducing data for new neurons, reallocating the matrix and appending new matrices can lead to significant overhead due to the need for rewriting existing neurons data in dram. this involves the preallocation of all necessary memory and the establishment of a corresponding data structure for efficient management.\n\n----------------------------------------\n\nllm principles\n\n\n# 1. a survey on hallucination in large language models: principles, taxonomy, challenges, and open questions\n\n",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"TO READ",frontmatter:{title:"TO READ",date:"2023-11-21T00:00:00.000Z",permalink:"/pages/47871e/"},regularPath:"/03.gpu/1234.TODO.html",relativePath:"03.gpu/1234.TODO.md",key:"v-02aef12e",path:"/pages/47871e/",headersStr:null,content:" 1. A survey of architectural approaches for improving GPGPU performance, programmability and heterogeneity",normalizedContent:" 1. a survey of architectural approaches for improving gpgpu performance, programmability and heterogeneity",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"GPU Simulator",frontmatter:{title:"GPU Simulator",date:"2024-01-01T00:00:00.000Z",permalink:"/pages/458721/"},regularPath:"/03.gpu/09.Simulator.html",relativePath:"03.gpu/09.Simulator.md",key:"v-e33712b6",path:"/pages/458721/",headers:[{level:3,title:"1.DeLTA: GPU Performance Model for Deep Learning Applications with In-depth Memory System Traffic Analysis",slug:"_1-delta-gpu-performance-model-for-deep-learning-applications-with-in-depth-memory-system-traffic-analysis",normalizedTitle:"1.delta: gpu performance model for deep learning applications with in-depth memory system traffic analysis",charIndex:169}],headersStr:"1.DeLTA: GPU Performance Model for Deep Learning Applications with In-depth Memory System Traffic Analysis",content:" 1. DeLTA: GPU Performance Model for Deep Learning Applications with In-depth Memory System Traffic Analysis [Citation 39]\n\n----------------------------------------\n\n\n# 1.DeLTA: GPU Performance Model for Deep Learning Applications with In-depth Memory System Traffic Analysis\n\nStill reading in process.",normalizedContent:" 1. delta: gpu performance model for deep learning applications with in-depth memory system traffic analysis [citation 39]\n\n----------------------------------------\n\n\n# 1.delta: gpu performance model for deep learning applications with in-depth memory system traffic analysis\n\nstill reading in process.",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"checkpoint",frontmatter:{title:"checkpoint",date:"2023-11-09T15:32:49.000Z",permalink:"/pages/cc7035/"},regularPath:"/04.cpu/01.checkpoint.html",relativePath:"04.cpu/01.checkpoint.md",key:"v-121d90a9",path:"/pages/cc7035/",headersStr:null,content:"An Analysis of a Resource Efficient Checkpoint Architecture [Intel]\n\nThe main part that I like is the discussion\n\n(1) Using map table checkpoints. Map table checkpoints are created periodically either at every branch or every few cycles [Leibholz and Razdan 1997; Yeager 1996]. On a misprediction, the checkpoint corresponding to the mispredicted branch is restored. The number of checkpoints limits the number of unresolved branches allowed in the instruction window.\n\n(2) Using the retirement map table (RMAP). In this scheme, a retirement map table [Hinton et al. 2001] is used in addition to the frontend map table. Each ROB entry also has the rename map for its corresponding instruction. Once a misprediction is resolved, the mispredicted branch is allowed to reach the head of the ROB at which time the retirement map table will have the correct map table corresponding to the mispredicted branch. At this point, the retirement map table is copied to the frontend map table, after which renaming can start. Since all instructions prior to the mispredicted branch must be retired before renaming can start, this scheme can lead to significant delays if long latency operations prior to the mispredicted branch stall retirement.\n\n(3) Using the retirement map table and the ROB (RMAP+WALK). This scheme is an optimization on the scheme above. Instead of waiting for the mispredicted branch to reach the head of the ROB, we start with the current retirement map table and pro-actively walk from the head of the ROB toward the mispredicted branch, incorporating the rename information of each ROB entry. This allows renaming of correct path instructions to commence without waiting for all instructions prior to the mispredicted branch to retire. (4) Using the frontend map table and a history buffer (HBMAP+WALK). In this scheme, a history buffer is used to store overwritten maps of each instruction. On a branch misprediction, we start with the current frontend map table. We pro-actively walk from the current tail of the ROB (i.e., the most recently allocated instruction) toward the mispredicted branch, incorporating the overwritten maps of each instruction. Depending on whether the mispredicted branch is closer to the ROB head or ROB tail, RMAP + WALK, or HBMAP + WALK will perform better.\n\nIn short:\n\n1. checkpoint generated at the moment of decoding branch instruction. Recover at detection of missprediction.\n\n2. use retire map table(RMAP). wait the commit of missprediction instruction, then rewrite the RAT(remap alias table) with RMAP\n\n3. RMAP + WALK. Restart from the moment that miss prediction is detected, copy the RMAP into RAT and then modify RMAP with ROB remapping, until we get to the miss predicted intruction.\n\n4. HBMAP + WALK. Start from frontend RAT(FRAT), use history buffer to recover the overwritten register relation.\n\nRMAP+WALK utilize commited RMAP, thus it walks from the head of ROB (oldest) to the branch instruction. HBMAP+WALK utilize frontend RAT, thus it walks from the end of ROB (youngest) to the branch instruction.",normalizedContent:"an analysis of a resource efficient checkpoint architecture [intel]\n\nthe main part that i like is the discussion\n\n(1) using map table checkpoints. map table checkpoints are created periodically either at every branch or every few cycles [leibholz and razdan 1997; yeager 1996]. on a misprediction, the checkpoint corresponding to the mispredicted branch is restored. the number of checkpoints limits the number of unresolved branches allowed in the instruction window.\n\n(2) using the retirement map table (rmap). in this scheme, a retirement map table [hinton et al. 2001] is used in addition to the frontend map table. each rob entry also has the rename map for its corresponding instruction. once a misprediction is resolved, the mispredicted branch is allowed to reach the head of the rob at which time the retirement map table will have the correct map table corresponding to the mispredicted branch. at this point, the retirement map table is copied to the frontend map table, after which renaming can start. since all instructions prior to the mispredicted branch must be retired before renaming can start, this scheme can lead to significant delays if long latency operations prior to the mispredicted branch stall retirement.\n\n(3) using the retirement map table and the rob (rmap+walk). this scheme is an optimization on the scheme above. instead of waiting for the mispredicted branch to reach the head of the rob, we start with the current retirement map table and pro-actively walk from the head of the rob toward the mispredicted branch, incorporating the rename information of each rob entry. this allows renaming of correct path instructions to commence without waiting for all instructions prior to the mispredicted branch to retire. (4) using the frontend map table and a history buffer (hbmap+walk). in this scheme, a history buffer is used to store overwritten maps of each instruction. on a branch misprediction, we start with the current frontend map table. we pro-actively walk from the current tail of the rob (i.e., the most recently allocated instruction) toward the mispredicted branch, incorporating the overwritten maps of each instruction. depending on whether the mispredicted branch is closer to the rob head or rob tail, rmap + walk, or hbmap + walk will perform better.\n\nin short:\n\n1. checkpoint generated at the moment of decoding branch instruction. recover at detection of missprediction.\n\n2. use retire map table(rmap). wait the commit of missprediction instruction, then rewrite the rat(remap alias table) with rmap\n\n3. rmap + walk. restart from the moment that miss prediction is detected, copy the rmap into rat and then modify rmap with rob remapping, until we get to the miss predicted intruction.\n\n4. hbmap + walk. start from frontend rat(frat), use history buffer to recover the overwritten register relation.\n\nrmap+walk utilize commited rmap, thus it walks from the head of rob (oldest) to the branch instruction. hbmap+walk utilize frontend rat, thus it walks from the end of rob (youngest) to the branch instruction.",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"two-test-1",frontmatter:{title:"two-test-1",date:"2022-07-18T17:23:23.000Z",permalink:"/pages/f07697/"},regularPath:"/04.cpu/1234.markdown.html",relativePath:"04.cpu/1234.markdown.md",key:"v-c1b2e1c6",path:"/pages/f07697/",headers:[{level:2,title:"为什么要使用 Markdown?",slug:"为什么要使用-markdown",normalizedTitle:"为什么要使用 markdown?",charIndex:429},{level:2,title:"Markdown 相关软件推荐",slug:"markdown-相关软件推荐",normalizedTitle:"markdown 相关软件推荐",charIndex:1004},{level:2,title:"1. 标题&目录",slug:"_1-标题-目录",normalizedTitle:"1. 标题&amp;目录",charIndex:null},{level:3,title:"1.1 标题",slug:"_1-1-标题",normalizedTitle:"1.1 标题",charIndex:1269},{level:3,title:"1.2 目录",slug:"_1-2-目录",normalizedTitle:"1.2 目录",charIndex:1470},{level:2,title:"2. 斜体&粗体",slug:"_2-斜体-粗体",normalizedTitle:"2. 斜体&amp;粗体",charIndex:null},{level:3,title:"2.1 斜体",slug:"_2-1-斜体",normalizedTitle:"2.1 斜体",charIndex:1662},{level:3,title:"2.2 粗体",slug:"_2-2-粗体",normalizedTitle:"2.2 粗体",charIndex:1844},{level:3,title:"2.3 粗斜体 (斜粗体)",slug:"_2-3-粗斜体-斜粗体",normalizedTitle:"2.3 粗斜体 (斜粗体)",charIndex:2046},{level:3,title:"2.4 斜体包含粗体",slug:"_2-4-斜体包含粗体",normalizedTitle:"2.4 斜体包含粗体",charIndex:2434},{level:3,title:"2.5 粗体包含斜体",slug:"_2-5-粗体包含斜体",normalizedTitle:"2.5 粗体包含斜体",charIndex:2973},{level:2,title:"3. 线",slug:"_3-线",normalizedTitle:"3. 线",charIndex:3505},{level:3,title:"3.1 水平分割线",slug:"_3-1-水平分割线",normalizedTitle:"3.1 水平分割线",charIndex:3515},{level:3,title:"3.2 文本删除线",slug:"_3-2-文本删除线",normalizedTitle:"3.2 文本删除线",charIndex:3676},{level:3,title:"3.3 文本下划线",slug:"_3-3-文本下划线",normalizedTitle:"3.3 文本下划线",charIndex:3779},{level:2,title:"4. 列表&引用",slug:"_4-列表-引用",normalizedTitle:"4. 列表&amp;引用",charIndex:null},{level:3,title:"4.1 有序列表",slug:"_4-1-有序列表",normalizedTitle:"4.1 有序列表",charIndex:3903},{level:3,title:"4.2 无序列表",slug:"_4-2-无序列表",normalizedTitle:"4.2 无序列表",charIndex:4966},{level:3,title:"4.3 引用",slug:"_4-3-引用",normalizedTitle:"4.3 引用",charIndex:5496},{level:3,title:"4.4 缩进&退格",slug:"_4-4-缩进-退格",normalizedTitle:"4.4 缩进&amp;退格",charIndex:null},{level:2,title:"5. 网页链接与图像",slug:"_5-网页链接与图像",normalizedTitle:"5. 网页链接与图像",charIndex:8422},{level:3,title:"5.1 网页链接",slug:"_5-1-网页链接",normalizedTitle:"5.1 网页链接",charIndex:8438},{level:3,title:"5.2 图像",slug:"_5-2-图像",normalizedTitle:"5.2 图像",charIndex:9013},{level:2,title:"6. 表格",slug:"_6-表格",normalizedTitle:"6. 表格",charIndex:9834},{level:3,title:"6.1 表格中文本内容的换行",slug:"_6-1-表格中文本内容的换行",normalizedTitle:"6.1 表格中文本内容的换行",charIndex:10206},{level:2,title:"7. 代码域",slug:"_7-代码域",normalizedTitle:"7. 代码域",charIndex:10549},{level:3,title:"7.1 行内代码",slug:"_7-1-行内代码",normalizedTitle:"7.1 行内代码",charIndex:10561},{level:3,title:"7.2 代码块",slug:"_7-2-代码块",normalizedTitle:"7.2 代码块",charIndex:10969},{level:3,title:"7.3 如何在行内代码里显示反引号",slug:"_7-3-如何在行内代码里显示反引号",normalizedTitle:"7.3 如何在行内代码里显示反引号",charIndex:14992},{level:2,title:"8. 任务列表（待办）",slug:"_8-任务列表-待办",normalizedTitle:"8. 任务列表（待办）",charIndex:15142},{level:3,title:"示范",slug:"示范-22",normalizedTitle:"示范",charIndex:1805},{level:3,title:"示范",slug:"示范-23",normalizedTitle:"示范",charIndex:1805},{level:2,title:"9. 注释",slug:"_9-注释",normalizedTitle:"9. 注释",charIndex:15992},{level:3,title:"示范",slug:"示范-只有切换至-编辑模式-才能看到喔",normalizedTitle:"示范",charIndex:1805},{level:2,title:"10. 变量",slug:"_10-变量",normalizedTitle:"10. 变量",charIndex:16421},{level:3,title:"10.1 网页链接变量",slug:"_10-1-网页链接变量",normalizedTitle:"10.1 网页链接变量",charIndex:16433},{level:3,title:"10.2 脚注",slug:"_10-2-脚注",normalizedTitle:"10.2 脚注",charIndex:16756},{level:2,title:"11. 拓展文本格式标记",slug:"_11-拓展文本格式标记",normalizedTitle:"11. 拓展文本格式标记",charIndex:17028},{level:3,title:"11.1 键盘文本",slug:"_11-1-键盘文本",normalizedTitle:"11.1 键盘文本",charIndex:17130},{level:3,title:"11.2 放大文本",slug:"_11-2-放大文本",normalizedTitle:"11.2 放大文本",charIndex:17465},{level:3,title:"11.3 缩小文本",slug:"_11-3-缩小文本",normalizedTitle:"11.3 缩小文本",charIndex:17707},{level:3,title:"11.4 多彩文本",slug:"_11-4-多彩文本",normalizedTitle:"11.4 多彩文本",charIndex:17949},{level:2,title:"12. 拓展文本显示效果",slug:"_12-拓展文本显示效果",normalizedTitle:"12. 拓展文本显示效果",charIndex:18979},{level:3,title:"12.1 文本高亮",slug:"_12-1-文本高亮",normalizedTitle:"12.1 文本高亮",charIndex:19120},{level:3,title:"12.2 上标",slug:"_12-2-上标",normalizedTitle:"12.2 上标",charIndex:19194},{level:3,title:"12.3 下标",slug:"_12-3-下标",normalizedTitle:"12.3 下标",charIndex:19368},{level:3,title:"12.4 Emoji 符号",slug:"_12-4-emoji-符号",normalizedTitle:"12.4 emoji 符号",charIndex:19547},{level:2,title:"13. 转义字符",slug:"_13-转义字符",normalizedTitle:"13. 转义字符",charIndex:19898},{level:3,title:"例1 以普通字符显示星号",slug:"例1-以普通字符显示星号",normalizedTitle:"例1 以普通字符显示星号",charIndex:20457},{level:3,title:"例2 表格内 单元格中的竖杠",slug:"例2-表格内-单元格中的竖杠",normalizedTitle:"例2 表格内 单元格中的竖杠",charIndex:20722},{level:3,title:"例3 不会变成代码的反引号",slug:"例3-不会变成代码的反引号",normalizedTitle:"例3 不会变成代码的反引号",charIndex:21280},{level:3,title:"例4 链接中的中括号",slug:"例4-链接中的中括号",normalizedTitle:"例4 链接中的中括号",charIndex:21554},{level:3,title:"例5 不是列表的连接符(横杠)",slug:"例5-不是列表的连接符-横杠",normalizedTitle:"例5 不是列表的连接符(横杠)",charIndex:21719},{level:3,title:"例6 不是标题的 \\#",slug:"例6-不是标题的",normalizedTitle:"例6 不是标题的 #",charIndex:22158},{level:3,title:"例7 不会注释的 \\%",slug:"例7-不会注释的",normalizedTitle:"例7 不会注释的 %",charIndex:22235},{level:3,title:"例8 木有链接的双链",slug:"例8-木有链接的双链",normalizedTitle:"例8 木有链接的双链",charIndex:22364},{level:3,title:"例9 页链接里 显示文本内的 中括号",slug:"例9-页链接里-显示文本内的-中括号",normalizedTitle:"例9 页链接里 显示文本内的 中括号",charIndex:22501},{level:3,title:"特殊情况 文本修饰的中括号",slug:"特殊情况-文本修饰的中括号",normalizedTitle:"特殊情况 文本修饰的中括号",charIndex:22675},{level:2,title:"14. 空格&换行&强制删除",slug:"_14-空格-换行-强制删除",normalizedTitle:"14. 空格&amp;换行&amp;强制删除",charIndex:null},{level:3,title:"14.1 空格",slug:"_14-1-空格",normalizedTitle:"14.1 空格",charIndex:22819},{level:3,title:"14.2 换行",slug:"_14-2-换行",normalizedTitle:"14.2 换行",charIndex:23070},{level:3,title:"14.3 强制删除",slug:"_14-3-强制删除",normalizedTitle:"14.3 强制删除",charIndex:23728},{level:2,title:"15. 嵌入",slug:"_15-嵌入",normalizedTitle:"15. 嵌入",charIndex:23900},{level:3,title:"15.1 嵌入音频",slug:"_15-1-嵌入音频",normalizedTitle:"15.1 嵌入音频",charIndex:24080},{level:3,title:"15.2 嵌入视频",slug:"_15-2-嵌入视频",normalizedTitle:"15.2 嵌入视频",charIndex:24341},{level:3,title:"15.3 嵌入页面",slug:"_15-3-嵌入页面",normalizedTitle:"15.3 嵌入页面",charIndex:24721},{level:2,title:"16. Latex 数学公式",slug:"_16-latex-数学公式",normalizedTitle:"16. latex 数学公式",charIndex:25471},{level:3,title:"16.1 行内公式",slug:"_16-1-行内公式",normalizedTitle:"16.1 行内公式",charIndex:25516},{level:3,title:"16.2 公式块",slug:"_16-2-公式块",normalizedTitle:"16.2 公式块",charIndex:25823},{level:2,title:"17. Mermaid",slug:"_17-mermaid",normalizedTitle:"17. mermaid",charIndex:27121},{level:3,title:"17.1 流程图",slug:"_17-1-流程图",normalizedTitle:"17.1 流程图",charIndex:27284},{level:3,title:"17.2 饼图",slug:"_17-2-饼图",normalizedTitle:"17.2 饼图",charIndex:28498},{level:3,title:"17.3 序列图 (时序图)",slug:"_17-3-序列图-时序图",normalizedTitle:"17.3 序列图 (时序图)",charIndex:28739},{level:3,title:"17.4 甘特图",slug:"_17-4-甘特图",normalizedTitle:"17.4 甘特图",charIndex:32416},{level:3,title:"17.5 类图",slug:"_17-5-类图",normalizedTitle:"17.5 类图",charIndex:32999},{level:2,title:"18. 标签 (Tag)",slug:"_18-标签-tag",normalizedTitle:"18. 标签 (tag)",charIndex:33887},{level:3,title:"关于空格",slug:"关于空格",normalizedTitle:"关于空格",charIndex:33986},{level:3,title:"关于数字",slug:"关于数字",normalizedTitle:"关于数字",charIndex:34197},{level:3,title:"标签的嵌套",slug:"标签的嵌套",normalizedTitle:"标签的嵌套",charIndex:34299},{level:3,title:"能被使用的符号",slug:"能被使用的符号",normalizedTitle:"能被使用的符号",charIndex:34521},{level:3,title:"如何让 \\# 不被识别",slug:"如何让-不被识别",normalizedTitle:"如何让 # 不被识别",charIndex:34585},{level:2,title:"19. 避免标识符的滥用",slug:"_19-避免标识符的滥用",normalizedTitle:"19. 避免标识符的滥用",charIndex:34678}],headersStr:"为什么要使用 Markdown? Markdown 相关软件推荐 1. 标题&目录 1.1 标题 1.2 目录 2. 斜体&粗体 2.1 斜体 2.2 粗体 2.3 粗斜体 (斜粗体) 2.4 斜体包含粗体 2.5 粗体包含斜体 3. 线 3.1 水平分割线 3.2 文本删除线 3.3 文本下划线 4. 列表&引用 4.1 有序列表 4.2 无序列表 4.3 引用 4.4 缩进&退格 5. 网页链接与图像 5.1 网页链接 5.2 图像 6. 表格 6.1 表格中文本内容的换行 7. 代码域 7.1 行内代码 7.2 代码块 7.3 如何在行内代码里显示反引号 8. 任务列表（待办） 示范 示范 9. 注释 示范 10. 变量 10.1 网页链接变量 10.2 脚注 11. 拓展文本格式标记 11.1 键盘文本 11.2 放大文本 11.3 缩小文本 11.4 多彩文本 12. 拓展文本显示效果 12.1 文本高亮 12.2 上标 12.3 下标 12.4 Emoji 符号 13. 转义字符 例1 以普通字符显示星号 例2 表格内 单元格中的竖杠 例3 不会变成代码的反引号 例4 链接中的中括号 例5 不是列表的连接符(横杠) 例6 不是标题的 \\# 例7 不会注释的 \\% 例8 木有链接的双链 例9 页链接里 显示文本内的 中括号 特殊情况 文本修饰的中括号 14. 空格&换行&强制删除 14.1 空格 14.2 换行 14.3 强制删除 15. 嵌入 15.1 嵌入音频 15.2 嵌入视频 15.3 嵌入页面 16. Latex 数学公式 16.1 行内公式 16.2 公式块 17. Mermaid 17.1 流程图 17.2 饼图 17.3 序列图 (时序图) 17.4 甘特图 17.5 类图 18. 标签 (Tag) 关于空格 关于数字 标签的嵌套 能被使用的符号 如何让 \\# 不被识别 19. 避免标识符的滥用",content:'这里是 two-test-1 的内容。\n\n\n\n以下Markdown内容转载自：Markdown超级教程 Obsidian版\n\n这里仅作为展示Vuepress解析Markdown效果的一个展示。\n\n\n# 什么是 Markdown?\n\n 1. Markdown 是一款轻量级标记语言，不同于HTML (Hypertext Markup Language)，Markdown 的语法非常简单，且容易上手\n 2. Markdown 以 纯文本格式 编写文档，依赖键盘而非鼠标，专注于写作本身，感受书写的魅力\n 3. Markdown 的通过添加一些简单的 标识符，让文本具有恰到好处的格式\n 4. Markdown 核心特征就是 删繁剪芜， 简扼 + 精炼\n 5. Markdown 是 笔记 与 网页文章 的最佳载体\n 6. Down 的核心：坐 下 来，就能把思维写 下 来\n    * 牛津高阶英汉双解词典第九版 中，关于 down 的释义：\n\n\n\n\n\n\n# 为什么要使用 Markdown?\n\n有朋友问我 ，Markdown 的效果 用Word 完全可以复现，甚至功能更多，那为何要用 Markdown 呢？\n\n答：\n\n * 功能多，不一定是好事\n   * 功能一多，选择就会变多，然后你会开始纠结……\n     * 这个字号是不是该大一点呢？\n     * 这个颜色好像有点不太搭呢？\n     * 这个粗体，是不是该再加点颜色呢？\n     * 这个图片的位置看起来有点不大对劲呢？\n   * 结果，写了半天，就憋出一点点东西\n     * 写出来的内容...好像...也不咋滴\n\nMD的优势：\n\n 1. Markdown 让我们免于 被繁杂臃肿的功能晃花了眼 的困扰\n 2. Markdown 让我们回归内容本身，拥抱笔记的内核，而非浮于表象的样式，写出高效精练的笔记！\n\n用 Markdown 写东西，记住一个原则\n\n> 能用10个字搞定的，绝不用11个字\n\n经常使用 Markdown 书写的朋友，也许会有一种奇妙的感触\n\n * 书写，会==倒逼==思维的跃进。像是有东西拽着你的思绪往前冲\n   * 倒逼：逆向逼迫，反向推动\n\n关于标识符的滥用\n\n这个其实是写在最后的，之所以放在这里，是因为它很重要！\n\n如果你有一定的MD语法基础，可以直接[[#19 避免标识符的滥用|点击跳转]]\n\n\n\n# Markdown 相关软件推荐\n\n * Markdown 书写软件 推荐：Typora 优秀的 MD网页文章 书写软件\n   * 点击跳转下载地址\n     * #提示 以前是免费的，现在收费了，不过是买断制\n * Markdown 笔记软件 推荐：Obsidian 银河系最强 MD+双向链 笔记软件\n   * 点击跳转下载地址\n\n\n\n\n\n\n# Markdown 语法\n\n * 提示1： 本教程推荐使用 Obsidian 打开阅读\n * 提示2： 下文提到的所有标识符都是 英文状态 的 ！\n\n\n# 1. 标题&目录\n\n\n\n# 1.1 标题\n\n * Markdown标题共有 六级，和 HTML 一样\n * 区分 一级标题 → 六级标题\n   * 标题 的格式：\n     * # × 标题级数 + 空格 + 文本内容\n\n这是一段普通的文本\n\n# 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n\n# 1.2 目录\n\n * 目录的 格式：\n   * 在文档的顶部 输入 [toc] ，会根据 标题 自动生成目录 ( Table of Content )\n * 不是所有 MD编辑器 都支持目录生成\n   * Obsidian 就不支持，不过 OB 是自带大纲的，就是目录的效果\n\n输入下方内容会生成一个目录：\n\n[toc]\n\n\n1\n2\n3\n\n\n\n\n\n\n\n# 2. 斜体&粗体\n\n\n\n# 2.1 斜体\n\n * 斜体 的格式：\n   1. * + 文本内容 + *\n   2. _ + 文本内容 + _ ( 下划线 )\n * 说明：\n   * 斜体文本，首尾只有 单个 标识符\n\n这是一段普通文本\n\n*这里是一段斜体文本*\n_这也是一段斜体文本_\n\n\n1\n2\n3\n4\n\n\n# 示范\n\n这是一段普通文本\n\n这里是一段斜体文本 这也是一段斜体文本\n\n\n\n# 2.2 粗体\n\n * 粗体 的格式：\n   \n   1. ** + 文本内容 + **\n   2. __ + 文本内容 + __ (这里是两个 _ )\n\n * 说明：\n   \n   * 粗体文本，首尾各有 两个 标识符\n\n这是一段普通文本\n\n**这里是一段加粗文本**\n__这也是一段加粗文本__\n\n\n1\n2\n3\n4\n\n\n# 示范\n\n这是一段普通文本\n\n这里是一段加粗文本 这也是一段加粗文本\n\n\n\n# 2.3 粗斜体 (斜粗体)\n\n * 粗斜体 的格式：\n   \n   1. *** + 文本内容 + ***\n   2. ___ + 文本内容 + ___ （ 这里是3个 _ )\n   3. **_ + 文本内容 + _**\n   4. __* + 文本内容 + *__\n   5. *__ + 文本内容 + __*\n   6. _** + 文本内容 + **_\n\n * 说明：\n   \n   * 粗斜体文本，首尾各有 三个 标识符\n\n这是一段普通文本\n\n***粗斜体文本1***\n___粗斜体文本2___\n**_粗斜体文本3_**\n__*粗斜体文本4*__\n*__粗斜体文本5__*\n_**粗斜体文本6**_\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 示范\n\n这是一段普通文本\n\n粗斜体文本1 粗斜体文本2 粗斜体文本3 粗斜体文本4 粗斜体文本5 粗斜体文本6\n\n\n\n# 2.4 斜体包含粗体\n\n * 斜体中包含粗体 的格式：\n   \n   1. * + 斜体文本 + ** + 粗体文本 + ** + 斜体文本 + *\n   2. _ + 斜体文本 + __ + 粗体文本 + __ + 斜体文本 + _ （ 这里是两个 _ )\n   3. * + 斜体文本 + __ + 粗体文本 + __ + 斜体文本 + *\n   4. _ + 斜体文本 + ** + 粗体文本 + ** + 斜体文本 + _\n\n * 说明：\n   \n   * 斜体 中包含 粗体，其实就是嵌套的关系，外层 是 斜体，内层 是 粗体\n   * 外层是斜体，标识符是单个；内层是粗体，标识符是两个\n   * 因为 粗体 是被包裹在 斜体 中的，所以显示效果为 斜粗体\n\n这是一段普通文本\n\n*这里是一段斜体中**包含粗体**的文字*\n_这也是一段斜体中**包含粗体**的文字_\n*这又是一段斜体中__包含粗体__的文字*\n_这还是一段斜体中**包含粗体**的文字_\n\n\n1\n2\n3\n4\n5\n6\n\n\n# 示范\n\n这是一段普通文本\n\n这里是一段斜体中包含粗体的文字 这也是一段斜体中包含粗体的文字 这又是一段斜体中__包含粗体__的文字 这还是一段斜体中包含粗体的文字\n\n\n\n# 2.5 粗体包含斜体\n\n * 粗体中包含斜体 的格式：\n   1. ** + 粗体文本 + * + 斜体文本 + * + 粗体文本 + **\n   2. __ + 粗体文本 + _ + 斜体文本 + _ + 粗体文本 + __ （ 这里是两个 _ )\n   3. ** + 粗体文本 + _ + 斜体文本 + _ + 粗体文本 + **\n   4. __ + 粗体文本 + * + 斜体文本 + * + 粗体文本 + __\n * 说明：\n   * 粗体 中包含 斜体，也就是嵌套的关系，外层 是 粗体，内层 是 斜体\n   * 外层是粗体，标识符是两个；内层是斜体，标识符是单个\n   * 因为 斜体 是被包裹在 粗体 中的，所以显示效果为 粗斜体\n\n这是一段普通文本\n\n**这里是一段粗体中*包含斜体*的文字**\n__这也是一段粗体中_包含斜体_的文字__\n**这又是一段粗体中_包含斜体_的文字**\n__这还是一段粗体中*包含斜体*的文字__\n\n\n1\n2\n3\n4\n5\n6\n\n\n# 示范\n\n这是一段普通文本\n\n这里是一段粗体中包含斜体的文字 这也是一段粗体中_包含斜体_的文字 这又是一段粗体中_包含斜体_的文字 这还是一段粗体中包含斜体的文字\n\n\n\n\n\n\n# 3. 线\n\n\n\n# 3.1 水平分割线\n\n * 水平分割线由至少 3 个 * 或 - 组成\n\n下面是一条水平分割线：\n---\n***\n\n\n1\n2\n3\n\n\n# 示范\n\n----------------------------------------\n\n----------------------------------------\n\n\n\n# 3.2 文本删除线\n\n * 删除线 的格式：\n   * ~~ + 文本内容 +~~ 首尾各加两个 ~ 波浪号\n\n~~这是一段加了删除线的文本~~\n\n\n1\n\n\n# 示范\n\n这是一段加了删除线的文本\n\n\n\n# 3.3 文本下划线\n\n * 下划线的格式，和 HTML 是一样的\n   * <u> + 文本内容 + </u>\n\n<u>这是一段加了下划线的文本</u>\n\n\n1\n\n\n# 示范\n\n这是一段加了下划线的文本\n\n\n\n\n\n\n# 4. 列表&引用\n\n\n\n# 4.1 有序列表\n\n * 有序列表 的格式：\n   \n   * 1. + 空格 + 文本内容\n\n * 说明：\n   \n   * 输入文本内容后，敲击 Enter 自动补全格式，并进入 下个 有序列表\n   * 若需要在同个列表内，增加 换行显示 的内容 (但不进入下个列表) 敲击 Shift + Enter ，即可另起一行输入文本\n   * 在有序列表的中间，插入一个新的列表，后面列表的 数字序号 会自动 递进 一层\n   * 即便在源代码模式中修改了数字序号，渲染界面依然是 依照顺序 显示的\n\n1. 这是第一个有序列表 \x3c!-- (Enter) --\x3e\n2. 这是第二个有序列表 \x3c!-- (Enter) --\x3e\n3. 这是第三个有序列表\n\n\n1. 这是第一个有序列表 \x3c!-- (Shift + Enter) --\x3e\n   这是同个列表下，另起一行的文本内容 \x3c!-- (Enter) --\x3e\n2. 这是第二个有序列表 \x3c!-- (Shift + Enter) --\x3e\n   这是同个列表下，另起一行的文本内容\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 示范\n\n 1. 这是第一个有序列表\n\n 2. 这是第二个有序列表\n\n 3. 这是第三个有序列表\n\n 4. 这是第一个有序列表 这是同个列表下，另起一行的文本内容\n\n 5. 这是第二个有序列表 这是同个列表下，另起一行的文本内容\n\n# 补充\n\n * 由于有序列表存在强制排序性，它的数字序号必然是逐一递进的 若你希望内容前的数字，不依照递进顺序排序，或者以 整百，整十数 排序\n * 可以配合无序列表，在无序列表中输入：\n   * 数字 + . + 内容 #注意 点号 与 内容 之间，没有空格 (其实有空格也行，就是会感觉有点奇怪)\n\n- 10.这是无序列表下，整十数排列的内容\n- 20.这是无序列表下，整十数排列的内容\n- 30.这是无序列表下，整十数排列的内容\n\n\n- 100.这是无序列表下，整百数排列的内容\n- 200.这是无序列表下，整百数排列的内容\n- 300.这是无序列表下，整百数排列的内容\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n效果：\n\n * 10.这是无序列表下，整十数排列的内容\n * 20.这是无序列表下，整十数排列的内容\n * 30.这是无序列表下，整十数排列的内容\n\n\n * 100.这是无序列表下，整百数排列的内容\n * 200.这是无序列表下，整百数排列的内容\n * 300.这是无序列表下，整百数排列的内容\n\n\n\n# 4.2 无序列表\n\n * 无序列表 的格式：\n * - + 空格 + 文本内容\n * 说明：\n   * 输入文本内容后，敲击 Enter 自动补全格式，并进入 下个 无序列表\n   * 若需要在同个列表内，增加换行显示的内容 (但不进入下个列表) 敲击 Shift + Enter ，即可另起一行输入文本\n * 补充：\n   * 在Obsidian中，按下 Ctrl + Enter\n   * 即可快速生成一个无序列表\n\n- 这是第1个无序列表 \x3c!-- (Enter) --\x3e\n- 这是第2个无序列表 \x3c!-- (Enter) --\x3e\n- 这是第3个无序列表\n\n- 这是第一个无序列表 \x3c!-- (Shift + Enter) --\x3e\n  这是同个列表下，另起一行的文本内容\n- 这是第二个无序列表 \x3c!-- (Shift + Enter) --\x3e\n  这是同个列表下，另起一行的文本内容\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 示范\n\n * 这是第1个无序列表\n * 这是第2个无序列表\n * 这是第3个无序列表\n\n\n * 这是第一个无序列表 这是同个列表下，另起一行的文本内容\n * 这是第二个无序列表 这是同个列表下，另起一行的文本内容\n\n\n\n# 4.3 引用\n\n * 引用 的格式：\n   * > + 文本内容 （不需要空格)\n * 说明：\n   * 同个引用段落内的换行直接敲击 Enter 即可\n   * 若需添加 第二个独立引用段落 ，连续敲击 两下 Enter 即可\n\n>这是第一段引用文本的第1行 \x3c!-- (Enter) --\x3e\n>这是第一段引用文本的第2行 \x3c!-- (Enter) --\x3e\n\x3c!-- (Enter) --\x3e\n>这是第二段引用文本的第1行 \x3c!-- (Enter) --\x3e\n>这是第二段引用文本内第2行\n\n\n1\n2\n3\n4\n5\n\n\n# 示范\n\n> 这是第一段引用文本的第1行 这是第一段引用文本的第2行\n\n> 这是第二段引用文本的第1行 这是第二段引用文本的第2行\n\n\n\n# 4.4 缩进&退格\n\n在列表和引用的书写过程中，我们需要利用 ==缩进== 与 ==退格== ，让文章肌理分明，更具层级\n\n * 缩进：\n   \n   1. Tab\n   2. Ctrl + [   (左中括号)\n\n * 退格：\n   \n   1. Shift + Tab\n   2. Ctrl + ] （右中括号）\n\n\n# 4.4.1 有序列表的缩&退\n\n1. 第一级有序列表1 \x3c!-- (Enter) --\x3e\n\t1. 第二级有序列表1    \x3c!-- 写文本之前，先( Tab 或 Ctrl + ] ) ；写完文本后，再(Enter) --\x3e\n\t2. 第二级有序列表2 \x3c!-- (Enter) --\x3e\n2. 第一级有序列表2    \x3c!-- 写文本前，先 ( Shift + Tab 或 Ctrl + [ ) --\x3e\n\n\n1\n2\n3\n4\n\n * 补充说明：\n   * 有序列表的数字序号，即便你在源代码模式里 强行改掉 数字，它仍然会 依照顺序 显示\n\n# 示范\n\n 1. 第一级有序列表1\n    1. 第二级有序列表1\n    2. 第二级有序列表2\n 2. 第一级有序列表2\n\n\n# 4.4.2 无序列表的缩&退\n\n- 第一级无序列表1 \x3c!-- (Enter) --\x3e\n\t- 第二级无序列表1  \x3c!-- 写文本前，先( Tab 或 Ctrl + ] ) ；写完后，再(Enter) --\x3e\n\t- 第二级无序列表2 \x3c!-- (Enter) --\x3e\n- 第一级无序列表2  \x3c!-- 写文本前，先 ( Shift + Tab 或 Ctrl + [ ) --\x3e\n\n\n1\n2\n3\n4\n\n\n# 示范\n\n * 第一级无序列表1\n   * 第二级无序列表1\n   * 第二级无序列表2\n * 第一级无序列表2\n\n\n# 4.4.3 引用的缩&退\n\n * 引用的 缩进 和列表 不同\n   * 引用需另起一行，并额外多打一个 > 来完成 缩进\n * 引用的 退格 与列表 相同\n   1. Shift + Tab\n   2. Ctrl + ] （右中括号）\n\n>第一级引用1 \x3c!-- (enter) --\x3e\n>>第二级引用1 \x3c!-- 先打1个 > (这里的第一个 > 是会自动补充的，只需额外增补1个即可) ，再(enter) --\x3e\n>>第二级引用2 \x3c!-- (enter) --\x3e\n>第一级引用2   \x3c!-- 写文本前，先 ( Shift + Tab 或 Ctrl + [ ) --\x3e\n\n\n1\n2\n3\n4\n\n\n# 示范\n\n> 第一级引用1\n> \n> > 第二级引用1 第二级引用2\n> \n> 第一级引用2\n\n\n * 补充： 在 Obsidian 中，引用的退格是不太一样的\n * **Obsidian **中，如果想让已经缩进的引用 退回一层\n   * 得使用 Shift + Enter ，配合方向键，在多个 > 之间灵活断行 并在下一行 根据需要 选择性补充 >\n * 这个用文字比较难以描述，这里选择用2个带键位的 Gif图 来描述\n\nGif演示1：\n\n\n\n\n\n * 效果1：\n\n> 111\n> \n> > 222\n> > \n> > > 333\n> > \n> > 444\n> \n> 555\n\n\nGif演示2：\n\n\n\n\n\n * 效果2：\n\n> 111\n> \n> > 222\n> > \n> > > 333\n> \n> > 444\n> > \n> > > 555\n> \n> 666\n\n777\n\n\n# 4.4.4 有序&无序&引用 连续套娃\n\n * 有序列表、无序列表、引用 三者之间，可以相互嵌套\n * 核心键 ： Shift + Enter & Enter & Shift + Tab ( 或 Ctrl + [ )\n   * Shift + Enter 在切换格式的嵌套中，是 自带一层 缩进 效果的\n\n1. 第一级 有序列表1 \x3c!-- (Shift + Enter) --\x3e\n\t- 第二级 无序列表1 \x3c!-- (Shift + Enter) --\x3e\n\t\t>第三级 引用1  \x3c!-- (Enter) --\x3e\n\t\t\t- 第四级 无序列表2 \x3c!-- (Shift + Enter) --\x3e\n            \t1. 第五级 有序列表2 \x3c!-- (Enter) --\x3e\n            - 第四级 无序列表3   \x3c!-- 写文本前，先( Shift + Tab 或 Ctrl + [ ) ；写完后再 (Enter) --\x3e\n        >第三级 引用2  \x3c!-- 写文本前，先( Shift + Tab 或 Ctrl + [ ) ；写完后再 (Enter × 2) --\x3e\n    - 第二级 无序列表4  \x3c!-- 写文本前，先( Shift + Tab 或 Ctrl + [ ) --\x3e\n2. 第一级 有序列表3  \x3c!-- 写文本前，先( Shift + Tab 或 Ctrl + [ ) --\x3e\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 示范\n\n 1. 第一级 有序列表1\n    \n    * 第二级 无序列表1\n      \n      > 第三级 引用1\n      > \n      >  * 第四级 无序列表2\n      >    1. 第五级 有序列表2\n      >  * 第四级 无序列表3\n      > \n      > 第三级 引用2\n    \n    * 第二级 无序列表4\n\n 2. 第一级 有序列表3\n\n# 4.4.5 Obsidian 的一些缩退问题\n\n * Obsidian 在列表首行使用缩进的时候，后续的列表会出现一些问题\n   * Tab 和 Shift + tab 会无法 缩进 退格\n     * 可以使用 Ctrl + ] 与 Ctrl + [ 来解决问题\n\n- - 这是第一段就被缩进的列表\n\t- 这是第二段被再次缩进的列表  \x3c!-- 这里需按两次 Ctrl + ] ,Tab键是无效的 --\x3e\n  - 这是第三段列表  \x3c!-- Ctrl + [ --\x3e\n\n\n1\n2\n3\n\n * * 这是第一段就被缩进的列表 - 这是第二段被再次缩进的列表\n     * 这是第三段列表\n\n\n\n\n\n\n# 5. 网页链接与图像\n\n\n\n# 5.1 网页链接\n\n * 网页链接的 格式：\n   * [ + 显示文本内容 + ] + ( + 链接地址 + 空格 + " + 提示信息文本 + " + )\n * 说明：\n   * 显示文本内容，是在渲染界面实际 可见 的文本，用以 说明 链接\n   * 提示信息文本，需鼠标悬停于 显示文本内容 方可触发，用于增加额外提示信息\n     * #注意 "提示信息文本" 是可选项，一般不会填\n     * 一般来讲，需按住 Ctrl + 鼠标左键点击 才可跳转链接，不过也有 直接鼠标点击 就能跳转的\n\n[显示文本内容](链接地址 "提示信息文本")\n\n[百度一下，你就知道](http://www.baidu.com "按住Ctrl点击跳转百度")\n\n\n1\n2\n3\n\n\n示范：\n\n百度一下，你就知道\n\n\n# 5.1.1链接的加粗\n\n * 格式有两种：\n   \n   1. 把一对 ** 加在 ==显示文本内容==的首尾\n      \n      * 格式1：[**显示文本内容**](链接地址)\n      * 效果： 百度一下，你就知道\n   \n   2. 把一对 ** 加在 链接格式==整体== 的首尾\n      \n      * 格式2：**[显示文本内容](链接地址)**\n      * 效果： 百度一下，你就知道\n\n\n\n\n\n\n# 5.2 图像\n\n * 图像格式：\n   * 图像格式，就是在网页链接前面加个 ! (英文格式的)，! 代表 可见\n   * 图片的提示信息，和网页链接一样，写在 " " 内\n   * [ ] 方括号里的文字信息在 Markdown 没啥实质的作用，只是方便在源代码模式下，知道这个图片是什么，在渲染界面是不会显示的。有点类似于HTML img标签 里的 alt属性。\n\n![文字信息](图片链接 "提示文本信息")\n\n![湘湖1](https://z3.ax1x.com/2021/08/06/fuNkXq.jpg "湘湖一角")\n\n\n1\n2\n3\n\n\n * 补充：\n   \n   * 图像链接可以是本地的，也可以是在线的\n     * 本地图像直接 Ctrl + C 黏贴，Ctrl + V 复制 就可以\n     * 在线图像推荐使用 图床\n   * 调整图像的大小需要使用 HTML 和 CSS，在 Typora编辑器 中右键可以直接缩放图片 本质是转成了HTML的格式，最后会有一个 style="zoom: %;" ，这里数值可以自己修改\n   * 如果有使用 Obsidian 的朋友，在线图片链接是通用的。不过，因为 Obsidian 是双向链笔记 它的本地图片格式不太一样\n     * ![[图片名]]\n       * Obsidian 中的图片是以双链的格式引用在目标笔记中，用 ! 使它可见\n       * Obsidian的图片设置大小是用 | 分隔，后面写宽度数值，单位是px。 设定好宽度，高度会自动等比例调整\n         * ![[图片名|宽度数值]] - 若想自主调整图片宽高，则用： - ![[图片名|宽度数值x高度数值]] - #提示 这里的 x 是 英文字母x\n     * 如果是在线图床，需要调整图片大小：\n       * ![图床|宽度数值](链接地址)\n\n# 示范\n\n\n\n\n\n\n\n\n# 6. 表格\n\n * Markdown的表格，比HTML简单很多\n   * | 是构成表格的主要 框架\n   * - 区分 表头 和 表格主体\n   * : 控制 表格内 文本内容 的 对齐方式\n   * **Typora编辑器中 ** 输入 Ctrl + T 即可快速插入表格，自由定义样式\n\n|这里是表头1|这里是表头2|这里是表头3|\n|:-|:-:|-:|    \x3c!--区分表头和表格主体，:代表文本对齐方式，分别是左对齐，居中对齐，右对齐--\x3e\n|单元格数据1|单元格数据2|单元格数据3|\n|单元格数据4|单元格数据5|单元格数据6|\n\n\n1\n2\n3\n4\n\n\n# 示范\n\n这里是表头1   这里是表头2   这里是表头3\n单元格数据1   单元格数据2   单元格数据3\n单元格数据4   单元格数据5   单元格数据6\n\n\n\n# 6.1 表格中文本内容的换行\n\n * Mardown中表格，它的宽高是由 单元格数据内的文本内容 撑开 的\n * 当我们输入一段很长很长的文本，它所在的单元格会变得过宽\n\n如下图所示：\n\n表头1                                   表头2\n这是一段很长很长很长很长很长很长很长很长很长很长很长很长很长很长的文本   普通文本\n\n * 若想对一段长文本进行换行，可以在 中间 插入一个 <br> （ 换行标签 )\n\n| 表头1 |  表头2 |\n|:-:|:-:|\n|这是第一行文本<br>这是另起一行的文本|普通文本|\n\n\n1\n2\n3\n\n\n# 示范\n\n表头1         表头2\n这是第一行文本     普通文本\n这是另起一行的文本\n\n\n\n\n\n\n# 7. 代码域\n\n\n\n# 7.1 行内代码\n\n * 行内代码 的格式：\n   * 输入两个 ` 反引号 ，在中间写代码内容\n * 补充：\n   * 行内代码不一定非得写代码，也可以作为**着重标记**，突出显示内容\n   * 行内代码中，源代码界面和渲染界面是完全一致的，标识符会失效\n   * 所谓行内代码： 只要你的屏幕足够宽，它就不会换行\n\n`这是一段行内代码`\n\n`<table border="1" cellspacing="0" width="500" height="500">`\n\n`print("Hello, World!")`\n\n`这是一行突出显示的文本内容`\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 示范\n\n<table border="1" cellspacing="0" width="500" height="500">\n\n\nprint("Hello, World!")\n\n\n这是一行突出显示的文本内容\n\n\n\n# 7.2 代码块\n\n * 代码块 的格式：\n   1. 在首行和末行各加 三个 ` 反引号\n   * ``` + 语言种类 代码内容 ```\n   2. 在首行和末行各加 三个 ~ 波浪号\n      * ~~~ + 语言种类 代码内容 ~~~\n * 补充：\n   * 在代码块也不一定要写代码，可以写一段突出的文本内容，语言类型可以填写 txt 或者 干脆不写\n   * 代码块中，源代码界面和渲染界面是完全一致的，标识符会失效\n   * 在 Typora编辑器 ，用键盘按键脱离代码块区域，需输入： Ctrl + Enter\n\n```语言种类\n代码内容\n代码内容\n代码内容\n```\n\n下面是HTML代码块\n\n```html\n<table border="1">\n    <tr>\n        <td>row 1, cell 1</td>\n        <td>row 1, cell 2</td>\n    </tr>\n    <tr>\n        <td>row 2, cell 1</td>\n        <td>row 2, cell 2</td>\n    </tr>\n</table>\n```\n\n下面是CSS代码块\n\n```css\n.box {\n\twidth: 600px;\n\theight: 400px;\n\tmargin: 100px auto;\n\tbackground-image: linear-gradient(black 33.3%,red 33.3%, red 66.6%, yellow 66.6%, yellow);\n}\n```\n\n下面是JavaScript代码块\n\n```js\n    // 定义一个30个整数的数组，按顺序分别赋予从2开始的偶数；然后按顺序每五个数求出一个平均值，放在另一个数组中并输出。试编程\n    let arr = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60]\n    let newarr = [];\n    for (let i = 0, count = 0, sum = 0, len = arr.length; i < len; i++) {\n        sum += arr.shift();\n        count++;\n        if (count % 5 === 0) {\n            newarr.push(sum / 5);\n            sum =  0;\n        }\n    }\n    console.log(newarr);\n\n    let arr = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60]\n    let newarr = [];\n    for (let i = 0, len = arr.length; i < len / 5; i++) {\n        let subarr = arr.splice(0, 5)\n        for (let j = 0, sum = 0; j < subarr.length; j++) {\n            sum += subarr[j];\n        }\n        newarr.push(sum / 5);\n    }\n    console.log(newarr);\n```\n\n\n下面是Python代码块\n\n```python\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\ni = 2\nwhile(i < 100):\n   j = 2\n   while(j <= (i/j)):\n      if not(i%j): break\n      j = j + 1\n   if (j > i/j) : print i, " 是素数"\n   i = i + 1\n\nprint "Good bye!"\n```\n\n下面是一块突出显示的文本\n\n```txt\n这是一段\n突出显示的\n文本内容\n```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n\n\n# 示范\n\n<table border="1">\n    <tr>\n        <td>row 1, cell 1</td>\n        <td>row 1, cell 2</td>\n    </tr>\n    <tr>\n        <td>row 2, cell 1</td>\n        <td>row 2, cell 2</td>\n    </tr>\n</table>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n.box {\n\twidth: 600px;\n\theight: 400px;\n\tmargin: 100px auto;\n\tbackground-image: linear-gradient(black 33.3%, red 33.3%, red 66.6%, yellow 66.6%, yellow);\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n// 定义一个30个整数的数组，按顺序分别赋予从2开始的偶数；然后按顺序每五个数求出一个平均值，放在另一个数组中并输出。试编程\nlet arr = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60]\nlet newarr = [];\nfor (let i = 0, count = 0, sum = 0, len = arr.length; i < len; i++) {\n\tsum += arr.shift();\n\tcount++;\n\tif (count % 5 === 0) {\n\t\tnewarr.push(sum / 5);\n\t\tsum =  0;\n\t}\n}\nconsole.log(newarr);\n\nlet arr = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60]\nlet newarr = [];\nfor (let i = 0, len = arr.length; i < len / 5; i++) {\n\tlet subarr = arr.splice(0, 5)\n\tfor (let j = 0, sum = 0; j < subarr.length; j++) {\n\t\tsum += subarr[j];\n\t}\n\tnewarr.push(sum / 5);\n}\nconsole.log(newarr);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\ni = 2\nwhile(i < 100):\n   j = 2\n   while(j <= (i/j)):\n      if not(i%j): break\n      j = j + 1\n   if (j > i/j) : print i, " 是素数"\n   i = i + 1\n\nprint "Good bye!"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n这是一段\n突出显示的\n文本内容\n\n\n1\n2\n3\n\n\n\n# 7.2.1 代码块的嵌套\n\n\n格式：\n\n * 使用4个 ` 包裹 3个 `\n\n# 示范\n\n````txt\n```js\n// 3. 输出 100以内(不包括100) 所有偶数的和\n// 这类求和问题的核心 ： 利用循环  (总和 = 旧数的和 + 新数)\n\nlet sum = 0;\n\nfor (let i = 1, sum = 0; i < 100; i++) {\n if (i % 2 == 0) {\n // 筛选偶数\n sum += i; // sum = sum + i // 累加偶数并赋值给sum\n // sum为(旧的，已经进入循环的数)的和，i 为新进入循环的数。当加到(最后一个新数i)时，sum就是最后的 总和\n }\n}\n\nconsole.log(sum); // 打印总和\n```\n````\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n如果要再套一层，就在最外层 加 5个 ` ，以此类推……\n\n\n\n# 7.3 如何在行内代码里显示反引号\n\n首尾各用 两个反引号`+ 空格 包裹\n\n格式：\n\n``+空格+带`的内容+空格+``  \x3c!-- 不要忘记前后的两个空格 --\x3e\n\n`` 这是一段能显示`反引号`的行内代码 ``\n\n\n1\n2\n3\n\n\n效果：\n\n这是一段能显示`反引号`的行内代码\n\n\n\n\n\n\n# 8. 任务列表（待办）\n\n * 任务列表 的格式：\n   \n   * - + 空格 +[ ] +空格 + 任务列表内容 ( 中括号[ ] 里面必须有个空格)\n   * 给待办任务列表打 √ ，变成 已办\n     1. 在渲染界面，直接鼠标左键点击框框\n     2. 在源代码界面，在中括号内输入 英文字母x\n        * 部分编辑器，在 中括号内 输入任意字符都可以打 √ ( 例如 Obsidian )\n\n * 补充：\n   \n   * 大部分 MD编辑器 支持输入第一个任务列表后，按下 Enter 进入下一行会 自动补全待办格式\n   * 在Obsidian中，连续输入两次 Ctrl + Enter ，即可生成一个待办列表\n     * 再输入一次 Ctrl + Enter ，会在待办列表 打 √\n\n * 格式：\n\n- [ ] 待办任务列表1\n- [ ] 待办任务列表2\n- [x] 已办任务列表1    \x3c!-- 英文字母X --\x3e\n- [x] 已办任务列表2\n\n\n1\n2\n3\n4\n\n\n\n# 示范\n\n * [ ] 待办任务列表1\n * [ ] 待办任务列表2\n * [x] 已办任务列表1\n * [x] 已办任务列表2\n\n\n * 在 Obsidian 中，可以利用 Ctrl + Enter ，快速生成任务列表\n   1. - + 空格 + Ctrl + Enter +待办文本内容\n   2. 待办文本内容 + Ctrl + Enter ×2   ( 输入文本后，连续2次 Ctrl + enter )\n\n\n * 任务列表也是可以缩进+退格的，操作跟 无序、有序列表一样\n\n\n# 示范\n\n * [ ] 第一级待办列表1\n   * [ ] 第二级待办列表1 另起一行的第二级待办列表1\n     * [x] 第三级已办列表1\n     * [x] 第三级已办列表2\n   * [ ] 第二级待办列表2 另起一行的第二级待办列表2\n * [ ] 第一级待办列表2\n\n\n\n\n\n\n# 9. 注释\n\nMarkdown 的 注释 和 HMTL 一样，注释的内容在 渲染界面 不可见 （部分编辑器可见)\n\n * 注释 的格式：\n   * \x3c!-- 这里是注释的内容 --\x3e\n     * 注释可以是单行，也可以是多行\n   * 如果有在使用 Obsidian 的，它的注释格式是不一样的\n     * %%这是Obsidian的注释内容%%\n\n\x3c!-- 这里是一行注释 --\x3e\n\n\x3c!--\n这里是\n一段\n假装有\n很多行的\n注释\n--\x3e\n\n%%这是一行Obsidian里的注释%%\n\n%%\n这里是\n一段\n假装有\n很多行的\nObsidian里的\n注释\n%%\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 示范 (只有切换至 编辑模式 才能看到喔)\n\n%%这是一行Obsidian里的注释%%\n\n%% 这里是 一段 假装有 很多行的 Obsidian里的 注释 %%\n\n\n\n\n\n\n# 10. 变量\n\n\n\n# 10.1 网页链接变量\n\n * 网页链接变量 的格式：\n   1. 首先输入\n      * [显示文本内容] + [变量名]\n        * 变量名可以自己取，没啥限制，任意字符都可以\n   2. 在文档任意一个区域，输入：\n      * [变量名] + : + 空格 + 链接地址 （这个**空格** 不打也没事)\n\n[百度一下，你就知道][度娘]\n[知乎-有问题，就会有答案][知乎]\n\n\x3c!-- 这里是变量区域 --\x3e\n[度娘]: http://www.baidu.com\n[知乎]: https://www.zhihu.com\n\n\n1\n2\n3\n4\n5\n6\n\n\n# 示范\n\n百度一下，你就知道\n\n知乎-有问题，就会有答案\n\n\n\n# 10.2 脚注\n\n * 脚注 的格式：\n   * 在需要脚注的地方，输入：\n     * [^脚注代号] ( 脚注代号会直接显示在渲染界面 )\n       * 脚注代号可以随便命名，不过推荐使用 数字序号\n   * 在其他区域，输入：\n     * [^脚注代号] + : + 空格 + 脚注内容 （这个 空格 不打也没事)\n\n鲁迅原名是什么[^1] ，浙江哪里人[^2]\n\n\x3c!-- 这里是变量区域 --\x3e\n[^1]: 周树人\n[^2]: 绍兴人\n\n\n1\n2\n3\n4\n5\n\n\n# 示范\n\n鲁迅原名是什么^1，浙江哪里人^2\n\n\n\n\n\n\n# 11. 拓展文本格式标记\n\n * Markdown 想实现更多的文本显示效果，只能依赖HTML标记实现\n * 个人不是很推荐在 MD 中使用 HTML，不过一些简单的标记还是可以 轻度使用 的\n\n\n\n# 11.1 键盘文本\n\n * 键盘文本的 格式：\n   \n   * <kbd>键盘文本</kbd>\n   * <kbd>Ctrl</kbd> + <kbd>X</kbd>\n\n * 效果：\n   \n   * 键盘文本\n   * Ctrl + X ( 剪切 )\n\n * 说明：\n   \n   * 键盘文本也不一定非得是键盘按键，也可以作为着重文本突出显示\n     * 效果： 这也算一种着重文本的方式\n\n# 11.1.1 加粗键盘文本\n\n * 加粗键盘文本的格式有两种：\n   \n   * <kbd>**键盘文本**</kbd>\n   * **<kbd>ctrl + x</kbd>**\n\n * 效果：\n   \n   1. 键盘文本\n   2. ctrl + x\n\n\n\n# 11.2 放大文本\n\n * 放大文本 的格式：\n   \n   * 这是一段普通文本 <big>这是一段放大文本</big>\n\n * 效果：\n   \n   * 这是一段普通文本 这是一段放大文本\n\n# 11.2.1 放大粗体文本\n\n * 放大加粗文本的格式有两种：\n   1. **<big>这是一段放大粗体文本</big>**\n   2. <big>**这是一段放大粗体文本**</big>\n * 效果：\n   1. 这是一段放大粗体文本\n   2. 这是一段放大粗体文本\n\n\n\n# 11.3 缩小文本\n\n * 缩小文本 的格式：\n   * 这是一段普通文本 <small>这是一段缩小文本</small>\n * 效果：\n   * 这是一段普通文本 这是一段缩小文本\n\n# 11.3.1 缩小斜体文本\n\n * 斜体缩小文本 的格式有两种：\n   1. <small>*这是一段缩小斜体文本*</small>\n   2. *<small>这是一段缩小斜体文本</small>*\n * 效果：\n   1. 这是一段缩小斜体文本\n   2. 这是一段缩小斜体文本\n\n\n\n# 11.4 多彩文本\n\n * 多彩文本 的格式：\n   * <font color=orange>这是一段橘色文本</font>\n * 效果：\n   * 这是一段橘色文本\n     * color 里的颜色支持 英文单词，16进制，rgb，rgba\n\n\n# 11.4.1 多彩粗体文本\n\n * 只需要在上面示例的基础上，加上 加粗标识符，有两种格式：\n   1. 格式1： **<font color=teal>这是一段加粗的水鸭色文本</font>**\n      * 效果： 这是一段加粗的水鸭色文本\n   2. 格式2： <font color=teal>**这是一段加粗的水鸭色文本**</font>\n      * 效果： 这是一段加粗的水鸭色文本\n * 若上述混搭方法的样式失效 ，可以使用 纯HTML标记\n   * 格式： <strong style="color:teal;">这是一段加粗的水鸭色文本</strong> (标记略复杂，不是很推荐)\n   * 效果： 这是一段加粗的水鸭色文本\n\n\n# 11.4.2 多彩斜体文本\n\n * 跟多彩加粗文本完全一样，只需把首尾的 ** 换成 * 即可\n\n 1. 格式1： *<font color=teal>This is an italic teal text</font>*\n    * 效果： This is an italic teal text\n 2. 格式2： <font color=teal>*This is an italic teal text*</font>\n    * 效果： This is an italic teal text\n\n\n# 11.4.2 多彩粗斜体文本\n\n * 首尾换成 ***\n\n 1. 格式1： ***<font color=teal>This is a bold italic teal text</font>***\n    * 效果： This is a bold italic teal text\n 2. 格式2： <font color=teal>***This is a bold italic teal text***</font>\n    * 效果： This is a bold italic teal text\n\n\n#注意 多彩文本尽量慎用，Markdown 的核心就是 简洁精炼，注重 实质内容，而非花哨的 颜色样式\n\n\n\n\n\n\n# 12. 拓展文本显示效果\n\n * 拓展显示效果既不是原生 Markdown语法 支持的，也非 HTML标记，而是部分编辑器 提供的 额外标识符，属于拓展语法，旨在为 Markdown使用者 提供更多样式选择\n * 不同编辑器，支持不一样，这里以 Typora编辑器 为例\n\n\n\n# 12.1 文本高亮\n\n * 文本高亮 的格式：\n   * ==这里是一段高亮文本==\n * 效果：\n   * ==这里是一段高亮文本==\n\n\n\n# 12.2 上标\n\n * 用一对 ^ 包裹 (Shift+ 6)\n   * 格式： x^2^\n   * 效果： x^2^\n * Obsidian 没效果的，可以用后面会讲的 Latex\n * 或者，也可以使用 HTML标记\n   * <sup>这里是上标内容</sup>\n   * X<sup>2</sup>\n * 效果：\n   * X2\n\n\n\n# 12.3 下标\n\n * 用一对 ~ 包裹 (Shift + `)\n   * 格式： H~2~O\n   * 效果： H~2~O\n * Obsidian 没效果的，可以用后面会讲的 Latex\n * 或者，也可以使用 HTML标记\n   * <sub>这里是下标内容</sub>\n   * H<sub>2</sub>O\n * 效果：\n   * H2O\n\n\n\n# 12.4 Emoji 符号\n\n用一对 : 包裹，里面是 Emoji 符号的 语义化文本 ( Typora编辑器 中，输入 : 就会带提示器 )\n\n * 示例：\n   * :smile: :sweat: :cat: :woman_cartwheeling:\n * 效果：\n   * 😄 😓 🐱 🤸‍♀\n\n\n * 补充：\n   * 不支持上述方式的 MD编辑器或笔记软件，直接用 输入法 输入也是可以的\n   * Windows系统 用户 win + . 就可以输入 Emoji 了\n   * Obsidian 用户可以安装第三方插件来支持 Emoji 的输入，推荐两个\n     1. ==Emoji Shortcodes==\n     2. ==Emoji Toolbar==\n\n\n\n\n\n\n# 13. 转义字符\n\n * 在 Markdown 中，我们 通过 标识符 改变 文本显示效果\n * 现在我们希望它不作为标识符，而是 作为字符本身呈现出来 （不具备改变文本显示效果的功能，只是一个普通字符)\n   * 首先我们可以用前面介绍的 代码域 ，因为代码模式的显示效果就是源代码完全一致的\n   * 还有一种方法，可以利用转义字符，在这些标识符 前面 加上 反斜线 \\ ( 反斜线要紧贴在标识符前面，不能 有 空格 )\n     * 原理：\n       * \\ 的作用是让标识符 转义 变为一个普通字符，完成这个效果后，反斜线会自动隐藏\n       * 隐藏后的反斜线仅在源代码界面可见，在渲染界面不可见\n       * 反斜线只争对标识符起作用，其他字符添加 \\，\\ 不会自动隐藏\n     * 补充：\n       * 如果想给已经被加在标识符前面，会自动隐藏的 \\ 显示出来，可以在反斜线前面再加一个 \\ ，用它自己来转义自己\n         * 示例： 这里紧跟在标识符前面的反斜线\\\\*会被转义成普通字符显示出来，不会自动隐藏，且这段文件会是斜体*\n         * **效果： ** 这里紧跟在标识符前面的 反斜线\\会被转义成普通字符显示出来，不会自动隐藏，且这段文件会是斜体\n\n\n\n# 例1 以普通字符显示星号\n\n * 如何让被一对或多对 * 号 包裹的文本内容，能够正常显示 * ，且文本不改变格式\n   * \\*这段文本被一对星号包裹，但不会倾斜\\*\n     * 效果： *这段文本被1对星号包裹，但不会倾斜*\n   * \\*\\*这段文本被2对星号包裹，但不会加粗\\*\\*\n     * 效果： **这段文本被2对星号包裹，但不会加粗**\n   * \\*\\*\\*这段文本被3对星号包裹，但它既不倾斜也不加粗\\*\\*\\*\n     * 效果： ***这段文本被3对星号包裹，但它既不倾斜也不加粗***\n\n\n\n# 例2 表格内 单元格中的竖杠\n\n * 在表格中，使用 | 作为单元格的内容，但不会被识别为表格的结构，不会增加额外的单元格\n\n|表头1|表头2|\n|-|-|\n|这里的文本被\\|分隔|这里的文本也被\\|分隔|\n\n\n1\n2\n3\n\n * 效果：\n\n表头1         表头2\n这里的文本被|分隔   这里的文本也被|分隔\n\n\n#补充 该技巧可用于 Obsidian 表格内 双链的文本修饰\n\n文本修饰：\n\n在 双链[[ ]]内 以 | 引导的内容\n\n * 格式： [[链接的内容|文本修饰]]\n * 说明： 文本修饰是渲染界面实际显示的文本，便于更好地融入语境\n\n表格内的格式：\n\n在 | 前面加上 \\\n\n * [[表格内的链接内容\\|文本修饰]]\n\n示例：\n\n|                  表头1                  |                        表头2                        |\n|:---------------------------------------:|:---------------------------------------------------:|\n| [[#例2 表格内 单元格中的竖杠\\|单元格中的竖杠]] | [[#例3 不会变成代码的反引号\\|不会变成代码的反引号]] |\n\n\n1\n2\n3\n\n\n效果：\n\n表头1                           表头2\n[[#例2 表格内 单元格中的竖杠|单元格中的竖杠]]   [[#例3 不会变成代码的反引号|不会变成代码的反引号]]\n\n\n\n# 例3 不会变成代码的反引号\n\n使用 转义符号\\ 让 反引号` 变成普通字符，不再具有[[#7 1 行内代码|行内代码]]的标识符功能\n\n格式：\n\n\\`这段被反引号包裹的内容不会变成行内代码\\`\n\n效果：\n\n`这段被反引号包裹的内容不会变成行内代码`\n\n\n\n# 例4 链接中的中括号\n\n在 网页链接 的 显示文本内容 中，使用 中括号 [ ]\n\n * 在显示文本内容中，在其中一个中括号前面，加上转义符号 反斜杠 \\\n   * 格式： [链接里的 \\[中括号\\] 能被正常显示](https://www.runoob.com)\n   * 效果： 链接里的 [中括号] 能被正常显示\n\n\n\n# 例5 不是列表的连接符(横杠)\n\n * 引用一段话，一般会在换行之后，加上 - 出处\n * 因为 - 是标识符，会变成一个无序列表\n\n如下所示：\n\n> The Web, the Tree, and the String. 写作之难，在于把网状的思考，用树状结构，体现在线性展开的语句里。\n> \n>  * 史蒂芬·平克\n\n * 解决方法：\n   \n   * 在 - 前面加上 转义符号 \\\n   \n   >The Web, the Tree, and the String.\n   >写作之难，在于把网状的思考，用树状结构，体现在线性展开的语句里。\n   >\\- 史蒂芬·平克   \x3c!-- 加上转义符号 \\ , 不会变成无序列表 --\x3e\n   \n   \n   1\n   2\n   3\n   \n\n * 效果：\n\n> The Web, the Tree, and the String. 写作之难，在于把网状的思考，用树状结构，体现在线性展开的语句里。 - 史蒂芬·平克\n\n\n\n# 例6 不是标题的 #\n\n让 # 不被识别为标题标识符\n\n格式：\n\n\\# 这里的内容不会被识别为标题\n\n效果：\n\n# 这里的内容不会被识别为标题\n\n\n\n# 例7 不会注释的 %\n\n在 Obsidian 中 注释是前后各两个 % 号\n\n使用 转义符号\\，让 %% 作为普通字符显示出来，不具备注释的功能\n\n * 格式： \\%\\%这里的内容可以被显示喔\\%\\%\n * 效果： %%这里的内容可以被显示喔%%\n\n\n\n# 例8 木有链接的双链\n\nObsidian 的双向链格式是2个方括号 [[ ]] (双方)，使用 转义符号\\，让 [ ] 不再具有 双链功能\n\n格式：\n\n\\[\\[这段文本被双方包裹，但不是一个双向链\\]\\]\n\n效果：\n\n[[这段文本被双方包裹，但不是一个双向链]]\n\n\n\n# 例9 页链接里 显示文本内的 中括号\n\n使用转义符号\\，让中括号可以作为显示文本 在[[#5 1 网页链接|网页链接]]中显示出来\n\n格式：\n\n[\\[这是一个带中括号的网页链接显示文本，点击会跳转至百度\\]](https://www.baidu.com/)\n\n\n1\n\n\n效果：\n\n[这是一个带中括号的网页链接显示文本，点击会跳转至百度]\n\n\n\n# 特殊情况 文本修饰的中括号\n\n文本修饰的 中括号[ ] 不需要使用 转义符号\\\n\n示范：\n\n[[#例8 木有链接的双链|[这是一个带中括号的文本修饰]]]\n\n效果：\n\n[[#例8 木有链接的双链|[这是一个带中括号的文本修饰]]]\n\n\n\n\n\n\n# 14. 空格&换行&强制删除\n\n\n\n# 14.1 空格\n\n * 在一些编辑器或者支持MD的笔记软件里，无论你打多少个空格，它只会显示单个 空格 的距离\n   * 可以使用 HTML中 空格 的 字符实体 —— &nbsp;\n   * 若要添加 多个 空格，就输入多个 —— &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n * 格式：\n   * 这里有&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6个空格分隔\n * 效果：\n   * 这里有      6个空格分隔\n\n\n\n# 14.2 换行\n\n场景1：\n\n * 在一些编辑器或者支持MD的笔记软件里，无论你打多少个 回车，它只会显示单个 回车 的空行间距\n   * 可以使用之前表格里提到的 <br> 标签，在 单独一行 中使用，增加额外的空行间距\n   * 如果要增加 多个，就输入 多个 —— <br><br><br><br><br>\n   * #注意 当单独一行使用 <br> 标签的时候，如果前后有标题标识符或者列表标识符，确保 br元素 前后两行都是空白行\n\n格式：\n\n这里是第一段文本\n\n<br><br><br><br><br>     \x3c!-- 这里插入了5个空行间距 --\x3e\n\n这里是第二段文本\n\n\n1\n2\n3\n4\n5\n\n\n效果：\n\n这里是第一段文本\n\n\n\n\n\n\n\n\n这里是第二段文本\n\n\n\n\n\n场景2：\n\n * 在列表中也可以插入换行符\n\n- 这是一段无序列表\n  <br>     \x3c!-- 插入一个空行间距，需单独一行，上下不用预留空格 --\x3e\n  这是同一段无序列表中，空一行距离显示的内容\n- 这是第二段无序列表\n\n\n1\n2\n3\n4\n\n\n效果：\n\n * 这里是第一段无序列表\n   这里是同一段无序列表中，空一行距离显示的内容\n * 这里是第二段无序列表\n\n\n * 补充：\n   * 有一些MD编辑器或笔记软件，严格遵循MD的换行规则，你敲一个回车是没法换行的，必须在 行末 敲 2个空格，再按回车键\n     * 格式：\n       * 这里是一段想换行的文本空格 空格 Enter 这是换行后的文本\n\n\n\n# 14.3 强制删除\n\n * 很多编辑器都有英文标点自动补全功能，自动生成一对，光标落在中间 只想删除前面1个，却会把 一整对 都删掉\n * 在多个列表的嵌套中，也许会遇到一些 无法被删除 的 列表标识符\n * 解决方法： 使用 Shift + Backspace 即可强制删除\n   * Bcakspace   ( 退格键 )\n\n\n\n\n\n\n# 15. 嵌入\n\n * 嵌入都是依赖 HTML标签 实现的，嵌入的都是在线链接格式\n   * 如果是本地的，Obsidian 中音频是有自带的可录制的录音机插件的，其他的 音频、视频 直接复制黏贴就可以了，也可以直接拖拽到OB的笔记界面\n     * 其他的媒体文件在 Obsidian 也和图片一样，以双链的格式引用在目标笔记中，使用 ! 使它可见\n\n\n\n# 15.1 嵌入音频\n\n * 格式：\n   \n   * <audio controls="controls" preload="none" src="音频链接地址"></audio>\n\n * 示例：\n\n<audio controls="controls" preload="none" src="https://www.ldoceonline.com/media/english/exaProns/p008-001803372.mp3?version=1.2.37"></audio>\n\n\n1\n\n * 效果：\n\n\n\n\n\n# 15.2 嵌入视频\n\n * 格式：\n\n<video width="600" height="420" controls>\n  <source src="movie.mp4" type="video/mp4">\n  <source src="movie.ogg" type="video/ogg">\n  <source src="movie.webm" type="video/webm">\n</video>\n\n\n1\n2\n3\n4\n5\n\n * 说明：\n   * width ( 宽度 ) height ( 高度 ) ，可以自己设置，直接输入数字即可，单位默认是 px(像素) 也可以使用 百分比 width=100% 代表水平撑满整个窗口 height=50% 代表垂直撑满半个窗口\n   * Video标签 支持的视频格式 ：MP4 ogg webm\n\n\n\n# 15.3 嵌入页面\n\n * 格式： <iframe width=600 height=400 src="页面链接地址" scrolling="auto" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>\n\n<iframe width=600 height=400 src="https://www.runoob.com/html/html-tutorial.html" scrolling="auto" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>\n\n\n1\n\n * 效果：\n\n\n * iframe标签 除了嵌入页面，也可以嵌入在线视频，主流的视频网站都会提供嵌入代码\n   \n   * 具体可以看这个 iframe视频嵌入教程\n   * B站 的视频，得在 // 前面补充 http:\n   * 不是所有的 编辑器和笔记软件 都支持这个\n\n * 示例：\n\n<iframe width=600 height=400 src="http://player.bilibili.com/player.html?aid=20190823&bvid=BV1yW411s7og&cid=32964980&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>\n\n\n1\n\n * 宽高设置和前面的 video 一样\n\n\n * 效果：\n\n\n\n\n\n\n# 16. Latex 数学公式\n\n * 主要用于 数学公式 与 化学公式 的书写\n\n\n\n# 16.1 行内公式\n\n * 格式：\n   \n   * $ + 行内公式 + $\n\n\n * 示例：\n   * $x^2 + 2x + 5 + \\sqrt x = 0$\n   * $\\ce{CO2 + C -> 2 CO}$\n   * $\\ce{CO2 + C -> 2 CO}$\n   * $\\ce{2Mg + O2 ->[燃烧] 2 MgO}$\n\n\n * 效果：\n   * $x^2 + 2x + 5 + \\sqrt x = 0$\n   * $e^{i\\pi} + 1 = 0$\n   * $\\ce{CO2 + C -> 2 CO}$\n   * $\\ce{2Mg + O2 ->[燃烧] 2 MgO}$\n\n\n\n# 16.2 公式块\n\n * 格式：\n   * $$ 公式块 $$\n\n\n * 示例：\n\n% 化学公式\n$$\n\\ce{Zn^2+  <=>[+ 2OH-][+ 2H+]  $\\underset{\\text{amphoteres Hydroxid}}{\\ce{Zn(OH)2 v}}$  <=>[+ 2OH-][+ 2H+]  $\\underset{\\text{Hydroxozikat}}{\\ce{[Zn(OH)4]^2-}}$}\n$$\n\n\n1\n2\n3\n4\n\n\n% 麦克斯韦方程组\n$$\n\\begin{array}{lll}\n\\nabla\\times E &=& -\\;\\frac{\\partial{B}}{\\partial{t}}\n\\ \\nabla\\times H &=& \\frac{\\partial{D}}{\\partial{t}}+J\n\\ \\nabla\\cdot D &=& \\rho\n\\ \\nabla\\cdot B &=& 0\n\\ \\end{array}\n$$\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n% 薛定谔方程\n$$\ni\\hbar\\frac{\\partial \\psi}{\\partial t} = \\frac{-\\hbar^2}{2m} \\left(\\frac{\\partial^2}{\\partial x^2} + \\frac{\\partial^2}{\\partial y^2}+\\frac{\\partial^2}{\\partial z^2} \\right) \\psi + V \\psi\n$$\n\n\n1\n2\n3\n4\n\n\n * 效果：\n\n$$ % 化学公式 \\ce{Zn^2+ <=>[+ 2OH-][+ 2H+] $\\underset{\\text{amphoteres Hydroxid}}{\\ce{Zn(OH)2 v}}$ <=>[+ 2OH-][+ 2H+] $\\underset{\\text{Hydroxozikat}}{\\ce{[Zn(OH)4]^2-}}$} $$\n\n\n$$ % 麦克斯韦方程组 \\begin{array}{lll} \\nabla\\times E &=& -;\\frac{\\partial{B}}{\\partial{t}} \\ \\nabla\\times H &=& \\frac{\\partial{D}}{\\partial{t}}+J \\ \\nabla\\cdot D &=& \\rho \\ \\nabla\\cdot B &=& 0 \\ \\end{array} $$\n\n\n$$ i\\hbar\\frac{\\partial \\psi}{\\partial t} = \\frac{-\\hbar^2}{2m} \\left(\\frac{\\partial^2}{\\partial x^2} + \\frac{\\partial^2}{\\partial y^2}+\\frac{\\partial^2}{\\partial z^2} \\right) \\psi + V \\psi $$\n\n * 补充：\n   * 需要详细教程的，可戳下方链接\n   * Latex详细教程\n\n\n\n\n\n\n# 17. Mermaid\n\n * 一些 MD编辑器 和 笔记软件 支持通过 Mermaid 及其所提供的 编译器 来为用户提供图表的绘制功能\n\n * 这里只提供一些演示的图表，具体教程可戳下方\n   \n   * [[MOC Mermiad 教程 Obsidian版| Mermiad 超级教程 Obsidian版]]\n\n\n\n# 17.1 流程图\n\n\n源码1：\n\n```mermaid\ngraph TB\n\t%% s=start  e=end  f=fork  n=normal\n\n\ts([开始])--\x3ef1{{if条件}};\n\n\t%% 分支点2\n\tf1--true--\x3en1[if语句块]--\x3ee([结束]);\n\tf1--false--\x3ef2{{else if条件}};\n\n\t%% 分支点1\n\tf2--true--\x3en2[else if语句块]--\x3ee;\n\tf2--false--\x3en3[else语句块]--\x3ee;\n```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n渲染1：\n\ngraph TB\n\t%% s=start  e=end  f=fork  n=normal\n\n\ts([开始])--\x3ef1{{if条件}};\n\n\t%% 分支点1\n\tf1--true--\x3en1[if语句块]--\x3ee([结束]);\n\tf1--false--\x3ef2{{else if条件}};\n\n\t%% 分支点2\n\tf2--true--\x3en2[else if语句块]--\x3ee;\n\tf2--false--\x3en3[else语句块]--\x3ee;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n源码2：\n\n```mermaid\ngraph LR\n\t%% s=start  e=end  f= fork n=normal\n\n\t%% 虚线\n\ts[朱百六]-.->|子|n1[朱四九]-.->|子|n2[朱五四]-.->|子|f1_帝((朱八八))\n\n\t%% 分支点 朱八八\n\tf1_帝--\x3e|长子|f2[朱标]\n\tf1_帝--\x3e|次子|n3[朱樉]\n\tf1_帝--\x3e|三子|n4[朱棢]\n\tf1_帝--\x3e|四子|n5_帝((朱棣))\n\n\t%% 分支点 朱标\n\tf2--\x3e|长子|e1[朱雄英]\n\tf2--\x3e|次子|e2_帝((朱允炆))\n\n\tn5_帝--\x3e|长子|e3[朱高炽]\n```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n渲染2：\n\ngraph LR\n\t%% s=start  e=end  f= fork n=normal\n\n\t%% 虚线\n\ts[朱百六]-.->|子|n1[朱四九]-.->|子|n2[朱五四]-.->|子|f1_帝((朱八八))\n\n\t%% 分支点 朱八八\n\tf1_帝--\x3e|长子|f2[朱标]\n\tf1_帝--\x3e|次子|n3[朱樉]\n\tf1_帝--\x3e|三子|n4[朱棢]\n\tf1_帝--\x3e|四子|n5_帝((朱棣))\n\n\t%% 分支点 朱标\n\tf2--\x3e|长子|e1[朱雄英]\n\tf2--\x3e|次子|e2_帝((朱允炆))\n\n\tn5_帝--\x3e|长子|e3[朱高炽]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n\n# 17.2 饼图\n\n\n源码：\n\n```mermaid\npie\n    title 为什么总是宅在家里？\n    "喜欢宅" : 45\n    "天气太热" : 70\n    "穷" : 500\n\t"关你屁事" : 95\n```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n渲染：\n\npie\n    title 为什么总是宅在家里？\n    "喜欢宅" : 45\n    "天气太热" : 70\n    "穷" : 500\n\t"关你屁事" : 95\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n\n# 17.3 序列图 (时序图)\n\n\n源码：\n\n```mermaid\nsequenceDiagram\n\t%% 自动编号\n\tautonumber\n\t%% 定义参与者并取别名，aliases：别名\n        participant A as Aly\n        participant B as Bob\n        participant C as CofCai\n        %% 便签说明\n        Note left of A: 只复习了一部分\n        Note right of B: 没复习\n        Note over A,B: are contacting\n\n        A->>B: 明天是要考试吗？\n        B--\x3e>A: 好像是的！\n\n        %% 显示并行发生的动作，parallel：平行\n        %% par [action1]\n        rect rgb(0, 25, 155)\n            par askA\n                C --\x3e> A:你复习好了吗？\n            and askB\n                C --\x3e> B:你复习好了吗？\n            and self\n                C ->>C:我还没准备复习......\n            end\n        end\n\n        %% 背景高亮，提供一个有颜色的背景矩形\n        rect rgb(25, 55, 0)\n            loop 自问/Every min\n            %% <br/>可以换行\n            C ->> C:我什么时候<br/>开始复习呢？\n            end\n        end\n\n        %% 可选择路径\n        rect rgb(153, 83, 60)\n            alt is good\n                A ->> C:复习了一点\n            else is common\n                B ->> C:我也是\n            end\n            %% 没有else时可以提供默认的opt\n            opt Extra response\n                C ->> C:你们怎么不回答我\n            end\n        endsequenceDiagram\n\t%% 自动编号\n\tautonumber\n\t%% 定义参与者并取别名，aliases：别名\n        participant A as Aly\n        participant B as Bob\n        participant C as CofCai\n        %% 便签说明\n        Note left of A: 只复习了一部分\n        Note right of B: 没复习\n        Note over A,B: are contacting\n\n        A->>B: 明天是要考试吗？\n        B--\x3e>A: 好像是的！\n\n        %% 显示并行发生的动作，parallel：平行\n        %% par [action1]\n        rect rgb(0, 25, 155)\n            par askA\n                C --\x3e> A:你复习好了吗？\n            and askB\n                C --\x3e> B:你复习好了吗？\n            and self\n                C ->>C:我还没准备复习......\n            end\n        end\n\n        %% 背景高亮，提供一个有颜色的背景矩形\n        rect rgb(25, 55, 0)\n            loop 自问/Every min\n            %% <br/>可以换行\n            C ->> C:我什么时候<br/>开始复习呢？\n            end\n        end\n\n        %% 可选择路径\n        rect rgb(153, 83, 60)\n            alt is good\n                A ->> C:复习了一点\n            else is common\n                B ->> C:我也是\n            end\n            %% 没有else时可以提供默认的opt\n            opt Extra response\n                C ->> C:你们怎么不回答我\n            end\n        end\n```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n\n\n渲染：\n\nsequenceDiagram\n\t%% 自动编号\n\tautonumber\n\t%% 定义参与者并取别名，aliases：别名\n        participant A as Aly\n        participant B as Bob\n        participant C as CofCai\n        %% 便签说明\n        Note left of A: 只复习了一部分\n        Note right of B: 没复习\n        Note over A,B: are contacting\n\n        A->>B: 明天是要考试吗？\n        B--\x3e>A: 好像是的！\n\n        %% 显示并行发生的动作，parallel：平行\n        %% par [action1]\n        rect rgb(0, 25, 155)\n            par askA\n                C --\x3e> A:你复习好了吗？\n            and askB\n                C --\x3e> B:你复习好了吗？\n            and self\n                C ->>C:我还没准备复习......\n            end\n        end\n\n        %% 背景高亮，提供一个有颜色的背景矩形\n        rect rgb(25, 55, 0)\n            loop 自问/Every min\n            %% <br/>可以换行\n            C ->> C:我什么时候<br/>开始复习呢？\n            end\n        end\n\n        %% 可选择路径\n        rect rgb(153, 83, 60)\n            alt is good\n                A ->> C:复习了一点\n            else is common\n                B ->> C:我也是\n            end\n            %% 没有else时可以提供默认的opt\n            opt Extra response\n                C ->> C:你们怎么不回答我\n            end\n        end\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n\n\n\n\n# 17.4 甘特图\n\n\n源码：\n\n```mermaid\ngantt\n    title A Gantt Diagram\n    dateFormat  YYYY-MM-DD\n    section Section\n    A task           :a1, 2014-01-01, 30d\n    Another task     :after a1  , 20d\n    section Another\n    Task in sec      :2014-01-12  , 12d\n    another task      : 24d\n```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n渲染：\n\ngantt\n    title A Gantt Diagram\n    dateFormat  YYYY-MM-DD\n    section Section\n    A task           :a1, 2014-01-01, 30d\n    Another task     :after a1  , 20d\n    section Another\n    Task in sec      :2014-01-12  , 12d\n    another task      : 24d\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 17.5 类图\n\n\n源码：\n\n```mermaid\nclassDiagram\n    Animal <|-- Duck\n    Animal <|-- Fish\n    Animal <|-- Zebra\n    Animal : +int age\n    Animal : +String gender\n    Animal: +isMammal()\n    Animal: +mate()\n    class Duck{\n      +String beakColor\n      +swim()\n      +quack()\n    }\n    class Fish{\n      -int sizeInFeet\n      -canEat()\n    }\n    class Zebra{\n      +bool is_wild\n      +run()\n    }\n```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n渲染：\n\nclassDiagram\n    Animal <|-- Duck\n    Animal <|-- Fish\n    Animal <|-- Zebra\n    Animal : +int age\n    Animal : +String gender\n    Animal: +isMammal()\n    Animal: +mate()\n    class Duck{\n      +String beakColor\n      +swim()\n      +quack()\n    }\n    class Fish{\n      -int sizeInFeet\n      -canEat()\n    }\n    class Zebra{\n      +bool is_wild\n      +run()\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n\n\n\n\n# 18. 标签 (Tag)\n\n * 标签是 Obsidian 特有的一个功能，标签可以通过点击唤起快速搜索 (搜索包含该标签的所有笔记)\n\n格式：\n\n * # + 标签名\n   * #标签名\n\n\n# 关于空格\n\n * 在一段正文文本的后面添加 Tag， # 的前面 需要有个空格\n   * 空格 + # + 标签名\n\n\n * # 与 标签名 之间，不能有空格，否则就变成 一级标题 了\n\n\n * 标签名的内部，不允许使用空格，若想区分标签中的词语，可使用以下三种方法：\n   1. 驼峰式大小写： #BlueTopaz\n   2. 下划线： #blue_topaz\n   3. 连字符： #blue-topaz\n\n\n\n# 关于数字\n\n * 标签内允许使用数字，但不能完全由数字组成\n   * #1984 ❌\n   * #1984Date ⭕\n   * #da_1984_te ⭕\n   * #date-1984 ⭕\n\n\n\n# 标签的嵌套\n\n在标签名内，使用 / 斜杠 可以实现标签的嵌套\n\n格式：\n\n * #主标签/子标签1\n * #主标签/子标签2\n * #主标签/子标签3\n\n嵌套标签可以像普通标签一样通过点击来唤起搜索，嵌套标签允许你选择搜索的层次。例如：\n\n * 搜索 #主标签 ，即可找到包含任意一个子标签的所有笔记\n   * 返回的结果会是上述的三个例子\n * 当你在一个主分类下设置了多个子分类，想找到这个主分类包含的所有内容时，该功能会很实用\n\n\n\n# 能被使用的符号\n\n综上所述，标签内能被使用的符号共有三种\n\n 1. _ 下划线\n 2. - 连字符\n 3. / 斜杠\n\n\n\n# 如何让 # 不被识别\n\n可以使用前面提到的转义符号 \\ 反斜杠，与上述的 转义标题 类似\n\n格式：\n\n\\#这里的内容不会被识别为标签\n\n效果：\n\n#这里的内容不会被识别为标签\n\n\n\n# 19. 避免标识符的滥用\n\n即使在 Markdown 中，也要尽量避免标识符的滥用\n\n比如我的这篇教程，就存在一定程度的滥用\n\n * 其实是因为我这篇是教学性质的，不太一样，有些不能避免\n   * (好吧，我就是在甩锅)\n\n标识符的本质是突出显示，代表重点\n\n * 一篇笔记里的某段文本，使用各式各样的的标识符，会造成重点不清晰\n\n有三种标识，慎用！\n\n 1. 词中对单个汉字的标识\n    1. 卧==虎==藏==龙==\n 2. 短语中对单个英语单词的标识\n    1. get a ==bang== out of\n 3. 标识符的多层嵌套\n    1. 我感觉快要==原地起飞==了\n\n原因：\n\n * 词义的割裂\n * 视觉的混乱\n * 不利于搜索\n   * 卧==虎==藏==龙==\n     * 搜 卧虎 -- 搜不到\n     * 搜 藏龙 -- 搜不到',normalizedContent:'这里是 two-test-1 的内容。\n\n\n\n以下markdown内容转载自：markdown超级教程 obsidian版\n\n这里仅作为展示vuepress解析markdown效果的一个展示。\n\n\n# 什么是 markdown?\n\n 1. markdown 是一款轻量级标记语言，不同于html (hypertext markup language)，markdown 的语法非常简单，且容易上手\n 2. markdown 以 纯文本格式 编写文档，依赖键盘而非鼠标，专注于写作本身，感受书写的魅力\n 3. markdown 的通过添加一些简单的 标识符，让文本具有恰到好处的格式\n 4. markdown 核心特征就是 删繁剪芜， 简扼 + 精炼\n 5. markdown 是 笔记 与 网页文章 的最佳载体\n 6. down 的核心：坐 下 来，就能把思维写 下 来\n    * 牛津高阶英汉双解词典第九版 中，关于 down 的释义：\n\n\n\n\n\n\n# 为什么要使用 markdown?\n\n有朋友问我 ，markdown 的效果 用word 完全可以复现，甚至功能更多，那为何要用 markdown 呢？\n\n答：\n\n * 功能多，不一定是好事\n   * 功能一多，选择就会变多，然后你会开始纠结……\n     * 这个字号是不是该大一点呢？\n     * 这个颜色好像有点不太搭呢？\n     * 这个粗体，是不是该再加点颜色呢？\n     * 这个图片的位置看起来有点不大对劲呢？\n   * 结果，写了半天，就憋出一点点东西\n     * 写出来的内容...好像...也不咋滴\n\nmd的优势：\n\n 1. markdown 让我们免于 被繁杂臃肿的功能晃花了眼 的困扰\n 2. markdown 让我们回归内容本身，拥抱笔记的内核，而非浮于表象的样式，写出高效精练的笔记！\n\n用 markdown 写东西，记住一个原则\n\n> 能用10个字搞定的，绝不用11个字\n\n经常使用 markdown 书写的朋友，也许会有一种奇妙的感触\n\n * 书写，会==倒逼==思维的跃进。像是有东西拽着你的思绪往前冲\n   * 倒逼：逆向逼迫，反向推动\n\n关于标识符的滥用\n\n这个其实是写在最后的，之所以放在这里，是因为它很重要！\n\n如果你有一定的md语法基础，可以直接[[#19 避免标识符的滥用|点击跳转]]\n\n\n\n# markdown 相关软件推荐\n\n * markdown 书写软件 推荐：typora 优秀的 md网页文章 书写软件\n   * 点击跳转下载地址\n     * #提示 以前是免费的，现在收费了，不过是买断制\n * markdown 笔记软件 推荐：obsidian 银河系最强 md+双向链 笔记软件\n   * 点击跳转下载地址\n\n\n\n\n\n\n# markdown 语法\n\n * 提示1： 本教程推荐使用 obsidian 打开阅读\n * 提示2： 下文提到的所有标识符都是 英文状态 的 ！\n\n\n# 1. 标题&目录\n\n\n\n# 1.1 标题\n\n * markdown标题共有 六级，和 html 一样\n * 区分 一级标题 → 六级标题\n   * 标题 的格式：\n     * # × 标题级数 + 空格 + 文本内容\n\n这是一段普通的文本\n\n# 这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n\n# 1.2 目录\n\n * 目录的 格式：\n   * 在文档的顶部 输入 [toc] ，会根据 标题 自动生成目录 ( table of content )\n * 不是所有 md编辑器 都支持目录生成\n   * obsidian 就不支持，不过 ob 是自带大纲的，就是目录的效果\n\n输入下方内容会生成一个目录：\n\n[toc]\n\n\n1\n2\n3\n\n\n\n\n\n\n\n# 2. 斜体&粗体\n\n\n\n# 2.1 斜体\n\n * 斜体 的格式：\n   1. * + 文本内容 + *\n   2. _ + 文本内容 + _ ( 下划线 )\n * 说明：\n   * 斜体文本，首尾只有 单个 标识符\n\n这是一段普通文本\n\n*这里是一段斜体文本*\n_这也是一段斜体文本_\n\n\n1\n2\n3\n4\n\n\n# 示范\n\n这是一段普通文本\n\n这里是一段斜体文本 这也是一段斜体文本\n\n\n\n# 2.2 粗体\n\n * 粗体 的格式：\n   \n   1. ** + 文本内容 + **\n   2. __ + 文本内容 + __ (这里是两个 _ )\n\n * 说明：\n   \n   * 粗体文本，首尾各有 两个 标识符\n\n这是一段普通文本\n\n**这里是一段加粗文本**\n__这也是一段加粗文本__\n\n\n1\n2\n3\n4\n\n\n# 示范\n\n这是一段普通文本\n\n这里是一段加粗文本 这也是一段加粗文本\n\n\n\n# 2.3 粗斜体 (斜粗体)\n\n * 粗斜体 的格式：\n   \n   1. *** + 文本内容 + ***\n   2. ___ + 文本内容 + ___ （ 这里是3个 _ )\n   3. **_ + 文本内容 + _**\n   4. __* + 文本内容 + *__\n   5. *__ + 文本内容 + __*\n   6. _** + 文本内容 + **_\n\n * 说明：\n   \n   * 粗斜体文本，首尾各有 三个 标识符\n\n这是一段普通文本\n\n***粗斜体文本1***\n___粗斜体文本2___\n**_粗斜体文本3_**\n__*粗斜体文本4*__\n*__粗斜体文本5__*\n_**粗斜体文本6**_\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 示范\n\n这是一段普通文本\n\n粗斜体文本1 粗斜体文本2 粗斜体文本3 粗斜体文本4 粗斜体文本5 粗斜体文本6\n\n\n\n# 2.4 斜体包含粗体\n\n * 斜体中包含粗体 的格式：\n   \n   1. * + 斜体文本 + ** + 粗体文本 + ** + 斜体文本 + *\n   2. _ + 斜体文本 + __ + 粗体文本 + __ + 斜体文本 + _ （ 这里是两个 _ )\n   3. * + 斜体文本 + __ + 粗体文本 + __ + 斜体文本 + *\n   4. _ + 斜体文本 + ** + 粗体文本 + ** + 斜体文本 + _\n\n * 说明：\n   \n   * 斜体 中包含 粗体，其实就是嵌套的关系，外层 是 斜体，内层 是 粗体\n   * 外层是斜体，标识符是单个；内层是粗体，标识符是两个\n   * 因为 粗体 是被包裹在 斜体 中的，所以显示效果为 斜粗体\n\n这是一段普通文本\n\n*这里是一段斜体中**包含粗体**的文字*\n_这也是一段斜体中**包含粗体**的文字_\n*这又是一段斜体中__包含粗体__的文字*\n_这还是一段斜体中**包含粗体**的文字_\n\n\n1\n2\n3\n4\n5\n6\n\n\n# 示范\n\n这是一段普通文本\n\n这里是一段斜体中包含粗体的文字 这也是一段斜体中包含粗体的文字 这又是一段斜体中__包含粗体__的文字 这还是一段斜体中包含粗体的文字\n\n\n\n# 2.5 粗体包含斜体\n\n * 粗体中包含斜体 的格式：\n   1. ** + 粗体文本 + * + 斜体文本 + * + 粗体文本 + **\n   2. __ + 粗体文本 + _ + 斜体文本 + _ + 粗体文本 + __ （ 这里是两个 _ )\n   3. ** + 粗体文本 + _ + 斜体文本 + _ + 粗体文本 + **\n   4. __ + 粗体文本 + * + 斜体文本 + * + 粗体文本 + __\n * 说明：\n   * 粗体 中包含 斜体，也就是嵌套的关系，外层 是 粗体，内层 是 斜体\n   * 外层是粗体，标识符是两个；内层是斜体，标识符是单个\n   * 因为 斜体 是被包裹在 粗体 中的，所以显示效果为 粗斜体\n\n这是一段普通文本\n\n**这里是一段粗体中*包含斜体*的文字**\n__这也是一段粗体中_包含斜体_的文字__\n**这又是一段粗体中_包含斜体_的文字**\n__这还是一段粗体中*包含斜体*的文字__\n\n\n1\n2\n3\n4\n5\n6\n\n\n# 示范\n\n这是一段普通文本\n\n这里是一段粗体中包含斜体的文字 这也是一段粗体中_包含斜体_的文字 这又是一段粗体中_包含斜体_的文字 这还是一段粗体中包含斜体的文字\n\n\n\n\n\n\n# 3. 线\n\n\n\n# 3.1 水平分割线\n\n * 水平分割线由至少 3 个 * 或 - 组成\n\n下面是一条水平分割线：\n---\n***\n\n\n1\n2\n3\n\n\n# 示范\n\n----------------------------------------\n\n----------------------------------------\n\n\n\n# 3.2 文本删除线\n\n * 删除线 的格式：\n   * ~~ + 文本内容 +~~ 首尾各加两个 ~ 波浪号\n\n~~这是一段加了删除线的文本~~\n\n\n1\n\n\n# 示范\n\n这是一段加了删除线的文本\n\n\n\n# 3.3 文本下划线\n\n * 下划线的格式，和 html 是一样的\n   * <u> + 文本内容 + </u>\n\n<u>这是一段加了下划线的文本</u>\n\n\n1\n\n\n# 示范\n\n这是一段加了下划线的文本\n\n\n\n\n\n\n# 4. 列表&引用\n\n\n\n# 4.1 有序列表\n\n * 有序列表 的格式：\n   \n   * 1. + 空格 + 文本内容\n\n * 说明：\n   \n   * 输入文本内容后，敲击 enter 自动补全格式，并进入 下个 有序列表\n   * 若需要在同个列表内，增加 换行显示 的内容 (但不进入下个列表) 敲击 shift + enter ，即可另起一行输入文本\n   * 在有序列表的中间，插入一个新的列表，后面列表的 数字序号 会自动 递进 一层\n   * 即便在源代码模式中修改了数字序号，渲染界面依然是 依照顺序 显示的\n\n1. 这是第一个有序列表 \x3c!-- (enter) --\x3e\n2. 这是第二个有序列表 \x3c!-- (enter) --\x3e\n3. 这是第三个有序列表\n\n\n1. 这是第一个有序列表 \x3c!-- (shift + enter) --\x3e\n   这是同个列表下，另起一行的文本内容 \x3c!-- (enter) --\x3e\n2. 这是第二个有序列表 \x3c!-- (shift + enter) --\x3e\n   这是同个列表下，另起一行的文本内容\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 示范\n\n 1. 这是第一个有序列表\n\n 2. 这是第二个有序列表\n\n 3. 这是第三个有序列表\n\n 4. 这是第一个有序列表 这是同个列表下，另起一行的文本内容\n\n 5. 这是第二个有序列表 这是同个列表下，另起一行的文本内容\n\n# 补充\n\n * 由于有序列表存在强制排序性，它的数字序号必然是逐一递进的 若你希望内容前的数字，不依照递进顺序排序，或者以 整百，整十数 排序\n * 可以配合无序列表，在无序列表中输入：\n   * 数字 + . + 内容 #注意 点号 与 内容 之间，没有空格 (其实有空格也行，就是会感觉有点奇怪)\n\n- 10.这是无序列表下，整十数排列的内容\n- 20.这是无序列表下，整十数排列的内容\n- 30.这是无序列表下，整十数排列的内容\n\n\n- 100.这是无序列表下，整百数排列的内容\n- 200.这是无序列表下，整百数排列的内容\n- 300.这是无序列表下，整百数排列的内容\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n效果：\n\n * 10.这是无序列表下，整十数排列的内容\n * 20.这是无序列表下，整十数排列的内容\n * 30.这是无序列表下，整十数排列的内容\n\n\n * 100.这是无序列表下，整百数排列的内容\n * 200.这是无序列表下，整百数排列的内容\n * 300.这是无序列表下，整百数排列的内容\n\n\n\n# 4.2 无序列表\n\n * 无序列表 的格式：\n * - + 空格 + 文本内容\n * 说明：\n   * 输入文本内容后，敲击 enter 自动补全格式，并进入 下个 无序列表\n   * 若需要在同个列表内，增加换行显示的内容 (但不进入下个列表) 敲击 shift + enter ，即可另起一行输入文本\n * 补充：\n   * 在obsidian中，按下 ctrl + enter\n   * 即可快速生成一个无序列表\n\n- 这是第1个无序列表 \x3c!-- (enter) --\x3e\n- 这是第2个无序列表 \x3c!-- (enter) --\x3e\n- 这是第3个无序列表\n\n- 这是第一个无序列表 \x3c!-- (shift + enter) --\x3e\n  这是同个列表下，另起一行的文本内容\n- 这是第二个无序列表 \x3c!-- (shift + enter) --\x3e\n  这是同个列表下，另起一行的文本内容\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 示范\n\n * 这是第1个无序列表\n * 这是第2个无序列表\n * 这是第3个无序列表\n\n\n * 这是第一个无序列表 这是同个列表下，另起一行的文本内容\n * 这是第二个无序列表 这是同个列表下，另起一行的文本内容\n\n\n\n# 4.3 引用\n\n * 引用 的格式：\n   * > + 文本内容 （不需要空格)\n * 说明：\n   * 同个引用段落内的换行直接敲击 enter 即可\n   * 若需添加 第二个独立引用段落 ，连续敲击 两下 enter 即可\n\n>这是第一段引用文本的第1行 \x3c!-- (enter) --\x3e\n>这是第一段引用文本的第2行 \x3c!-- (enter) --\x3e\n\x3c!-- (enter) --\x3e\n>这是第二段引用文本的第1行 \x3c!-- (enter) --\x3e\n>这是第二段引用文本内第2行\n\n\n1\n2\n3\n4\n5\n\n\n# 示范\n\n> 这是第一段引用文本的第1行 这是第一段引用文本的第2行\n\n> 这是第二段引用文本的第1行 这是第二段引用文本的第2行\n\n\n\n# 4.4 缩进&退格\n\n在列表和引用的书写过程中，我们需要利用 ==缩进== 与 ==退格== ，让文章肌理分明，更具层级\n\n * 缩进：\n   \n   1. tab\n   2. ctrl + [   (左中括号)\n\n * 退格：\n   \n   1. shift + tab\n   2. ctrl + ] （右中括号）\n\n\n# 4.4.1 有序列表的缩&退\n\n1. 第一级有序列表1 \x3c!-- (enter) --\x3e\n\t1. 第二级有序列表1    \x3c!-- 写文本之前，先( tab 或 ctrl + ] ) ；写完文本后，再(enter) --\x3e\n\t2. 第二级有序列表2 \x3c!-- (enter) --\x3e\n2. 第一级有序列表2    \x3c!-- 写文本前，先 ( shift + tab 或 ctrl + [ ) --\x3e\n\n\n1\n2\n3\n4\n\n * 补充说明：\n   * 有序列表的数字序号，即便你在源代码模式里 强行改掉 数字，它仍然会 依照顺序 显示\n\n# 示范\n\n 1. 第一级有序列表1\n    1. 第二级有序列表1\n    2. 第二级有序列表2\n 2. 第一级有序列表2\n\n\n# 4.4.2 无序列表的缩&退\n\n- 第一级无序列表1 \x3c!-- (enter) --\x3e\n\t- 第二级无序列表1  \x3c!-- 写文本前，先( tab 或 ctrl + ] ) ；写完后，再(enter) --\x3e\n\t- 第二级无序列表2 \x3c!-- (enter) --\x3e\n- 第一级无序列表2  \x3c!-- 写文本前，先 ( shift + tab 或 ctrl + [ ) --\x3e\n\n\n1\n2\n3\n4\n\n\n# 示范\n\n * 第一级无序列表1\n   * 第二级无序列表1\n   * 第二级无序列表2\n * 第一级无序列表2\n\n\n# 4.4.3 引用的缩&退\n\n * 引用的 缩进 和列表 不同\n   * 引用需另起一行，并额外多打一个 > 来完成 缩进\n * 引用的 退格 与列表 相同\n   1. shift + tab\n   2. ctrl + ] （右中括号）\n\n>第一级引用1 \x3c!-- (enter) --\x3e\n>>第二级引用1 \x3c!-- 先打1个 > (这里的第一个 > 是会自动补充的，只需额外增补1个即可) ，再(enter) --\x3e\n>>第二级引用2 \x3c!-- (enter) --\x3e\n>第一级引用2   \x3c!-- 写文本前，先 ( shift + tab 或 ctrl + [ ) --\x3e\n\n\n1\n2\n3\n4\n\n\n# 示范\n\n> 第一级引用1\n> \n> > 第二级引用1 第二级引用2\n> \n> 第一级引用2\n\n\n * 补充： 在 obsidian 中，引用的退格是不太一样的\n * **obsidian **中，如果想让已经缩进的引用 退回一层\n   * 得使用 shift + enter ，配合方向键，在多个 > 之间灵活断行 并在下一行 根据需要 选择性补充 >\n * 这个用文字比较难以描述，这里选择用2个带键位的 gif图 来描述\n\ngif演示1：\n\n\n\n\n\n * 效果1：\n\n> 111\n> \n> > 222\n> > \n> > > 333\n> > \n> > 444\n> \n> 555\n\n\ngif演示2：\n\n\n\n\n\n * 效果2：\n\n> 111\n> \n> > 222\n> > \n> > > 333\n> \n> > 444\n> > \n> > > 555\n> \n> 666\n\n777\n\n\n# 4.4.4 有序&无序&引用 连续套娃\n\n * 有序列表、无序列表、引用 三者之间，可以相互嵌套\n * 核心键 ： shift + enter & enter & shift + tab ( 或 ctrl + [ )\n   * shift + enter 在切换格式的嵌套中，是 自带一层 缩进 效果的\n\n1. 第一级 有序列表1 \x3c!-- (shift + enter) --\x3e\n\t- 第二级 无序列表1 \x3c!-- (shift + enter) --\x3e\n\t\t>第三级 引用1  \x3c!-- (enter) --\x3e\n\t\t\t- 第四级 无序列表2 \x3c!-- (shift + enter) --\x3e\n            \t1. 第五级 有序列表2 \x3c!-- (enter) --\x3e\n            - 第四级 无序列表3   \x3c!-- 写文本前，先( shift + tab 或 ctrl + [ ) ；写完后再 (enter) --\x3e\n        >第三级 引用2  \x3c!-- 写文本前，先( shift + tab 或 ctrl + [ ) ；写完后再 (enter × 2) --\x3e\n    - 第二级 无序列表4  \x3c!-- 写文本前，先( shift + tab 或 ctrl + [ ) --\x3e\n2. 第一级 有序列表3  \x3c!-- 写文本前，先( shift + tab 或 ctrl + [ ) --\x3e\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 示范\n\n 1. 第一级 有序列表1\n    \n    * 第二级 无序列表1\n      \n      > 第三级 引用1\n      > \n      >  * 第四级 无序列表2\n      >    1. 第五级 有序列表2\n      >  * 第四级 无序列表3\n      > \n      > 第三级 引用2\n    \n    * 第二级 无序列表4\n\n 2. 第一级 有序列表3\n\n# 4.4.5 obsidian 的一些缩退问题\n\n * obsidian 在列表首行使用缩进的时候，后续的列表会出现一些问题\n   * tab 和 shift + tab 会无法 缩进 退格\n     * 可以使用 ctrl + ] 与 ctrl + [ 来解决问题\n\n- - 这是第一段就被缩进的列表\n\t- 这是第二段被再次缩进的列表  \x3c!-- 这里需按两次 ctrl + ] ,tab键是无效的 --\x3e\n  - 这是第三段列表  \x3c!-- ctrl + [ --\x3e\n\n\n1\n2\n3\n\n * * 这是第一段就被缩进的列表 - 这是第二段被再次缩进的列表\n     * 这是第三段列表\n\n\n\n\n\n\n# 5. 网页链接与图像\n\n\n\n# 5.1 网页链接\n\n * 网页链接的 格式：\n   * [ + 显示文本内容 + ] + ( + 链接地址 + 空格 + " + 提示信息文本 + " + )\n * 说明：\n   * 显示文本内容，是在渲染界面实际 可见 的文本，用以 说明 链接\n   * 提示信息文本，需鼠标悬停于 显示文本内容 方可触发，用于增加额外提示信息\n     * #注意 "提示信息文本" 是可选项，一般不会填\n     * 一般来讲，需按住 ctrl + 鼠标左键点击 才可跳转链接，不过也有 直接鼠标点击 就能跳转的\n\n[显示文本内容](链接地址 "提示信息文本")\n\n[百度一下，你就知道](http://www.baidu.com "按住ctrl点击跳转百度")\n\n\n1\n2\n3\n\n\n示范：\n\n百度一下，你就知道\n\n\n# 5.1.1链接的加粗\n\n * 格式有两种：\n   \n   1. 把一对 ** 加在 ==显示文本内容==的首尾\n      \n      * 格式1：[**显示文本内容**](链接地址)\n      * 效果： 百度一下，你就知道\n   \n   2. 把一对 ** 加在 链接格式==整体== 的首尾\n      \n      * 格式2：**[显示文本内容](链接地址)**\n      * 效果： 百度一下，你就知道\n\n\n\n\n\n\n# 5.2 图像\n\n * 图像格式：\n   * 图像格式，就是在网页链接前面加个 ! (英文格式的)，! 代表 可见\n   * 图片的提示信息，和网页链接一样，写在 " " 内\n   * [ ] 方括号里的文字信息在 markdown 没啥实质的作用，只是方便在源代码模式下，知道这个图片是什么，在渲染界面是不会显示的。有点类似于html img标签 里的 alt属性。\n\n![文字信息](图片链接 "提示文本信息")\n\n![湘湖1](https://z3.ax1x.com/2021/08/06/funkxq.jpg "湘湖一角")\n\n\n1\n2\n3\n\n\n * 补充：\n   \n   * 图像链接可以是本地的，也可以是在线的\n     * 本地图像直接 ctrl + c 黏贴，ctrl + v 复制 就可以\n     * 在线图像推荐使用 图床\n   * 调整图像的大小需要使用 html 和 css，在 typora编辑器 中右键可以直接缩放图片 本质是转成了html的格式，最后会有一个 style="zoom: %;" ，这里数值可以自己修改\n   * 如果有使用 obsidian 的朋友，在线图片链接是通用的。不过，因为 obsidian 是双向链笔记 它的本地图片格式不太一样\n     * ![[图片名]]\n       * obsidian 中的图片是以双链的格式引用在目标笔记中，用 ! 使它可见\n       * obsidian的图片设置大小是用 | 分隔，后面写宽度数值，单位是px。 设定好宽度，高度会自动等比例调整\n         * ![[图片名|宽度数值]] - 若想自主调整图片宽高，则用： - ![[图片名|宽度数值x高度数值]] - #提示 这里的 x 是 英文字母x\n     * 如果是在线图床，需要调整图片大小：\n       * ![图床|宽度数值](链接地址)\n\n# 示范\n\n\n\n\n\n\n\n\n# 6. 表格\n\n * markdown的表格，比html简单很多\n   * | 是构成表格的主要 框架\n   * - 区分 表头 和 表格主体\n   * : 控制 表格内 文本内容 的 对齐方式\n   * **typora编辑器中 ** 输入 ctrl + t 即可快速插入表格，自由定义样式\n\n|这里是表头1|这里是表头2|这里是表头3|\n|:-|:-:|-:|    \x3c!--区分表头和表格主体，:代表文本对齐方式，分别是左对齐，居中对齐，右对齐--\x3e\n|单元格数据1|单元格数据2|单元格数据3|\n|单元格数据4|单元格数据5|单元格数据6|\n\n\n1\n2\n3\n4\n\n\n# 示范\n\n这里是表头1   这里是表头2   这里是表头3\n单元格数据1   单元格数据2   单元格数据3\n单元格数据4   单元格数据5   单元格数据6\n\n\n\n# 6.1 表格中文本内容的换行\n\n * mardown中表格，它的宽高是由 单元格数据内的文本内容 撑开 的\n * 当我们输入一段很长很长的文本，它所在的单元格会变得过宽\n\n如下图所示：\n\n表头1                                   表头2\n这是一段很长很长很长很长很长很长很长很长很长很长很长很长很长很长的文本   普通文本\n\n * 若想对一段长文本进行换行，可以在 中间 插入一个 <br> （ 换行标签 )\n\n| 表头1 |  表头2 |\n|:-:|:-:|\n|这是第一行文本<br>这是另起一行的文本|普通文本|\n\n\n1\n2\n3\n\n\n# 示范\n\n表头1         表头2\n这是第一行文本     普通文本\n这是另起一行的文本\n\n\n\n\n\n\n# 7. 代码域\n\n\n\n# 7.1 行内代码\n\n * 行内代码 的格式：\n   * 输入两个 ` 反引号 ，在中间写代码内容\n * 补充：\n   * 行内代码不一定非得写代码，也可以作为**着重标记**，突出显示内容\n   * 行内代码中，源代码界面和渲染界面是完全一致的，标识符会失效\n   * 所谓行内代码： 只要你的屏幕足够宽，它就不会换行\n\n`这是一段行内代码`\n\n`<table border="1" cellspacing="0" width="500" height="500">`\n\n`print("hello, world!")`\n\n`这是一行突出显示的文本内容`\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n# 示范\n\n<table border="1" cellspacing="0" width="500" height="500">\n\n\nprint("hello, world!")\n\n\n这是一行突出显示的文本内容\n\n\n\n# 7.2 代码块\n\n * 代码块 的格式：\n   1. 在首行和末行各加 三个 ` 反引号\n   * ``` + 语言种类 代码内容 ```\n   2. 在首行和末行各加 三个 ~ 波浪号\n      * ~~~ + 语言种类 代码内容 ~~~\n * 补充：\n   * 在代码块也不一定要写代码，可以写一段突出的文本内容，语言类型可以填写 txt 或者 干脆不写\n   * 代码块中，源代码界面和渲染界面是完全一致的，标识符会失效\n   * 在 typora编辑器 ，用键盘按键脱离代码块区域，需输入： ctrl + enter\n\n```语言种类\n代码内容\n代码内容\n代码内容\n```\n\n下面是html代码块\n\n```html\n<table border="1">\n    <tr>\n        <td>row 1, cell 1</td>\n        <td>row 1, cell 2</td>\n    </tr>\n    <tr>\n        <td>row 2, cell 1</td>\n        <td>row 2, cell 2</td>\n    </tr>\n</table>\n```\n\n下面是css代码块\n\n```css\n.box {\n\twidth: 600px;\n\theight: 400px;\n\tmargin: 100px auto;\n\tbackground-image: linear-gradient(black 33.3%,red 33.3%, red 66.6%, yellow 66.6%, yellow);\n}\n```\n\n下面是javascript代码块\n\n```js\n    // 定义一个30个整数的数组，按顺序分别赋予从2开始的偶数；然后按顺序每五个数求出一个平均值，放在另一个数组中并输出。试编程\n    let arr = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60]\n    let newarr = [];\n    for (let i = 0, count = 0, sum = 0, len = arr.length; i < len; i++) {\n        sum += arr.shift();\n        count++;\n        if (count % 5 === 0) {\n            newarr.push(sum / 5);\n            sum =  0;\n        }\n    }\n    console.log(newarr);\n\n    let arr = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60]\n    let newarr = [];\n    for (let i = 0, len = arr.length; i < len / 5; i++) {\n        let subarr = arr.splice(0, 5)\n        for (let j = 0, sum = 0; j < subarr.length; j++) {\n            sum += subarr[j];\n        }\n        newarr.push(sum / 5);\n    }\n    console.log(newarr);\n```\n\n\n下面是python代码块\n\n```python\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\ni = 2\nwhile(i < 100):\n   j = 2\n   while(j <= (i/j)):\n      if not(i%j): break\n      j = j + 1\n   if (j > i/j) : print i, " 是素数"\n   i = i + 1\n\nprint "good bye!"\n```\n\n下面是一块突出显示的文本\n\n```txt\n这是一段\n突出显示的\n文本内容\n```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n\n\n# 示范\n\n<table border="1">\n    <tr>\n        <td>row 1, cell 1</td>\n        <td>row 1, cell 2</td>\n    </tr>\n    <tr>\n        <td>row 2, cell 1</td>\n        <td>row 2, cell 2</td>\n    </tr>\n</table>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n.box {\n\twidth: 600px;\n\theight: 400px;\n\tmargin: 100px auto;\n\tbackground-image: linear-gradient(black 33.3%, red 33.3%, red 66.6%, yellow 66.6%, yellow);\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n// 定义一个30个整数的数组，按顺序分别赋予从2开始的偶数；然后按顺序每五个数求出一个平均值，放在另一个数组中并输出。试编程\nlet arr = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60]\nlet newarr = [];\nfor (let i = 0, count = 0, sum = 0, len = arr.length; i < len; i++) {\n\tsum += arr.shift();\n\tcount++;\n\tif (count % 5 === 0) {\n\t\tnewarr.push(sum / 5);\n\t\tsum =  0;\n\t}\n}\nconsole.log(newarr);\n\nlet arr = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60]\nlet newarr = [];\nfor (let i = 0, len = arr.length; i < len / 5; i++) {\n\tlet subarr = arr.splice(0, 5)\n\tfor (let j = 0, sum = 0; j < subarr.length; j++) {\n\t\tsum += subarr[j];\n\t}\n\tnewarr.push(sum / 5);\n}\nconsole.log(newarr);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\ni = 2\nwhile(i < 100):\n   j = 2\n   while(j <= (i/j)):\n      if not(i%j): break\n      j = j + 1\n   if (j > i/j) : print i, " 是素数"\n   i = i + 1\n\nprint "good bye!"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n这是一段\n突出显示的\n文本内容\n\n\n1\n2\n3\n\n\n\n# 7.2.1 代码块的嵌套\n\n\n格式：\n\n * 使用4个 ` 包裹 3个 `\n\n# 示范\n\n````txt\n```js\n// 3. 输出 100以内(不包括100) 所有偶数的和\n// 这类求和问题的核心 ： 利用循环  (总和 = 旧数的和 + 新数)\n\nlet sum = 0;\n\nfor (let i = 1, sum = 0; i < 100; i++) {\n if (i % 2 == 0) {\n // 筛选偶数\n sum += i; // sum = sum + i // 累加偶数并赋值给sum\n // sum为(旧的，已经进入循环的数)的和，i 为新进入循环的数。当加到(最后一个新数i)时，sum就是最后的 总和\n }\n}\n\nconsole.log(sum); // 打印总和\n```\n````\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n如果要再套一层，就在最外层 加 5个 ` ，以此类推……\n\n\n\n# 7.3 如何在行内代码里显示反引号\n\n首尾各用 两个反引号`+ 空格 包裹\n\n格式：\n\n``+空格+带`的内容+空格+``  \x3c!-- 不要忘记前后的两个空格 --\x3e\n\n`` 这是一段能显示`反引号`的行内代码 ``\n\n\n1\n2\n3\n\n\n效果：\n\n这是一段能显示`反引号`的行内代码\n\n\n\n\n\n\n# 8. 任务列表（待办）\n\n * 任务列表 的格式：\n   \n   * - + 空格 +[ ] +空格 + 任务列表内容 ( 中括号[ ] 里面必须有个空格)\n   * 给待办任务列表打 √ ，变成 已办\n     1. 在渲染界面，直接鼠标左键点击框框\n     2. 在源代码界面，在中括号内输入 英文字母x\n        * 部分编辑器，在 中括号内 输入任意字符都可以打 √ ( 例如 obsidian )\n\n * 补充：\n   \n   * 大部分 md编辑器 支持输入第一个任务列表后，按下 enter 进入下一行会 自动补全待办格式\n   * 在obsidian中，连续输入两次 ctrl + enter ，即可生成一个待办列表\n     * 再输入一次 ctrl + enter ，会在待办列表 打 √\n\n * 格式：\n\n- [ ] 待办任务列表1\n- [ ] 待办任务列表2\n- [x] 已办任务列表1    \x3c!-- 英文字母x --\x3e\n- [x] 已办任务列表2\n\n\n1\n2\n3\n4\n\n\n\n# 示范\n\n * [ ] 待办任务列表1\n * [ ] 待办任务列表2\n * [x] 已办任务列表1\n * [x] 已办任务列表2\n\n\n * 在 obsidian 中，可以利用 ctrl + enter ，快速生成任务列表\n   1. - + 空格 + ctrl + enter +待办文本内容\n   2. 待办文本内容 + ctrl + enter ×2   ( 输入文本后，连续2次 ctrl + enter )\n\n\n * 任务列表也是可以缩进+退格的，操作跟 无序、有序列表一样\n\n\n# 示范\n\n * [ ] 第一级待办列表1\n   * [ ] 第二级待办列表1 另起一行的第二级待办列表1\n     * [x] 第三级已办列表1\n     * [x] 第三级已办列表2\n   * [ ] 第二级待办列表2 另起一行的第二级待办列表2\n * [ ] 第一级待办列表2\n\n\n\n\n\n\n# 9. 注释\n\nmarkdown 的 注释 和 hmtl 一样，注释的内容在 渲染界面 不可见 （部分编辑器可见)\n\n * 注释 的格式：\n   * \x3c!-- 这里是注释的内容 --\x3e\n     * 注释可以是单行，也可以是多行\n   * 如果有在使用 obsidian 的，它的注释格式是不一样的\n     * %%这是obsidian的注释内容%%\n\n\x3c!-- 这里是一行注释 --\x3e\n\n\x3c!--\n这里是\n一段\n假装有\n很多行的\n注释\n--\x3e\n\n%%这是一行obsidian里的注释%%\n\n%%\n这里是\n一段\n假装有\n很多行的\nobsidian里的\n注释\n%%\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 示范 (只有切换至 编辑模式 才能看到喔)\n\n%%这是一行obsidian里的注释%%\n\n%% 这里是 一段 假装有 很多行的 obsidian里的 注释 %%\n\n\n\n\n\n\n# 10. 变量\n\n\n\n# 10.1 网页链接变量\n\n * 网页链接变量 的格式：\n   1. 首先输入\n      * [显示文本内容] + [变量名]\n        * 变量名可以自己取，没啥限制，任意字符都可以\n   2. 在文档任意一个区域，输入：\n      * [变量名] + : + 空格 + 链接地址 （这个**空格** 不打也没事)\n\n[百度一下，你就知道][度娘]\n[知乎-有问题，就会有答案][知乎]\n\n\x3c!-- 这里是变量区域 --\x3e\n[度娘]: http://www.baidu.com\n[知乎]: https://www.zhihu.com\n\n\n1\n2\n3\n4\n5\n6\n\n\n# 示范\n\n百度一下，你就知道\n\n知乎-有问题，就会有答案\n\n\n\n# 10.2 脚注\n\n * 脚注 的格式：\n   * 在需要脚注的地方，输入：\n     * [^脚注代号] ( 脚注代号会直接显示在渲染界面 )\n       * 脚注代号可以随便命名，不过推荐使用 数字序号\n   * 在其他区域，输入：\n     * [^脚注代号] + : + 空格 + 脚注内容 （这个 空格 不打也没事)\n\n鲁迅原名是什么[^1] ，浙江哪里人[^2]\n\n\x3c!-- 这里是变量区域 --\x3e\n[^1]: 周树人\n[^2]: 绍兴人\n\n\n1\n2\n3\n4\n5\n\n\n# 示范\n\n鲁迅原名是什么^1，浙江哪里人^2\n\n\n\n\n\n\n# 11. 拓展文本格式标记\n\n * markdown 想实现更多的文本显示效果，只能依赖html标记实现\n * 个人不是很推荐在 md 中使用 html，不过一些简单的标记还是可以 轻度使用 的\n\n\n\n# 11.1 键盘文本\n\n * 键盘文本的 格式：\n   \n   * <kbd>键盘文本</kbd>\n   * <kbd>ctrl</kbd> + <kbd>x</kbd>\n\n * 效果：\n   \n   * 键盘文本\n   * ctrl + x ( 剪切 )\n\n * 说明：\n   \n   * 键盘文本也不一定非得是键盘按键，也可以作为着重文本突出显示\n     * 效果： 这也算一种着重文本的方式\n\n# 11.1.1 加粗键盘文本\n\n * 加粗键盘文本的格式有两种：\n   \n   * <kbd>**键盘文本**</kbd>\n   * **<kbd>ctrl + x</kbd>**\n\n * 效果：\n   \n   1. 键盘文本\n   2. ctrl + x\n\n\n\n# 11.2 放大文本\n\n * 放大文本 的格式：\n   \n   * 这是一段普通文本 <big>这是一段放大文本</big>\n\n * 效果：\n   \n   * 这是一段普通文本 这是一段放大文本\n\n# 11.2.1 放大粗体文本\n\n * 放大加粗文本的格式有两种：\n   1. **<big>这是一段放大粗体文本</big>**\n   2. <big>**这是一段放大粗体文本**</big>\n * 效果：\n   1. 这是一段放大粗体文本\n   2. 这是一段放大粗体文本\n\n\n\n# 11.3 缩小文本\n\n * 缩小文本 的格式：\n   * 这是一段普通文本 <small>这是一段缩小文本</small>\n * 效果：\n   * 这是一段普通文本 这是一段缩小文本\n\n# 11.3.1 缩小斜体文本\n\n * 斜体缩小文本 的格式有两种：\n   1. <small>*这是一段缩小斜体文本*</small>\n   2. *<small>这是一段缩小斜体文本</small>*\n * 效果：\n   1. 这是一段缩小斜体文本\n   2. 这是一段缩小斜体文本\n\n\n\n# 11.4 多彩文本\n\n * 多彩文本 的格式：\n   * <font color=orange>这是一段橘色文本</font>\n * 效果：\n   * 这是一段橘色文本\n     * color 里的颜色支持 英文单词，16进制，rgb，rgba\n\n\n# 11.4.1 多彩粗体文本\n\n * 只需要在上面示例的基础上，加上 加粗标识符，有两种格式：\n   1. 格式1： **<font color=teal>这是一段加粗的水鸭色文本</font>**\n      * 效果： 这是一段加粗的水鸭色文本\n   2. 格式2： <font color=teal>**这是一段加粗的水鸭色文本**</font>\n      * 效果： 这是一段加粗的水鸭色文本\n * 若上述混搭方法的样式失效 ，可以使用 纯html标记\n   * 格式： <strong style="color:teal;">这是一段加粗的水鸭色文本</strong> (标记略复杂，不是很推荐)\n   * 效果： 这是一段加粗的水鸭色文本\n\n\n# 11.4.2 多彩斜体文本\n\n * 跟多彩加粗文本完全一样，只需把首尾的 ** 换成 * 即可\n\n 1. 格式1： *<font color=teal>this is an italic teal text</font>*\n    * 效果： this is an italic teal text\n 2. 格式2： <font color=teal>*this is an italic teal text*</font>\n    * 效果： this is an italic teal text\n\n\n# 11.4.2 多彩粗斜体文本\n\n * 首尾换成 ***\n\n 1. 格式1： ***<font color=teal>this is a bold italic teal text</font>***\n    * 效果： this is a bold italic teal text\n 2. 格式2： <font color=teal>***this is a bold italic teal text***</font>\n    * 效果： this is a bold italic teal text\n\n\n#注意 多彩文本尽量慎用，markdown 的核心就是 简洁精炼，注重 实质内容，而非花哨的 颜色样式\n\n\n\n\n\n\n# 12. 拓展文本显示效果\n\n * 拓展显示效果既不是原生 markdown语法 支持的，也非 html标记，而是部分编辑器 提供的 额外标识符，属于拓展语法，旨在为 markdown使用者 提供更多样式选择\n * 不同编辑器，支持不一样，这里以 typora编辑器 为例\n\n\n\n# 12.1 文本高亮\n\n * 文本高亮 的格式：\n   * ==这里是一段高亮文本==\n * 效果：\n   * ==这里是一段高亮文本==\n\n\n\n# 12.2 上标\n\n * 用一对 ^ 包裹 (shift+ 6)\n   * 格式： x^2^\n   * 效果： x^2^\n * obsidian 没效果的，可以用后面会讲的 latex\n * 或者，也可以使用 html标记\n   * <sup>这里是上标内容</sup>\n   * x<sup>2</sup>\n * 效果：\n   * x2\n\n\n\n# 12.3 下标\n\n * 用一对 ~ 包裹 (shift + `)\n   * 格式： h~2~o\n   * 效果： h~2~o\n * obsidian 没效果的，可以用后面会讲的 latex\n * 或者，也可以使用 html标记\n   * <sub>这里是下标内容</sub>\n   * h<sub>2</sub>o\n * 效果：\n   * h2o\n\n\n\n# 12.4 emoji 符号\n\n用一对 : 包裹，里面是 emoji 符号的 语义化文本 ( typora编辑器 中，输入 : 就会带提示器 )\n\n * 示例：\n   * :smile: :sweat: :cat: :woman_cartwheeling:\n * 效果：\n   * 😄 😓 🐱 🤸‍♀\n\n\n * 补充：\n   * 不支持上述方式的 md编辑器或笔记软件，直接用 输入法 输入也是可以的\n   * windows系统 用户 win + . 就可以输入 emoji 了\n   * obsidian 用户可以安装第三方插件来支持 emoji 的输入，推荐两个\n     1. ==emoji shortcodes==\n     2. ==emoji toolbar==\n\n\n\n\n\n\n# 13. 转义字符\n\n * 在 markdown 中，我们 通过 标识符 改变 文本显示效果\n * 现在我们希望它不作为标识符，而是 作为字符本身呈现出来 （不具备改变文本显示效果的功能，只是一个普通字符)\n   * 首先我们可以用前面介绍的 代码域 ，因为代码模式的显示效果就是源代码完全一致的\n   * 还有一种方法，可以利用转义字符，在这些标识符 前面 加上 反斜线 \\ ( 反斜线要紧贴在标识符前面，不能 有 空格 )\n     * 原理：\n       * \\ 的作用是让标识符 转义 变为一个普通字符，完成这个效果后，反斜线会自动隐藏\n       * 隐藏后的反斜线仅在源代码界面可见，在渲染界面不可见\n       * 反斜线只争对标识符起作用，其他字符添加 \\，\\ 不会自动隐藏\n     * 补充：\n       * 如果想给已经被加在标识符前面，会自动隐藏的 \\ 显示出来，可以在反斜线前面再加一个 \\ ，用它自己来转义自己\n         * 示例： 这里紧跟在标识符前面的反斜线\\\\*会被转义成普通字符显示出来，不会自动隐藏，且这段文件会是斜体*\n         * **效果： ** 这里紧跟在标识符前面的 反斜线\\会被转义成普通字符显示出来，不会自动隐藏，且这段文件会是斜体\n\n\n\n# 例1 以普通字符显示星号\n\n * 如何让被一对或多对 * 号 包裹的文本内容，能够正常显示 * ，且文本不改变格式\n   * \\*这段文本被一对星号包裹，但不会倾斜\\*\n     * 效果： *这段文本被1对星号包裹，但不会倾斜*\n   * \\*\\*这段文本被2对星号包裹，但不会加粗\\*\\*\n     * 效果： **这段文本被2对星号包裹，但不会加粗**\n   * \\*\\*\\*这段文本被3对星号包裹，但它既不倾斜也不加粗\\*\\*\\*\n     * 效果： ***这段文本被3对星号包裹，但它既不倾斜也不加粗***\n\n\n\n# 例2 表格内 单元格中的竖杠\n\n * 在表格中，使用 | 作为单元格的内容，但不会被识别为表格的结构，不会增加额外的单元格\n\n|表头1|表头2|\n|-|-|\n|这里的文本被\\|分隔|这里的文本也被\\|分隔|\n\n\n1\n2\n3\n\n * 效果：\n\n表头1         表头2\n这里的文本被|分隔   这里的文本也被|分隔\n\n\n#补充 该技巧可用于 obsidian 表格内 双链的文本修饰\n\n文本修饰：\n\n在 双链[[ ]]内 以 | 引导的内容\n\n * 格式： [[链接的内容|文本修饰]]\n * 说明： 文本修饰是渲染界面实际显示的文本，便于更好地融入语境\n\n表格内的格式：\n\n在 | 前面加上 \\\n\n * [[表格内的链接内容\\|文本修饰]]\n\n示例：\n\n|                  表头1                  |                        表头2                        |\n|:---------------------------------------:|:---------------------------------------------------:|\n| [[#例2 表格内 单元格中的竖杠\\|单元格中的竖杠]] | [[#例3 不会变成代码的反引号\\|不会变成代码的反引号]] |\n\n\n1\n2\n3\n\n\n效果：\n\n表头1                           表头2\n[[#例2 表格内 单元格中的竖杠|单元格中的竖杠]]   [[#例3 不会变成代码的反引号|不会变成代码的反引号]]\n\n\n\n# 例3 不会变成代码的反引号\n\n使用 转义符号\\ 让 反引号` 变成普通字符，不再具有[[#7 1 行内代码|行内代码]]的标识符功能\n\n格式：\n\n\\`这段被反引号包裹的内容不会变成行内代码\\`\n\n效果：\n\n`这段被反引号包裹的内容不会变成行内代码`\n\n\n\n# 例4 链接中的中括号\n\n在 网页链接 的 显示文本内容 中，使用 中括号 [ ]\n\n * 在显示文本内容中，在其中一个中括号前面，加上转义符号 反斜杠 \\\n   * 格式： [链接里的 \\[中括号\\] 能被正常显示](https://www.runoob.com)\n   * 效果： 链接里的 [中括号] 能被正常显示\n\n\n\n# 例5 不是列表的连接符(横杠)\n\n * 引用一段话，一般会在换行之后，加上 - 出处\n * 因为 - 是标识符，会变成一个无序列表\n\n如下所示：\n\n> the web, the tree, and the string. 写作之难，在于把网状的思考，用树状结构，体现在线性展开的语句里。\n> \n>  * 史蒂芬·平克\n\n * 解决方法：\n   \n   * 在 - 前面加上 转义符号 \\\n   \n   >the web, the tree, and the string.\n   >写作之难，在于把网状的思考，用树状结构，体现在线性展开的语句里。\n   >\\- 史蒂芬·平克   \x3c!-- 加上转义符号 \\ , 不会变成无序列表 --\x3e\n   \n   \n   1\n   2\n   3\n   \n\n * 效果：\n\n> the web, the tree, and the string. 写作之难，在于把网状的思考，用树状结构，体现在线性展开的语句里。 - 史蒂芬·平克\n\n\n\n# 例6 不是标题的 #\n\n让 # 不被识别为标题标识符\n\n格式：\n\n\\# 这里的内容不会被识别为标题\n\n效果：\n\n# 这里的内容不会被识别为标题\n\n\n\n# 例7 不会注释的 %\n\n在 obsidian 中 注释是前后各两个 % 号\n\n使用 转义符号\\，让 %% 作为普通字符显示出来，不具备注释的功能\n\n * 格式： \\%\\%这里的内容可以被显示喔\\%\\%\n * 效果： %%这里的内容可以被显示喔%%\n\n\n\n# 例8 木有链接的双链\n\nobsidian 的双向链格式是2个方括号 [[ ]] (双方)，使用 转义符号\\，让 [ ] 不再具有 双链功能\n\n格式：\n\n\\[\\[这段文本被双方包裹，但不是一个双向链\\]\\]\n\n效果：\n\n[[这段文本被双方包裹，但不是一个双向链]]\n\n\n\n# 例9 页链接里 显示文本内的 中括号\n\n使用转义符号\\，让中括号可以作为显示文本 在[[#5 1 网页链接|网页链接]]中显示出来\n\n格式：\n\n[\\[这是一个带中括号的网页链接显示文本，点击会跳转至百度\\]](https://www.baidu.com/)\n\n\n1\n\n\n效果：\n\n[这是一个带中括号的网页链接显示文本，点击会跳转至百度]\n\n\n\n# 特殊情况 文本修饰的中括号\n\n文本修饰的 中括号[ ] 不需要使用 转义符号\\\n\n示范：\n\n[[#例8 木有链接的双链|[这是一个带中括号的文本修饰]]]\n\n效果：\n\n[[#例8 木有链接的双链|[这是一个带中括号的文本修饰]]]\n\n\n\n\n\n\n# 14. 空格&换行&强制删除\n\n\n\n# 14.1 空格\n\n * 在一些编辑器或者支持md的笔记软件里，无论你打多少个空格，它只会显示单个 空格 的距离\n   * 可以使用 html中 空格 的 字符实体 —— &nbsp;\n   * 若要添加 多个 空格，就输入多个 —— &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n * 格式：\n   * 这里有&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6个空格分隔\n * 效果：\n   * 这里有      6个空格分隔\n\n\n\n# 14.2 换行\n\n场景1：\n\n * 在一些编辑器或者支持md的笔记软件里，无论你打多少个 回车，它只会显示单个 回车 的空行间距\n   * 可以使用之前表格里提到的 <br> 标签，在 单独一行 中使用，增加额外的空行间距\n   * 如果要增加 多个，就输入 多个 —— <br><br><br><br><br>\n   * #注意 当单独一行使用 <br> 标签的时候，如果前后有标题标识符或者列表标识符，确保 br元素 前后两行都是空白行\n\n格式：\n\n这里是第一段文本\n\n<br><br><br><br><br>     \x3c!-- 这里插入了5个空行间距 --\x3e\n\n这里是第二段文本\n\n\n1\n2\n3\n4\n5\n\n\n效果：\n\n这里是第一段文本\n\n\n\n\n\n\n\n\n这里是第二段文本\n\n\n\n\n\n场景2：\n\n * 在列表中也可以插入换行符\n\n- 这是一段无序列表\n  <br>     \x3c!-- 插入一个空行间距，需单独一行，上下不用预留空格 --\x3e\n  这是同一段无序列表中，空一行距离显示的内容\n- 这是第二段无序列表\n\n\n1\n2\n3\n4\n\n\n效果：\n\n * 这里是第一段无序列表\n   这里是同一段无序列表中，空一行距离显示的内容\n * 这里是第二段无序列表\n\n\n * 补充：\n   * 有一些md编辑器或笔记软件，严格遵循md的换行规则，你敲一个回车是没法换行的，必须在 行末 敲 2个空格，再按回车键\n     * 格式：\n       * 这里是一段想换行的文本空格 空格 enter 这是换行后的文本\n\n\n\n# 14.3 强制删除\n\n * 很多编辑器都有英文标点自动补全功能，自动生成一对，光标落在中间 只想删除前面1个，却会把 一整对 都删掉\n * 在多个列表的嵌套中，也许会遇到一些 无法被删除 的 列表标识符\n * 解决方法： 使用 shift + backspace 即可强制删除\n   * bcakspace   ( 退格键 )\n\n\n\n\n\n\n# 15. 嵌入\n\n * 嵌入都是依赖 html标签 实现的，嵌入的都是在线链接格式\n   * 如果是本地的，obsidian 中音频是有自带的可录制的录音机插件的，其他的 音频、视频 直接复制黏贴就可以了，也可以直接拖拽到ob的笔记界面\n     * 其他的媒体文件在 obsidian 也和图片一样，以双链的格式引用在目标笔记中，使用 ! 使它可见\n\n\n\n# 15.1 嵌入音频\n\n * 格式：\n   \n   * <audio controls="controls" preload="none" src="音频链接地址"></audio>\n\n * 示例：\n\n<audio controls="controls" preload="none" src="https://www.ldoceonline.com/media/english/exaprons/p008-001803372.mp3?version=1.2.37"></audio>\n\n\n1\n\n * 效果：\n\n\n\n\n\n# 15.2 嵌入视频\n\n * 格式：\n\n<video width="600" height="420" controls>\n  <source src="movie.mp4" type="video/mp4">\n  <source src="movie.ogg" type="video/ogg">\n  <source src="movie.webm" type="video/webm">\n</video>\n\n\n1\n2\n3\n4\n5\n\n * 说明：\n   * width ( 宽度 ) height ( 高度 ) ，可以自己设置，直接输入数字即可，单位默认是 px(像素) 也可以使用 百分比 width=100% 代表水平撑满整个窗口 height=50% 代表垂直撑满半个窗口\n   * video标签 支持的视频格式 ：mp4 ogg webm\n\n\n\n# 15.3 嵌入页面\n\n * 格式： <iframe width=600 height=400 src="页面链接地址" scrolling="auto" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>\n\n<iframe width=600 height=400 src="https://www.runoob.com/html/html-tutorial.html" scrolling="auto" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>\n\n\n1\n\n * 效果：\n\n\n * iframe标签 除了嵌入页面，也可以嵌入在线视频，主流的视频网站都会提供嵌入代码\n   \n   * 具体可以看这个 iframe视频嵌入教程\n   * b站 的视频，得在 // 前面补充 http:\n   * 不是所有的 编辑器和笔记软件 都支持这个\n\n * 示例：\n\n<iframe width=600 height=400 src="http://player.bilibili.com/player.html?aid=20190823&bvid=bv1yw411s7og&cid=32964980&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>\n\n\n1\n\n * 宽高设置和前面的 video 一样\n\n\n * 效果：\n\n\n\n\n\n\n# 16. latex 数学公式\n\n * 主要用于 数学公式 与 化学公式 的书写\n\n\n\n# 16.1 行内公式\n\n * 格式：\n   \n   * $ + 行内公式 + $\n\n\n * 示例：\n   * $x^2 + 2x + 5 + \\sqrt x = 0$\n   * $\\ce{co2 + c -> 2 co}$\n   * $\\ce{co2 + c -> 2 co}$\n   * $\\ce{2mg + o2 ->[燃烧] 2 mgo}$\n\n\n * 效果：\n   * $x^2 + 2x + 5 + \\sqrt x = 0$\n   * $e^{i\\pi} + 1 = 0$\n   * $\\ce{co2 + c -> 2 co}$\n   * $\\ce{2mg + o2 ->[燃烧] 2 mgo}$\n\n\n\n# 16.2 公式块\n\n * 格式：\n   * $$ 公式块 $$\n\n\n * 示例：\n\n% 化学公式\n$$\n\\ce{zn^2+  <=>[+ 2oh-][+ 2h+]  $\\underset{\\text{amphoteres hydroxid}}{\\ce{zn(oh)2 v}}$  <=>[+ 2oh-][+ 2h+]  $\\underset{\\text{hydroxozikat}}{\\ce{[zn(oh)4]^2-}}$}\n$$\n\n\n1\n2\n3\n4\n\n\n% 麦克斯韦方程组\n$$\n\\begin{array}{lll}\n\\nabla\\times e &=& -\\;\\frac{\\partial{b}}{\\partial{t}}\n\\ \\nabla\\times h &=& \\frac{\\partial{d}}{\\partial{t}}+j\n\\ \\nabla\\cdot d &=& \\rho\n\\ \\nabla\\cdot b &=& 0\n\\ \\end{array}\n$$\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n% 薛定谔方程\n$$\ni\\hbar\\frac{\\partial \\psi}{\\partial t} = \\frac{-\\hbar^2}{2m} \\left(\\frac{\\partial^2}{\\partial x^2} + \\frac{\\partial^2}{\\partial y^2}+\\frac{\\partial^2}{\\partial z^2} \\right) \\psi + v \\psi\n$$\n\n\n1\n2\n3\n4\n\n\n * 效果：\n\n$$ % 化学公式 \\ce{zn^2+ <=>[+ 2oh-][+ 2h+] $\\underset{\\text{amphoteres hydroxid}}{\\ce{zn(oh)2 v}}$ <=>[+ 2oh-][+ 2h+] $\\underset{\\text{hydroxozikat}}{\\ce{[zn(oh)4]^2-}}$} $$\n\n\n$$ % 麦克斯韦方程组 \\begin{array}{lll} \\nabla\\times e &=& -;\\frac{\\partial{b}}{\\partial{t}} \\ \\nabla\\times h &=& \\frac{\\partial{d}}{\\partial{t}}+j \\ \\nabla\\cdot d &=& \\rho \\ \\nabla\\cdot b &=& 0 \\ \\end{array} $$\n\n\n$$ i\\hbar\\frac{\\partial \\psi}{\\partial t} = \\frac{-\\hbar^2}{2m} \\left(\\frac{\\partial^2}{\\partial x^2} + \\frac{\\partial^2}{\\partial y^2}+\\frac{\\partial^2}{\\partial z^2} \\right) \\psi + v \\psi $$\n\n * 补充：\n   * 需要详细教程的，可戳下方链接\n   * latex详细教程\n\n\n\n\n\n\n# 17. mermaid\n\n * 一些 md编辑器 和 笔记软件 支持通过 mermaid 及其所提供的 编译器 来为用户提供图表的绘制功能\n\n * 这里只提供一些演示的图表，具体教程可戳下方\n   \n   * [[moc mermiad 教程 obsidian版| mermiad 超级教程 obsidian版]]\n\n\n\n# 17.1 流程图\n\n\n源码1：\n\n```mermaid\ngraph tb\n\t%% s=start  e=end  f=fork  n=normal\n\n\ts([开始])--\x3ef1{{if条件}};\n\n\t%% 分支点2\n\tf1--true--\x3en1[if语句块]--\x3ee([结束]);\n\tf1--false--\x3ef2{{else if条件}};\n\n\t%% 分支点1\n\tf2--true--\x3en2[else if语句块]--\x3ee;\n\tf2--false--\x3en3[else语句块]--\x3ee;\n```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n渲染1：\n\ngraph tb\n\t%% s=start  e=end  f=fork  n=normal\n\n\ts([开始])--\x3ef1{{if条件}};\n\n\t%% 分支点1\n\tf1--true--\x3en1[if语句块]--\x3ee([结束]);\n\tf1--false--\x3ef2{{else if条件}};\n\n\t%% 分支点2\n\tf2--true--\x3en2[else if语句块]--\x3ee;\n\tf2--false--\x3en3[else语句块]--\x3ee;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n源码2：\n\n```mermaid\ngraph lr\n\t%% s=start  e=end  f= fork n=normal\n\n\t%% 虚线\n\ts[朱百六]-.->|子|n1[朱四九]-.->|子|n2[朱五四]-.->|子|f1_帝((朱八八))\n\n\t%% 分支点 朱八八\n\tf1_帝--\x3e|长子|f2[朱标]\n\tf1_帝--\x3e|次子|n3[朱樉]\n\tf1_帝--\x3e|三子|n4[朱棢]\n\tf1_帝--\x3e|四子|n5_帝((朱棣))\n\n\t%% 分支点 朱标\n\tf2--\x3e|长子|e1[朱雄英]\n\tf2--\x3e|次子|e2_帝((朱允炆))\n\n\tn5_帝--\x3e|长子|e3[朱高炽]\n```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n渲染2：\n\ngraph lr\n\t%% s=start  e=end  f= fork n=normal\n\n\t%% 虚线\n\ts[朱百六]-.->|子|n1[朱四九]-.->|子|n2[朱五四]-.->|子|f1_帝((朱八八))\n\n\t%% 分支点 朱八八\n\tf1_帝--\x3e|长子|f2[朱标]\n\tf1_帝--\x3e|次子|n3[朱樉]\n\tf1_帝--\x3e|三子|n4[朱棢]\n\tf1_帝--\x3e|四子|n5_帝((朱棣))\n\n\t%% 分支点 朱标\n\tf2--\x3e|长子|e1[朱雄英]\n\tf2--\x3e|次子|e2_帝((朱允炆))\n\n\tn5_帝--\x3e|长子|e3[朱高炽]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n\n# 17.2 饼图\n\n\n源码：\n\n```mermaid\npie\n    title 为什么总是宅在家里？\n    "喜欢宅" : 45\n    "天气太热" : 70\n    "穷" : 500\n\t"关你屁事" : 95\n```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n渲染：\n\npie\n    title 为什么总是宅在家里？\n    "喜欢宅" : 45\n    "天气太热" : 70\n    "穷" : 500\n\t"关你屁事" : 95\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n\n# 17.3 序列图 (时序图)\n\n\n源码：\n\n```mermaid\nsequencediagram\n\t%% 自动编号\n\tautonumber\n\t%% 定义参与者并取别名，aliases：别名\n        participant a as aly\n        participant b as bob\n        participant c as cofcai\n        %% 便签说明\n        note left of a: 只复习了一部分\n        note right of b: 没复习\n        note over a,b: are contacting\n\n        a->>b: 明天是要考试吗？\n        b--\x3e>a: 好像是的！\n\n        %% 显示并行发生的动作，parallel：平行\n        %% par [action1]\n        rect rgb(0, 25, 155)\n            par aska\n                c --\x3e> a:你复习好了吗？\n            and askb\n                c --\x3e> b:你复习好了吗？\n            and self\n                c ->>c:我还没准备复习......\n            end\n        end\n\n        %% 背景高亮，提供一个有颜色的背景矩形\n        rect rgb(25, 55, 0)\n            loop 自问/every min\n            %% <br/>可以换行\n            c ->> c:我什么时候<br/>开始复习呢？\n            end\n        end\n\n        %% 可选择路径\n        rect rgb(153, 83, 60)\n            alt is good\n                a ->> c:复习了一点\n            else is common\n                b ->> c:我也是\n            end\n            %% 没有else时可以提供默认的opt\n            opt extra response\n                c ->> c:你们怎么不回答我\n            end\n        endsequencediagram\n\t%% 自动编号\n\tautonumber\n\t%% 定义参与者并取别名，aliases：别名\n        participant a as aly\n        participant b as bob\n        participant c as cofcai\n        %% 便签说明\n        note left of a: 只复习了一部分\n        note right of b: 没复习\n        note over a,b: are contacting\n\n        a->>b: 明天是要考试吗？\n        b--\x3e>a: 好像是的！\n\n        %% 显示并行发生的动作，parallel：平行\n        %% par [action1]\n        rect rgb(0, 25, 155)\n            par aska\n                c --\x3e> a:你复习好了吗？\n            and askb\n                c --\x3e> b:你复习好了吗？\n            and self\n                c ->>c:我还没准备复习......\n            end\n        end\n\n        %% 背景高亮，提供一个有颜色的背景矩形\n        rect rgb(25, 55, 0)\n            loop 自问/every min\n            %% <br/>可以换行\n            c ->> c:我什么时候<br/>开始复习呢？\n            end\n        end\n\n        %% 可选择路径\n        rect rgb(153, 83, 60)\n            alt is good\n                a ->> c:复习了一点\n            else is common\n                b ->> c:我也是\n            end\n            %% 没有else时可以提供默认的opt\n            opt extra response\n                c ->> c:你们怎么不回答我\n            end\n        end\n```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n\n\n渲染：\n\nsequencediagram\n\t%% 自动编号\n\tautonumber\n\t%% 定义参与者并取别名，aliases：别名\n        participant a as aly\n        participant b as bob\n        participant c as cofcai\n        %% 便签说明\n        note left of a: 只复习了一部分\n        note right of b: 没复习\n        note over a,b: are contacting\n\n        a->>b: 明天是要考试吗？\n        b--\x3e>a: 好像是的！\n\n        %% 显示并行发生的动作，parallel：平行\n        %% par [action1]\n        rect rgb(0, 25, 155)\n            par aska\n                c --\x3e> a:你复习好了吗？\n            and askb\n                c --\x3e> b:你复习好了吗？\n            and self\n                c ->>c:我还没准备复习......\n            end\n        end\n\n        %% 背景高亮，提供一个有颜色的背景矩形\n        rect rgb(25, 55, 0)\n            loop 自问/every min\n            %% <br/>可以换行\n            c ->> c:我什么时候<br/>开始复习呢？\n            end\n        end\n\n        %% 可选择路径\n        rect rgb(153, 83, 60)\n            alt is good\n                a ->> c:复习了一点\n            else is common\n                b ->> c:我也是\n            end\n            %% 没有else时可以提供默认的opt\n            opt extra response\n                c ->> c:你们怎么不回答我\n            end\n        end\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n\n\n\n\n# 17.4 甘特图\n\n\n源码：\n\n```mermaid\ngantt\n    title a gantt diagram\n    dateformat  yyyy-mm-dd\n    section section\n    a task           :a1, 2014-01-01, 30d\n    another task     :after a1  , 20d\n    section another\n    task in sec      :2014-01-12  , 12d\n    another task      : 24d\n```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n渲染：\n\ngantt\n    title a gantt diagram\n    dateformat  yyyy-mm-dd\n    section section\n    a task           :a1, 2014-01-01, 30d\n    another task     :after a1  , 20d\n    section another\n    task in sec      :2014-01-12  , 12d\n    another task      : 24d\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 17.5 类图\n\n\n源码：\n\n```mermaid\nclassdiagram\n    animal <|-- duck\n    animal <|-- fish\n    animal <|-- zebra\n    animal : +int age\n    animal : +string gender\n    animal: +ismammal()\n    animal: +mate()\n    class duck{\n      +string beakcolor\n      +swim()\n      +quack()\n    }\n    class fish{\n      -int sizeinfeet\n      -caneat()\n    }\n    class zebra{\n      +bool is_wild\n      +run()\n    }\n```\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n渲染：\n\nclassdiagram\n    animal <|-- duck\n    animal <|-- fish\n    animal <|-- zebra\n    animal : +int age\n    animal : +string gender\n    animal: +ismammal()\n    animal: +mate()\n    class duck{\n      +string beakcolor\n      +swim()\n      +quack()\n    }\n    class fish{\n      -int sizeinfeet\n      -caneat()\n    }\n    class zebra{\n      +bool is_wild\n      +run()\n    }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n\n\n\n\n# 18. 标签 (tag)\n\n * 标签是 obsidian 特有的一个功能，标签可以通过点击唤起快速搜索 (搜索包含该标签的所有笔记)\n\n格式：\n\n * # + 标签名\n   * #标签名\n\n\n# 关于空格\n\n * 在一段正文文本的后面添加 tag， # 的前面 需要有个空格\n   * 空格 + # + 标签名\n\n\n * # 与 标签名 之间，不能有空格，否则就变成 一级标题 了\n\n\n * 标签名的内部，不允许使用空格，若想区分标签中的词语，可使用以下三种方法：\n   1. 驼峰式大小写： #bluetopaz\n   2. 下划线： #blue_topaz\n   3. 连字符： #blue-topaz\n\n\n\n# 关于数字\n\n * 标签内允许使用数字，但不能完全由数字组成\n   * #1984 ❌\n   * #1984date ⭕\n   * #da_1984_te ⭕\n   * #date-1984 ⭕\n\n\n\n# 标签的嵌套\n\n在标签名内，使用 / 斜杠 可以实现标签的嵌套\n\n格式：\n\n * #主标签/子标签1\n * #主标签/子标签2\n * #主标签/子标签3\n\n嵌套标签可以像普通标签一样通过点击来唤起搜索，嵌套标签允许你选择搜索的层次。例如：\n\n * 搜索 #主标签 ，即可找到包含任意一个子标签的所有笔记\n   * 返回的结果会是上述的三个例子\n * 当你在一个主分类下设置了多个子分类，想找到这个主分类包含的所有内容时，该功能会很实用\n\n\n\n# 能被使用的符号\n\n综上所述，标签内能被使用的符号共有三种\n\n 1. _ 下划线\n 2. - 连字符\n 3. / 斜杠\n\n\n\n# 如何让 # 不被识别\n\n可以使用前面提到的转义符号 \\ 反斜杠，与上述的 转义标题 类似\n\n格式：\n\n\\#这里的内容不会被识别为标签\n\n效果：\n\n#这里的内容不会被识别为标签\n\n\n\n# 19. 避免标识符的滥用\n\n即使在 markdown 中，也要尽量避免标识符的滥用\n\n比如我的这篇教程，就存在一定程度的滥用\n\n * 其实是因为我这篇是教学性质的，不太一样，有些不能避免\n   * (好吧，我就是在甩锅)\n\n标识符的本质是突出显示，代表重点\n\n * 一篇笔记里的某段文本，使用各式各样的的标识符，会造成重点不清晰\n\n有三种标识，慎用！\n\n 1. 词中对单个汉字的标识\n    1. 卧==虎==藏==龙==\n 2. 短语中对单个英语单词的标识\n    1. get a ==bang== out of\n 3. 标识符的多层嵌套\n    1. 我感觉快要==原地起飞==了\n\n原因：\n\n * 词义的割裂\n * 视觉的混乱\n * 不利于搜索\n   * 卧==虎==藏==龙==\n     * 搜 卧虎 -- 搜不到\n     * 搜 藏龙 -- 搜不到',charsets:{cjk:!0},lastUpdated:"2024/01/21, 22:21:54"},{title:"how llm works",frontmatter:{title:"how llm works",date:"2024-01-02T15:32:49.000Z",permalink:"/pages/dc7035/"},regularPath:"/05.llm/01.How_LLM_Works.html",relativePath:"05.llm/01.How_LLM_Works.md",key:"v-26a9c736",path:"/pages/dc7035/",headers:[{level:3,title:"1. LLM as OS, Agents as Apps: Envisioning AIOS, Agents and the AIOS-Agent Ecosystem [2012]",slug:"_1-llm-as-os-agents-as-apps-envisioning-aios-agents-and-the-aios-agent-ecosystem-2012",normalizedTitle:"1. llm as os, agents as apps: envisioning aios, agents and the aios-agent ecosystem [2012]",charIndex:174},{level:3,title:"2. NVIDIA Mastering LLM Techniques",slug:"_2-nvidia-mastering-llm-techniques",normalizedTitle:"2. nvidia mastering llm techniques",charIndex:93},{level:3,title:"3. Finetuning",slug:"_3-finetuning",normalizedTitle:"3. finetuning",charIndex:2746},{level:3,title:"4. Function Calling",slug:"_4-function-calling",normalizedTitle:"4. function calling",charIndex:3035}],headersStr:"1. LLM as OS, Agents as Apps: Envisioning AIOS, Agents and the AIOS-Agent Ecosystem [2012] 2. NVIDIA Mastering LLM Techniques 3. Finetuning 4. Function Calling",content:" 1. LLM as OS, Agents as Apps: Envisioning AIOS, Agents and the AIOS-Agent Ecosystem [2023]\n 2. NVIDIA Mastering LLM Techniques\n\n----------------------------------------\n\n\n# 1. LLM as OS, Agents as Apps: Envisioning AIOS, Agents and the AIOS-Agent Ecosystem [2012]\n\n👍 Analogy of LLM and OS.\n\nBlog: https://huggingface.co/blog/shivance/illustrated-llm-os\n\nYoutube: Andrej Karpathy https://www.youtube.com/watch?v=kCc8FmEb1nY\n\nParallel decoding(Multi threading): This is a technique that allows multiple decoding processes to occur simultaneously, which can speed up the decoding process. For example, instead of generating one token at a time, parallel decoding can generate several tokens in parallel, using different models or different parts of the same model. This can reduce the latency and increase the throughput of the decoding process. A recent paper by Apple researchers proposed a method called Parallel Speculative Sampling (PaSS) that introduces parallel decoding for LLMs, maintaining model quality while achieving remarkable speed. Related Paper: Accelerating LLM Inference with Staged Speculative Decoding\n\nEnsemble decoding(Multi processing): This is a technique that involves using multiple models to decode a single input sequence, which can improve the accuracy of the decoding process. For example, instead of relying on one model to generate the output, ensemble decoding can combine the outputs of several models, using methods such as voting, averaging, or reranking. This can increase the diversity and robustness of the decoding process. A common approach for ensemble decoding is to use models that have been trained with different architectures, hyperparameters, or data sources.\n\nSpeculative execution: This is a technique that involves predicting the outcome of a computation before it is actually executed, which can speed up the decoding process. For example, instead of waiting for the final hidden state of the model to generate the next token, speculative execution can use the early hidden states to predict the next token and execute the model in parallel on the predicted token. This can reduce the dependency between tokens and increase the parallelism of the decoding process. A recent paper by Berkeley researchers proposed a method called SPEED, which improves inference efficiency by speculatively executing multiple future tokens in parallel with the current token using predicted values based on early-layer hidden states.\n\nRelated Paper: SPEED: Speculative Pipelined Execution for Efficient Decoding\n\n\n# 2. NVIDIA Mastering LLM Techniques\n\nLink: https://developer.nvidia.com/blog/search-posts/?q=Mastering+LLM+Techniques\n\n 1. Customization\n 2. LLMOps\n 3. Training\n 4. Inference Optimization\n 5. \n\n\n# 3. Finetuning\n\n 1. How RLHF Preference Model Tuning Works (And How Things May Go Wrong) Blog: https://www.assemblyai.com/blog/how-rlhf-preference-model-tuning-works-and-how-things-may-go-wrong/\n\nPaper: RRHF: Rank Responses to Align Language Models with Human Feedback without tears 2.\n\n\n# 4. Function Calling\n\n 1. Blog: https://crunchingthedata.com/when-to-use-function-calling-for-llms/\n 2. Paper: An LLM Compiler for Parallel Function Calling",normalizedContent:" 1. llm as os, agents as apps: envisioning aios, agents and the aios-agent ecosystem [2023]\n 2. nvidia mastering llm techniques\n\n----------------------------------------\n\n\n# 1. llm as os, agents as apps: envisioning aios, agents and the aios-agent ecosystem [2012]\n\n👍 analogy of llm and os.\n\nblog: https://huggingface.co/blog/shivance/illustrated-llm-os\n\nyoutube: andrej karpathy https://www.youtube.com/watch?v=kcc8fmeb1ny\n\nparallel decoding(multi threading): this is a technique that allows multiple decoding processes to occur simultaneously, which can speed up the decoding process. for example, instead of generating one token at a time, parallel decoding can generate several tokens in parallel, using different models or different parts of the same model. this can reduce the latency and increase the throughput of the decoding process. a recent paper by apple researchers proposed a method called parallel speculative sampling (pass) that introduces parallel decoding for llms, maintaining model quality while achieving remarkable speed. related paper: accelerating llm inference with staged speculative decoding\n\nensemble decoding(multi processing): this is a technique that involves using multiple models to decode a single input sequence, which can improve the accuracy of the decoding process. for example, instead of relying on one model to generate the output, ensemble decoding can combine the outputs of several models, using methods such as voting, averaging, or reranking. this can increase the diversity and robustness of the decoding process. a common approach for ensemble decoding is to use models that have been trained with different architectures, hyperparameters, or data sources.\n\nspeculative execution: this is a technique that involves predicting the outcome of a computation before it is actually executed, which can speed up the decoding process. for example, instead of waiting for the final hidden state of the model to generate the next token, speculative execution can use the early hidden states to predict the next token and execute the model in parallel on the predicted token. this can reduce the dependency between tokens and increase the parallelism of the decoding process. a recent paper by berkeley researchers proposed a method called speed, which improves inference efficiency by speculatively executing multiple future tokens in parallel with the current token using predicted values based on early-layer hidden states.\n\nrelated paper: speed: speculative pipelined execution for efficient decoding\n\n\n# 2. nvidia mastering llm techniques\n\nlink: https://developer.nvidia.com/blog/search-posts/?q=mastering+llm+techniques\n\n 1. customization\n 2. llmops\n 3. training\n 4. inference optimization\n 5. \n\n\n# 3. finetuning\n\n 1. how rlhf preference model tuning works (and how things may go wrong) blog: https://www.assemblyai.com/blog/how-rlhf-preference-model-tuning-works-and-how-things-may-go-wrong/\n\npaper: rrhf: rank responses to align language models with human feedback without tears 2.\n\n\n# 4. function calling\n\n 1. blog: https://crunchingthedata.com/when-to-use-function-calling-for-llms/\n 2. paper: an llm compiler for parallel function calling",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"LLM Hardware Optimization",frontmatter:{title:"LLM Hardware Optimization",date:"2024-01-02T23:32:49.000Z",permalink:"/pages/dc7036/"},regularPath:"/05.llm/02.LLM_HW_Opt.html",relativePath:"05.llm/02.LLM_HW_Opt.md",key:"v-b267e276",path:"/pages/dc7036/",headers:[{level:3,title:"1. HAT: Hardware-Aware Transformers for Efficient Natural Language Processing [MIT 247]",slug:"_1-hat-hardware-aware-transformers-for-efficient-natural-language-processing-mit-247",normalizedTitle:"1. hat: hardware-aware transformers for efficient natural language processing [mit 247]",charIndex:1},{level:3,title:"4. Making Transformer inference faster on GPUs[Blog]",slug:"_4-making-transformer-inference-faster-on-gpus-blog",normalizedTitle:"4. making transformer inference faster on gpus[blog]",charIndex:798}],headersStr:"1. HAT: Hardware-Aware Transformers for Efficient Natural Language Processing [MIT 247] 4. Making Transformer inference faster on GPUs[Blog]",content:" 1. HAT: Hardware-Aware Transformers for Efficient Natural Language Processing [MIT 247]\n 2. TurboTransformers: An Efficient GPU Serving System For Transformer Models [82]\n 3. Improving the Efficiency of Transformers for Resource-Constrained Devices [8]\n 4. Bag of Tricks for Optimizing Transformer Efficiency [5]\n 5. Making Transformer inference faster on GPUs[Blog]\n 6. Energy-efficient Inference Service of Transformer-based Deep Learning Models on GPUs [4]\n 7. Improving Computation and Memory Efficiency for Real-world Transformer Inference on GPUs [TACO 2023 Ref 2]\n 8. hugging face https://huggingface.co/docs/transformers/performance\n 9. \n\n----------------------------------------\n\n\n# 1. HAT: Hardware-Aware Transformers for Efficient Natural Language Processing [MIT 247]\n\n👍 👍 👍 👍\n\n\n# 4. Making Transformer inference faster on GPUs[Blog]\n\nhttps://dev-discuss.pytorch.org/t/making-transformer-inference-faster-on-gpus/190",normalizedContent:" 1. hat: hardware-aware transformers for efficient natural language processing [mit 247]\n 2. turbotransformers: an efficient gpu serving system for transformer models [82]\n 3. improving the efficiency of transformers for resource-constrained devices [8]\n 4. bag of tricks for optimizing transformer efficiency [5]\n 5. making transformer inference faster on gpus[blog]\n 6. energy-efficient inference service of transformer-based deep learning models on gpus [4]\n 7. improving computation and memory efficiency for real-world transformer inference on gpus [taco 2023 ref 2]\n 8. hugging face https://huggingface.co/docs/transformers/performance\n 9. \n\n----------------------------------------\n\n\n# 1. hat: hardware-aware transformers for efficient natural language processing [mit 247]\n\n👍 👍 👍 👍\n\n\n# 4. making transformer inference faster on gpus[blog]\n\nhttps://dev-discuss.pytorch.org/t/making-transformer-inference-faster-on-gpus/190",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"How to run llama.cpp with gem5",frontmatter:{title:"How to run llama.cpp with gem5",date:"2024-01-21T23:32:49.000Z",permalink:"/pages/dc7037/"},regularPath:"/05.llm/03.gem5_LLAMA.html",relativePath:"05.llm/03.gem5_LLAMA.md",key:"v-259f44f9",path:"/pages/dc7037/",headersStr:null,content:'1) LLama.cpp\n\nllama support compilation of x86, arm and gpu.\n\na) github download llama.cpp\n\nhttps://github.com/ggerganov/llama.cpp.git\n\nb) gem5 support ARM architecture better, thus we compile llama.cpp with arm.\n\n\n\nThen we start to compile: make UNAME_M=aarch64\n\nthe compile tool chain is based on aarch64-linux-gnu-gc-10. It will generate "main" binary if compress successfully.\n\nuse file main to check the file:\n\n\n\nc) download a model to llama.cpp/models directory.\n\nHere I downloaded llama-2-7b-chat.Q2_K.gguf. It utilize 2bit quantization and only needs 3GB memory.\n\nGGML_TYPE_Q2_K - "type-1" 2-bit quantization in super-blocks containing 16 blocks, each block having 16 weight. Block scales and mins are quantized with 4 bits. This ends up effectively using 2.5625 bits per weight (bpw)\n\n\n\nd) then we can run the main binary and model, my prompt is "How are you".\n\n./main -m ./models/llama-2-7b-chat.Q2_K.gguf -p "How are you" -n 16\n\nThe last line in the following figure is the output.\n\n\n\n2) gem5\n\nafter we have build gem5 successfully, we can run the model with gem5.\n\nHere I plan to run with 8 core.\n\n> build/ARM/gem5.fast --outdir=./m5out/llm_9 ./configs/example/se.py -c $LLAMA_path/llama.cpp/main-arm \'--options=-m $LLAMA_path/llama-2-7b-chat.Q2_K.gguf -p Hi -n 16\' --cpu-type=ArmAtomicSimpleCPU --mem-size=8GB -n 8\n\n> The output is like the following:\n\n\n\nThe left several columns are output of LLAMA model. The followings are cpu ID with instruction executed.\n\nThe output of the model is "Hi，I\'m a 30-year-old male, and..."\n\nHowever, only 4 core has been used, since LLAMA.cpp default threads configuration is 4.\n\nThen we can configure the model with 8 thread.\n\n> build/ARM/gem5.fast --outdir=./m5out/llm_9 ./configs/example/se.py -c $LLAMA_path/llama.cpp/main-arm \'--options=-m $LLAMA_path/llama-2-7b-chat.Q2_K.gguf -p Hi -n 16 -t 8\' --cpu-type=ArmAtomicSimpleCPU --mem-size=8GB -n 8\n\n\n\nNow, you can see that by default, only CPU0 execute 2.9 billion instruction with the output of "Hi" in 8 core simulation. However, with default 4 core, it has to run 5.4 billion instruction to the same result. This complies to the number of cores runing parallely.',normalizedContent:'1) llama.cpp\n\nllama support compilation of x86, arm and gpu.\n\na) github download llama.cpp\n\nhttps://github.com/ggerganov/llama.cpp.git\n\nb) gem5 support arm architecture better, thus we compile llama.cpp with arm.\n\n\n\nthen we start to compile: make uname_m=aarch64\n\nthe compile tool chain is based on aarch64-linux-gnu-gc-10. it will generate "main" binary if compress successfully.\n\nuse file main to check the file:\n\n\n\nc) download a model to llama.cpp/models directory.\n\nhere i downloaded llama-2-7b-chat.q2_k.gguf. it utilize 2bit quantization and only needs 3gb memory.\n\nggml_type_q2_k - "type-1" 2-bit quantization in super-blocks containing 16 blocks, each block having 16 weight. block scales and mins are quantized with 4 bits. this ends up effectively using 2.5625 bits per weight (bpw)\n\n\n\nd) then we can run the main binary and model, my prompt is "how are you".\n\n./main -m ./models/llama-2-7b-chat.q2_k.gguf -p "how are you" -n 16\n\nthe last line in the following figure is the output.\n\n\n\n2) gem5\n\nafter we have build gem5 successfully, we can run the model with gem5.\n\nhere i plan to run with 8 core.\n\n> build/arm/gem5.fast --outdir=./m5out/llm_9 ./configs/example/se.py -c $llama_path/llama.cpp/main-arm \'--options=-m $llama_path/llama-2-7b-chat.q2_k.gguf -p hi -n 16\' --cpu-type=armatomicsimplecpu --mem-size=8gb -n 8\n\n> the output is like the following:\n\n\n\nthe left several columns are output of llama model. the followings are cpu id with instruction executed.\n\nthe output of the model is "hi，i\'m a 30-year-old male, and..."\n\nhowever, only 4 core has been used, since llama.cpp default threads configuration is 4.\n\nthen we can configure the model with 8 thread.\n\n> build/arm/gem5.fast --outdir=./m5out/llm_9 ./configs/example/se.py -c $llama_path/llama.cpp/main-arm \'--options=-m $llama_path/llama-2-7b-chat.q2_k.gguf -p hi -n 16 -t 8\' --cpu-type=armatomicsimplecpu --mem-size=8gb -n 8\n\n\n\nnow, you can see that by default, only cpu0 execute 2.9 billion instruction with the output of "hi" in 8 core simulation. however, with default 4 core, it has to run 5.4 billion instruction to the same result. this complies to the number of cores runing parallely.',charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"留言板",frontmatter:{title:"留言板",date:"2022-07-12T10:38:46.000Z",permalink:"/message-board"},regularPath:"/09.nine/01.%E7%95%99%E8%A8%80%E6%9D%BF.html",relativePath:"09.nine/01.留言板.md",key:"v-2e715932",path:"/message-board/",headersStr:null,content:"你可以在这里留下想说的内容。",normalizedContent:"你可以在这里留下想说的内容。",charsets:{cjk:!0},lastUpdated:"2024/01/21, 22:21:54"},{title:"Home",frontmatter:{home:!0,heroText:"Notes in Computer System.",actionText:"Start →",actionLink:"/pages/f27694/",bannerBg:"none",postList:"simple"},regularPath:"/",relativePath:"index.md",key:"v-2f8a0a7e",path:"/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"archives",frontmatter:{archivesPage:!0,title:"archives",permalink:"/archives/",article:!1},regularPath:"/@pages/archivesPage.html",relativePath:"@pages/archivesPage.md",key:"v-f8e02736",path:"/archives/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/21, 22:21:54"},{title:"Add pictures",frontmatter:{title:"Add pictures",date:"2023-05-08T00:00:00.000Z",permalink:"/pages/3a292e/"},regularPath:"/pictures/addPictures.html",relativePath:"pictures/addPictures.md",key:"v-01216c79",path:"/pages/3a292e/",headersStr:null,content:"Add pictures into this foler",normalizedContent:"add pictures into this foler",charsets:{},lastUpdated:"2024/01/21, 22:21:54"}],themeConfig:{nav:[{text:"Home",link:"/"},{text:"hbm",link:"/hbm/"},{text:"compiler",link:"/compiler/"},{text:"gpu",link:"/gpu/"},{text:"cpu",link:"/cpu/"},{text:"llm",link:"/llm/"},{text:"BBS",link:"/message-board/"},{text:"CSDN",link:"https://blog.csdn.net/hit_shaoqi"}],sidebarDepth:2,repo:"hitqshao/qishao-notes",searchMaxSuggestions:10,lastUpdated:"上次更新",editLinks:!0,docsDir:"docs",docsBranch:"main",editLinkText:"帮助我们改善此页面",searchPlaceholder:"按下 𝑺 搜索",category:!1,tag:!1,sidebar:{"/00.目录页/":[["00.Content.md","Content","/pages/f27694/"],["01.hbm.md","HBM","/hbm/"],["02.compiler.md","llvm & mlir","/compiler/"],["03.gpu.md","gpu","/gpu/"],["04.cpu.md","cpu","/cpu/"],["05.llm.md","llm","/llm/"]],catalogue:{hbm:"/hbm/",compiler:"/compiler/",gpu:"/gpu/",cpu:"/cpu/",llm:"/llm/"},"/01.hbm/":[["01.HBM_Paper_List.md","HBM Paper List","/pages/24769e/"],["02.hbm_dead_block_predictor.md","HBM Dead Block Predictor","/pages/2476af/"],["03.Dynamically_Adapting _Page_Migration_Policies_Based_on_Applications_Memory_Access_Behaviors.md","Dynamically Adapting  Page Migration Policies Based on Applications Memory Access Behaviors","/pages/24769f/"],["04.DRAM_PCM_NVM_Cache.md","DRAM PCM NVM Cache","/pages/24760e/"],["05.cache_mem_compression.md","Cache Memory Compression","/pages/2476bf/"],["06.memory ecc.md","memory-ecc","/pages/f07695/"],["07.hbm-latency.md","hbm-latency","/pages/f07696/"],["08.compression.md","compression","/pages/f07698/"]],"/02.compiler/":[["01.llvm_frontend.md","llvm front end","/pages/000001/"]],"/03.gpu/":[["01.operand_collector.md","operand-collector","/pages/cc7034/"],["02.warp_execution.md","GPU WARP Scheduler","/pages/2476ae/"],["03.Precise Exception.md","Precision Exception","/pages/14769f/"],["04.Unified_Memory.md","Unified Memory Paper List","/pages/44771e/"],["05.TensorCore.md","TensorCore Paper List","/pages/44871e/"],["06.MemoryBehaviour.md","Memory Behaviour Paper List","/pages/45871e/"],["07.GPUVirtualization.md","GPU Virtualization Paper List","/pages/45871f/"],["08.LLM.md","Large Language Model Paper List","/pages/458720/"],["09.Simulator.md","GPU Simulator","/pages/458721/"],["1234.TODO.md","TO READ","/pages/47871e/"]],"/04.cpu/":[["01.checkpoint.md","checkpoint","/pages/cc7035/"],["1234.markdown.md","two-test-1","/pages/f07697/"]],"/05.llm/":[["01.How_LLM_Works.md","how llm works","/pages/dc7035/"],["02.LLM_HW_Opt.md","LLM Hardware Optimization","/pages/dc7036/"],["03.gem5_LLAMA.md","How to run llama.cpp with gem5","/pages/dc7037/"]],"/09.nine/":[["01.留言板.md","留言板","/message-board"]]},pageStyle:"line",updateBar:{showToArticle:!1},author:{name:"hitqishao",link:"https://github.com/hitqshao"},social:{icons:[{iconClass:"icon-github",title:"GitHub",link:"https://github.com/hitqshao"},{iconClass:"icon-youjian",title:"发邮件",link:"mailto:hitqshao@163.com"},{iconClass:"icon-gitee",title:"Gitee",link:"https://gitee.com/hitqshao"}]},footer:{createYear:2022,copyrightInfo:'Eryajf | <a href="https://github.com/hitqshao/qishao-notes/blob/main/LICENSE" target="_blank">MIT License</a>'}}};var cc=n(116),lc=n(117),uc=n(14);var hc={computed:{$filterPosts(){return this.$site.pages.filter(e=>{const{frontmatter:{pageComponent:t,article:n,home:r}}=e;return!(t||!1===n||!0===r)})},$sortPosts(){return(e=this.$filterPosts).sort((e,t)=>{const n=e.frontmatter.sticky,r=t.frontmatter.sticky;return n&&r?n==r?Object(uc.a)(e,t):n-r:n&&!r?-1:!n&&r?1:Object(uc.a)(e,t)}),e;var e},$sortPostsByDate(){return(e=this.$filterPosts).sort((e,t)=>Object(uc.a)(e,t)),e;var e},$groupPosts(){return function(e){const t={},n={};for(let r=0,a=e.length;r<a;r++){const{frontmatter:{categories:a,tags:i}}=e[r];"array"===Object(uc.n)(a)&&a.forEach(n=>{n&&(t[n]||(t[n]=[]),t[n].push(e[r]))}),"array"===Object(uc.n)(i)&&i.forEach(t=>{t&&(n[t]||(n[t]=[]),n[t].push(e[r]))})}return{categories:t,tags:n}}(this.$sortPosts)},$categoriesAndTags(){return function(e){const t=[],n=[];for(let n in e.categories)t.push({key:n,length:e.categories[n].length});for(let t in e.tags)n.push({key:t,length:e.tags[t].length});return{categories:t,tags:n}}(this.$groupPosts)}}};Wn.component(cc.default),Wn.component(lc.default);function dc(e){return e.toString().padStart(2,"0")}n(266);Wn.component("Badge",()=>Promise.all([n.e(0),n.e(3)]).then(n.bind(null,441))),Wn.component("CodeBlock",()=>Promise.resolve().then(n.bind(null,116))),Wn.component("CodeGroup",()=>Promise.resolve().then(n.bind(null,117)));n(267);
/**
  * vue-class-component v7.2.6
  * (c) 2015-present Evan You
  * @license MIT
  */
function pc(e){return(pc="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function fc(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function mc(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function gc(){return"undefined"!=typeof Reflect&&Reflect.defineMetadata&&Reflect.getOwnMetadataKeys}function yc(e,t){vc(e,t),Object.getOwnPropertyNames(t.prototype).forEach((function(n){vc(e.prototype,t.prototype,n)})),Object.getOwnPropertyNames(t).forEach((function(n){vc(e,t,n)}))}function vc(e,t,n){(n?Reflect.getOwnMetadataKeys(t,n):Reflect.getOwnMetadataKeys(t)).forEach((function(r){var a=n?Reflect.getOwnMetadata(r,t,n):Reflect.getOwnMetadata(r,t);n?Reflect.defineMetadata(r,a,e,n):Reflect.defineMetadata(r,a,e)}))}var bc={__proto__:[]}instanceof Array;function wc(e){return function(t,n,r){var a="function"==typeof t?t:t.constructor;a.__decorators__||(a.__decorators__=[]),"number"!=typeof r&&(r=void 0),a.__decorators__.push((function(t){return e(t,n,r)}))}}function _c(e,t){var n=t.prototype._init;t.prototype._init=function(){var t=this,n=Object.getOwnPropertyNames(e);if(e.$options.props)for(var r in e.$options.props)e.hasOwnProperty(r)||n.push(r);n.forEach((function(n){Object.defineProperty(t,n,{get:function(){return e[n]},set:function(t){e[n]=t},configurable:!0})}))};var r=new t;t.prototype._init=n;var a={};return Object.keys(r).forEach((function(e){void 0!==r[e]&&(a[e]=r[e])})),a}var xc=["data","beforeCreate","created","beforeMount","mounted","beforeDestroy","destroyed","beforeUpdate","updated","activated","deactivated","render","errorCaptured","serverPrefetch"];function kc(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};t.name=t.name||e._componentTag||e.name;var n=e.prototype;Object.getOwnPropertyNames(n).forEach((function(e){if("constructor"!==e)if(xc.indexOf(e)>-1)t[e]=n[e];else{var r=Object.getOwnPropertyDescriptor(n,e);void 0!==r.value?"function"==typeof r.value?(t.methods||(t.methods={}))[e]=r.value:(t.mixins||(t.mixins=[])).push({data:function(){return fc({},e,r.value)}}):(r.get||r.set)&&((t.computed||(t.computed={}))[e]={get:r.get,set:r.set})}})),(t.mixins||(t.mixins=[])).push({data:function(){return _c(this,e)}});var r=e.__decorators__;r&&(r.forEach((function(e){return e(t)})),delete e.__decorators__);var a=Object.getPrototypeOf(e.prototype),i=a instanceof Wn?a.constructor:Wn,o=i.extend(t);return Mc(o,e,i),gc()&&yc(o,e),o}var Cc={prototype:!0,arguments:!0,callee:!0,caller:!0};function Mc(e,t,n){Object.getOwnPropertyNames(t).forEach((function(r){if(!Cc[r]){var a=Object.getOwnPropertyDescriptor(e,r);if(!a||a.configurable){var i,o,s=Object.getOwnPropertyDescriptor(t,r);if(!bc){if("cid"===r)return;var c=Object.getOwnPropertyDescriptor(n,r);if(i=s.value,o=pc(i),null!=i&&("object"===o||"function"===o)&&c&&c.value===s.value)return}0,Object.defineProperty(e,r,s)}}}))}function Ac(e){return"function"==typeof e?kc(e):function(t){return kc(t,e)}}Ac.registerHooks=function(e){xc.push.apply(xc,mc(e))};var Pc=Ac;function Tc(e){return wc((function(t,n){void 0===t.inject&&(t.inject={}),Array.isArray(t.inject)||(t.inject[n]=e||n)}))}function Sc(e){var t=function(){var n=this,r="function"==typeof e?e.call(this):e;for(var a in(r=Object.create(r||null)).__reactiveInject__=this.__reactiveInject__||{},t.managed)r[t.managed[a]]=this[a];var i=function(e){r[t.managedReactive[e]]=o[e],Object.defineProperty(r.__reactiveInject__,t.managedReactive[e],{enumerable:!0,get:function(){return n[e]}})},o=this;for(var a in t.managedReactive)i(a);return r};return t.managed={},t.managedReactive={},t}function Oc(e){return"function"!=typeof e||!e.managed&&!e.managedReactive}var Ec="undefined"!=typeof Reflect&&void 0!==Reflect.getMetadata;function Ic(e,t,n){if(Ec&&!Array.isArray(e)&&"function"!=typeof e&&void 0===e.type){var r=Reflect.getMetadata("design:type",t,n);r!==Object&&(e.type=r)}}function Lc(e){return void 0===e&&(e={}),function(t,n){Ic(e,t,n),wc((function(t,n){(t.props||(t.props={}))[n]=e}))(t,n)}}function jc(e,t){void 0===t&&(t={});var n=t.deep,r=void 0!==n&&n,a=t.immediate,i=void 0!==a&&a;return wc((function(t,n){"object"!=typeof t.watch&&(t.watch=Object.create(null));var a=t.watch;"object"!=typeof a[e]||Array.isArray(a[e])?void 0===a[e]&&(a[e]=[]):a[e]=[a[e]],a[e].push({handler:n,deep:r,immediate:i})}))}var Rc=n(16);const $c=(e,t)=>`${e}${Object(Rc.stringify)(t,{addQueryPrefix:!0})}`,Dc=(e,t)=>`${e.replace(/\/$/,"")}/${t.replace(/^\//,"")}`;var zc=n(113),Uc=n.n(zc);const Bc=e=>Uc()(e,"YYYY-MM-DD HH:mm:ss"),qc=e=>(e.split("#")[0]||"").split("?")[0]||"";
/*!
 * vue-i18n v8.28.2 
 * (c) 2022 kazuya kawaguchi
 * Released under the MIT License.
 */
var Fc=["compactDisplay","currency","currencyDisplay","currencySign","localeMatcher","notation","numberingSystem","signDisplay","style","unit","unitDisplay","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits"],Nc=["dateStyle","timeStyle","calendar","localeMatcher","hour12","hourCycle","timeZone","formatMatcher","weekday","era","year","month","day","hour","minute","second","timeZoneName"];function Hc(e,t){"undefined"!=typeof console&&(console.warn("[vue-i18n] "+e),t&&console.warn(t.stack))}var Gc=Array.isArray;function Vc(e){return null!==e&&"object"==typeof e}function Wc(e){return"string"==typeof e}var Kc=Object.prototype.toString;function Yc(e){return"[object Object]"===Kc.call(e)}function Zc(e){return null==e}function Jc(e){return"function"==typeof e}function Xc(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var n=null,r=null;return 1===e.length?Vc(e[0])||Gc(e[0])?r=e[0]:"string"==typeof e[0]&&(n=e[0]):2===e.length&&("string"==typeof e[0]&&(n=e[0]),(Vc(e[1])||Gc(e[1]))&&(r=e[1])),{locale:n,params:r}}function Qc(e){return JSON.parse(JSON.stringify(e))}function el(e,t){return!!~e.indexOf(t)}var tl=Object.prototype.hasOwnProperty;function nl(e,t){return tl.call(e,t)}function rl(e){for(var t=arguments,n=Object(e),r=1;r<arguments.length;r++){var a=t[r];if(null!=a){var i=void 0;for(i in a)nl(a,i)&&(Vc(a[i])?n[i]=rl(n[i],a[i]):n[i]=a[i])}}return n}function al(e,t){if(e===t)return!0;var n=Vc(e),r=Vc(t);if(!n||!r)return!n&&!r&&String(e)===String(t);try{var a=Gc(e),i=Gc(t);if(a&&i)return e.length===t.length&&e.every((function(e,n){return al(e,t[n])}));if(a||i)return!1;var o=Object.keys(e),s=Object.keys(t);return o.length===s.length&&o.every((function(n){return al(e[n],t[n])}))}catch(e){return!1}}function il(e){return null!=e&&Object.keys(e).forEach((function(t){"string"==typeof e[t]&&(e[t]=e[t].replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;"))})),e}var ol={name:"i18n",functional:!0,props:{tag:{type:[String,Boolean,Object],default:"span"},path:{type:String,required:!0},locale:{type:String},places:{type:[Array,Object]}},render:function(e,t){var n=t.data,r=t.parent,a=t.props,i=t.slots,o=r.$i18n;if(o){var s=a.path,c=a.locale,l=a.places,u=i(),h=o.i(s,c,function(e){var t;for(t in e)if("default"!==t)return!1;return Boolean(t)}(u)||l?function(e,t){var n=t?function(e){0;return Array.isArray(e)?e.reduce(cl,{}):Object.assign({},e)}(t):{};if(!e)return n;var r=(e=e.filter((function(e){return e.tag||""!==e.text.trim()}))).every(ll);0;return e.reduce(r?sl:cl,n)}(u.default,l):u),d=a.tag&&!0!==a.tag||!1===a.tag?a.tag:"span";return d?e(d,n,h):h}}};function sl(e,t){return t.data&&t.data.attrs&&t.data.attrs.place&&(e[t.data.attrs.place]=t),e}function cl(e,t,n){return e[n]=t,e}function ll(e){return Boolean(e.data&&e.data.attrs&&e.data.attrs.place)}var ul,hl={name:"i18n-n",functional:!0,props:{tag:{type:[String,Boolean,Object],default:"span"},value:{type:Number,required:!0},format:{type:[String,Object]},locale:{type:String}},render:function(e,t){var n=t.props,r=t.parent,a=t.data,i=r.$i18n;if(!i)return null;var o=null,s=null;Wc(n.format)?o=n.format:Vc(n.format)&&(n.format.key&&(o=n.format.key),s=Object.keys(n.format).reduce((function(e,t){var r;return el(Fc,t)?Object.assign({},e,((r={})[t]=n.format[t],r)):e}),null));var c=n.locale||i.locale,l=i._ntp(n.value,c,o,s),u=l.map((function(e,t){var n,r=a.scopedSlots&&a.scopedSlots[e.type];return r?r(((n={})[e.type]=e.value,n.index=t,n.parts=l,n)):e.value})),h=n.tag&&!0!==n.tag||!1===n.tag?n.tag:"span";return h?e(h,{attrs:a.attrs,class:a.class,staticClass:a.staticClass},u):u}};function dl(e,t,n){ml(e,n)&&gl(e,t,n)}function pl(e,t,n,r){if(ml(e,n)){var a=n.context.$i18n;(function(e,t){var n=t.context;return e._locale===n.$i18n.locale})(e,n)&&al(t.value,t.oldValue)&&al(e._localeMessage,a.getLocaleMessage(a.locale))||gl(e,t,n)}}function fl(e,t,n,r){if(n.context){var a=n.context.$i18n||{};t.modifiers.preserve||a.preserveDirectiveContent||(e.textContent=""),e._vt=void 0,delete e._vt,e._locale=void 0,delete e._locale,e._localeMessage=void 0,delete e._localeMessage}else Hc("Vue instance does not exists in VNode context")}function ml(e,t){var n=t.context;return n?!!n.$i18n||(Hc("VueI18n instance does not exists in Vue instance"),!1):(Hc("Vue instance does not exists in VNode context"),!1)}function gl(e,t,n){var r,a,i=function(e){var t,n,r,a;Wc(e)?t=e:Yc(e)&&(t=e.path,n=e.locale,r=e.args,a=e.choice);return{path:t,locale:n,args:r,choice:a}}(t.value),o=i.path,s=i.locale,c=i.args,l=i.choice;if(o||s||c)if(o){var u=n.context;e._vt=e.textContent=null!=l?(r=u.$i18n).tc.apply(r,[o,l].concat(yl(s,c))):(a=u.$i18n).t.apply(a,[o].concat(yl(s,c))),e._locale=u.$i18n.locale,e._localeMessage=u.$i18n.getLocaleMessage(u.$i18n.locale)}else Hc("`path` is required in v-t directive");else Hc("value type not supported")}function yl(e,t){var n=[];return e&&n.push(e),t&&(Array.isArray(t)||Yc(t))&&n.push(t),n}function vl(e,t){void 0===t&&(t={bridge:!1}),vl.installed=!0;(ul=e).version&&Number(ul.version.split(".")[0]);(function(e){e.prototype.hasOwnProperty("$i18n")||Object.defineProperty(e.prototype,"$i18n",{get:function(){return this._i18n}}),e.prototype.$t=function(e){for(var t=[],n=arguments.length-1;n-- >0;)t[n]=arguments[n+1];var r=this.$i18n;return r._t.apply(r,[e,r.locale,r._getMessages(),this].concat(t))},e.prototype.$tc=function(e,t){for(var n=[],r=arguments.length-2;r-- >0;)n[r]=arguments[r+2];var a=this.$i18n;return a._tc.apply(a,[e,a.locale,a._getMessages(),this,t].concat(n))},e.prototype.$te=function(e,t){var n=this.$i18n;return n._te(e,n.locale,n._getMessages(),t)},e.prototype.$d=function(e){for(var t,n=[],r=arguments.length-1;r-- >0;)n[r]=arguments[r+1];return(t=this.$i18n).d.apply(t,[e].concat(n))},e.prototype.$n=function(e){for(var t,n=[],r=arguments.length-1;r-- >0;)n[r]=arguments[r+1];return(t=this.$i18n).n.apply(t,[e].concat(n))}})(ul),ul.mixin(function(e){function t(){this!==this.$root&&this.$options.__INTLIFY_META__&&this.$el&&this.$el.setAttribute("data-intlify",this.$options.__INTLIFY_META__)}return void 0===e&&(e=!1),e?{mounted:t}:{beforeCreate:function(){var e=this.$options;if(e.i18n=e.i18n||(e.__i18nBridge||e.__i18n?{}:null),e.i18n)if(e.i18n instanceof jl){if(e.__i18nBridge||e.__i18n)try{var t=e.i18n&&e.i18n.messages?e.i18n.messages:{};(e.__i18nBridge||e.__i18n).forEach((function(e){t=rl(t,JSON.parse(e))})),Object.keys(t).forEach((function(n){e.i18n.mergeLocaleMessage(n,t[n])}))}catch(e){0}this._i18n=e.i18n,this._i18nWatcher=this._i18n.watchI18nData()}else if(Yc(e.i18n)){var n=this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof jl?this.$root.$i18n:null;if(n&&(e.i18n.root=this.$root,e.i18n.formatter=n.formatter,e.i18n.fallbackLocale=n.fallbackLocale,e.i18n.formatFallbackMessages=n.formatFallbackMessages,e.i18n.silentTranslationWarn=n.silentTranslationWarn,e.i18n.silentFallbackWarn=n.silentFallbackWarn,e.i18n.pluralizationRules=n.pluralizationRules,e.i18n.preserveDirectiveContent=n.preserveDirectiveContent),e.__i18nBridge||e.__i18n)try{var r=e.i18n&&e.i18n.messages?e.i18n.messages:{};(e.__i18nBridge||e.__i18n).forEach((function(e){r=rl(r,JSON.parse(e))})),e.i18n.messages=r}catch(e){0}var a=e.i18n.sharedMessages;a&&Yc(a)&&(e.i18n.messages=rl(e.i18n.messages,a)),this._i18n=new jl(e.i18n),this._i18nWatcher=this._i18n.watchI18nData(),(void 0===e.i18n.sync||e.i18n.sync)&&(this._localeWatcher=this.$i18n.watchLocale()),n&&n.onComponentInstanceCreated(this._i18n)}else 0;else this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof jl?this._i18n=this.$root.$i18n:e.parent&&e.parent.$i18n&&e.parent.$i18n instanceof jl&&(this._i18n=e.parent.$i18n)},beforeMount:function(){var e=this.$options;e.i18n=e.i18n||(e.__i18nBridge||e.__i18n?{}:null),e.i18n?(e.i18n instanceof jl||Yc(e.i18n))&&(this._i18n.subscribeDataChanging(this),this._subscribing=!0):(this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof jl||e.parent&&e.parent.$i18n&&e.parent.$i18n instanceof jl)&&(this._i18n.subscribeDataChanging(this),this._subscribing=!0)},mounted:t,beforeDestroy:function(){if(this._i18n){var e=this;this.$nextTick((function(){e._subscribing&&(e._i18n.unsubscribeDataChanging(e),delete e._subscribing),e._i18nWatcher&&(e._i18nWatcher(),e._i18n.destroyVM(),delete e._i18nWatcher),e._localeWatcher&&(e._localeWatcher(),delete e._localeWatcher)}))}}}}(t.bridge)),ul.directive("t",{bind:dl,update:pl,unbind:fl}),ul.component(ol.name,ol),ul.component(hl.name,hl),ul.config.optionMergeStrategies.i18n=function(e,t){return void 0===t?e:t}}var bl=function(){this._caches=Object.create(null)};bl.prototype.interpolate=function(e,t){if(!t)return[e];var n=this._caches[e];return n||(n=function(e){var t=[],n=0,r="";for(;n<e.length;){var a=e[n++];if("{"===a){r&&t.push({type:"text",value:r}),r="";var i="";for(a=e[n++];void 0!==a&&"}"!==a;)i+=a,a=e[n++];var o="}"===a,s=wl.test(i)?"list":o&&_l.test(i)?"named":"unknown";t.push({value:i,type:s})}else"%"===a?"{"!==e[n]&&(r+=a):r+=a}return r&&t.push({type:"text",value:r}),t}(e),this._caches[e]=n),function(e,t){var n=[],r=0,a=Array.isArray(t)?"list":Vc(t)?"named":"unknown";if("unknown"===a)return n;for(;r<e.length;){var i=e[r];switch(i.type){case"text":n.push(i.value);break;case"list":n.push(t[parseInt(i.value,10)]);break;case"named":"named"===a&&n.push(t[i.value]);break;case"unknown":0}r++}return n}(n,t)};var wl=/^(?:\d)+/,_l=/^(?:\w)+/;var xl=[];xl[0]={ws:[0],ident:[3,0],"[":[4],eof:[7]},xl[1]={ws:[1],".":[2],"[":[4],eof:[7]},xl[2]={ws:[2],ident:[3,0],0:[3,0],number:[3,0]},xl[3]={ident:[3,0],0:[3,0],number:[3,0],ws:[1,1],".":[2,1],"[":[4,1],eof:[7,1]},xl[4]={"'":[5,0],'"':[6,0],"[":[4,2],"]":[1,3],eof:8,else:[4,0]},xl[5]={"'":[4,0],eof:8,else:[5,0]},xl[6]={'"':[4,0],eof:8,else:[6,0]};var kl=/^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;function Cl(e){if(null==e)return"eof";switch(e.charCodeAt(0)){case 91:case 93:case 46:case 34:case 39:return e;case 95:case 36:case 45:return"ident";case 9:case 10:case 13:case 160:case 65279:case 8232:case 8233:return"ws"}return"ident"}function Ml(e){var t,n,r,a=e.trim();return("0"!==e.charAt(0)||!isNaN(e))&&(r=a,kl.test(r)?(n=(t=a).charCodeAt(0))!==t.charCodeAt(t.length-1)||34!==n&&39!==n?t:t.slice(1,-1):"*"+a)}var Al=function(){this._cache=Object.create(null)};Al.prototype.parsePath=function(e){var t=this._cache[e];return t||(t=function(e){var t,n,r,a,i,o,s,c=[],l=-1,u=0,h=0,d=[];function p(){var t=e[l+1];if(5===u&&"'"===t||6===u&&'"'===t)return l++,r="\\"+t,d[0](),!0}for(d[1]=function(){void 0!==n&&(c.push(n),n=void 0)},d[0]=function(){void 0===n?n=r:n+=r},d[2]=function(){d[0](),h++},d[3]=function(){if(h>0)h--,u=4,d[0]();else{if(h=0,void 0===n)return!1;if(!1===(n=Ml(n)))return!1;d[1]()}};null!==u;)if(l++,"\\"!==(t=e[l])||!p()){if(a=Cl(t),8===(i=(s=xl[u])[a]||s.else||8))return;if(u=i[0],(o=d[i[1]])&&(r=void 0===(r=i[2])?t:r,!1===o()))return;if(7===u)return c}}(e))&&(this._cache[e]=t),t||[]},Al.prototype.getPathValue=function(e,t){if(!Vc(e))return null;var n=this.parsePath(t);if(0===n.length)return null;for(var r=n.length,a=e,i=0;i<r;){var o=a[n[i]];if(null==o)return null;a=o,i++}return a};var Pl,Tl=/<\/?[\w\s="/.':;#-\/]+>/,Sl=/(?:@(?:\.[a-zA-Z]+)?:(?:[\w\-_|./]+|\([\w\-_:|./]+\)))/g,Ol=/^@(?:\.([a-zA-Z]+))?:/,El=/[()]/g,Il={upper:function(e){return e.toLocaleUpperCase()},lower:function(e){return e.toLocaleLowerCase()},capitalize:function(e){return""+e.charAt(0).toLocaleUpperCase()+e.substr(1)}},Ll=new bl,jl=function(e){var t=this;void 0===e&&(e={}),!ul&&"undefined"!=typeof window&&window.Vue&&vl(window.Vue);var n=e.locale||"en-US",r=!1!==e.fallbackLocale&&(e.fallbackLocale||"en-US"),a=e.messages||{},i=e.dateTimeFormats||e.datetimeFormats||{},o=e.numberFormats||{};this._vm=null,this._formatter=e.formatter||Ll,this._modifiers=e.modifiers||{},this._missing=e.missing||null,this._root=e.root||null,this._sync=void 0===e.sync||!!e.sync,this._fallbackRoot=void 0===e.fallbackRoot||!!e.fallbackRoot,this._fallbackRootWithEmptyString=void 0===e.fallbackRootWithEmptyString||!!e.fallbackRootWithEmptyString,this._formatFallbackMessages=void 0!==e.formatFallbackMessages&&!!e.formatFallbackMessages,this._silentTranslationWarn=void 0!==e.silentTranslationWarn&&e.silentTranslationWarn,this._silentFallbackWarn=void 0!==e.silentFallbackWarn&&!!e.silentFallbackWarn,this._dateTimeFormatters={},this._numberFormatters={},this._path=new Al,this._dataListeners=new Set,this._componentInstanceCreatedListener=e.componentInstanceCreatedListener||null,this._preserveDirectiveContent=void 0!==e.preserveDirectiveContent&&!!e.preserveDirectiveContent,this.pluralizationRules=e.pluralizationRules||{},this._warnHtmlInMessage=e.warnHtmlInMessage||"off",this._postTranslation=e.postTranslation||null,this._escapeParameterHtml=e.escapeParameterHtml||!1,"__VUE_I18N_BRIDGE__"in e&&(this.__VUE_I18N_BRIDGE__=e.__VUE_I18N_BRIDGE__),this.getChoiceIndex=function(e,n){var r=Object.getPrototypeOf(t);if(r&&r.getChoiceIndex)return r.getChoiceIndex.call(t,e,n);var a,i;return t.locale in t.pluralizationRules?t.pluralizationRules[t.locale].apply(t,[e,n]):(a=e,i=n,a=Math.abs(a),2===i?a?a>1?1:0:1:a?Math.min(a,2):0)},this._exist=function(e,n){return!(!e||!n)&&(!Zc(t._path.getPathValue(e,n))||!!e[n])},"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||Object.keys(a).forEach((function(e){t._checkLocaleMessage(e,t._warnHtmlInMessage,a[e])})),this._initVM({locale:n,fallbackLocale:r,messages:a,dateTimeFormats:i,numberFormats:o})},Rl={vm:{configurable:!0},messages:{configurable:!0},dateTimeFormats:{configurable:!0},numberFormats:{configurable:!0},availableLocales:{configurable:!0},locale:{configurable:!0},fallbackLocale:{configurable:!0},formatFallbackMessages:{configurable:!0},missing:{configurable:!0},formatter:{configurable:!0},silentTranslationWarn:{configurable:!0},silentFallbackWarn:{configurable:!0},preserveDirectiveContent:{configurable:!0},warnHtmlInMessage:{configurable:!0},postTranslation:{configurable:!0},sync:{configurable:!0}};jl.prototype._checkLocaleMessage=function(e,t,n){var r=function(e,t,n,a){if(Yc(n))Object.keys(n).forEach((function(i){var o=n[i];Yc(o)?(a.push(i),a.push("."),r(e,t,o,a),a.pop(),a.pop()):(a.push(i),r(e,t,o,a),a.pop())}));else if(Gc(n))n.forEach((function(n,i){Yc(n)?(a.push("["+i+"]"),a.push("."),r(e,t,n,a),a.pop(),a.pop()):(a.push("["+i+"]"),r(e,t,n,a),a.pop())}));else if(Wc(n)){if(Tl.test(n)){var i="Detected HTML in message '"+n+"' of keypath '"+a.join("")+"' at '"+t+"'. Consider component interpolation with '<i18n>' to avoid XSS. See https://bit.ly/2ZqJzkp";"warn"===e?Hc(i):"error"===e&&function(e,t){"undefined"!=typeof console&&(console.error("[vue-i18n] "+e),t&&console.error(t.stack))}(i)}}};r(t,e,n,[])},jl.prototype._initVM=function(e){var t=ul.config.silent;ul.config.silent=!0,this._vm=new ul({data:e,__VUE18N__INSTANCE__:!0}),ul.config.silent=t},jl.prototype.destroyVM=function(){this._vm.$destroy()},jl.prototype.subscribeDataChanging=function(e){this._dataListeners.add(e)},jl.prototype.unsubscribeDataChanging=function(e){!function(e,t){if(e.delete(t));}(this._dataListeners,e)},jl.prototype.watchI18nData=function(){var e=this;return this._vm.$watch("$data",(function(){for(var t,n,r=(t=e._dataListeners,n=[],t.forEach((function(e){return n.push(e)})),n),a=r.length;a--;)ul.nextTick((function(){r[a]&&r[a].$forceUpdate()}))}),{deep:!0})},jl.prototype.watchLocale=function(e){if(e){if(!this.__VUE_I18N_BRIDGE__)return null;var t=this,n=this._vm;return this.vm.$watch("locale",(function(r){n.$set(n,"locale",r),t.__VUE_I18N_BRIDGE__&&e&&(e.locale.value=r),n.$forceUpdate()}),{immediate:!0})}if(!this._sync||!this._root)return null;var r=this._vm;return this._root.$i18n.vm.$watch("locale",(function(e){r.$set(r,"locale",e),r.$forceUpdate()}),{immediate:!0})},jl.prototype.onComponentInstanceCreated=function(e){this._componentInstanceCreatedListener&&this._componentInstanceCreatedListener(e,this)},Rl.vm.get=function(){return this._vm},Rl.messages.get=function(){return Qc(this._getMessages())},Rl.dateTimeFormats.get=function(){return Qc(this._getDateTimeFormats())},Rl.numberFormats.get=function(){return Qc(this._getNumberFormats())},Rl.availableLocales.get=function(){return Object.keys(this.messages).sort()},Rl.locale.get=function(){return this._vm.locale},Rl.locale.set=function(e){this._vm.$set(this._vm,"locale",e)},Rl.fallbackLocale.get=function(){return this._vm.fallbackLocale},Rl.fallbackLocale.set=function(e){this._localeChainCache={},this._vm.$set(this._vm,"fallbackLocale",e)},Rl.formatFallbackMessages.get=function(){return this._formatFallbackMessages},Rl.formatFallbackMessages.set=function(e){this._formatFallbackMessages=e},Rl.missing.get=function(){return this._missing},Rl.missing.set=function(e){this._missing=e},Rl.formatter.get=function(){return this._formatter},Rl.formatter.set=function(e){this._formatter=e},Rl.silentTranslationWarn.get=function(){return this._silentTranslationWarn},Rl.silentTranslationWarn.set=function(e){this._silentTranslationWarn=e},Rl.silentFallbackWarn.get=function(){return this._silentFallbackWarn},Rl.silentFallbackWarn.set=function(e){this._silentFallbackWarn=e},Rl.preserveDirectiveContent.get=function(){return this._preserveDirectiveContent},Rl.preserveDirectiveContent.set=function(e){this._preserveDirectiveContent=e},Rl.warnHtmlInMessage.get=function(){return this._warnHtmlInMessage},Rl.warnHtmlInMessage.set=function(e){var t=this,n=this._warnHtmlInMessage;if(this._warnHtmlInMessage=e,n!==e&&("warn"===e||"error"===e)){var r=this._getMessages();Object.keys(r).forEach((function(e){t._checkLocaleMessage(e,t._warnHtmlInMessage,r[e])}))}},Rl.postTranslation.get=function(){return this._postTranslation},Rl.postTranslation.set=function(e){this._postTranslation=e},Rl.sync.get=function(){return this._sync},Rl.sync.set=function(e){this._sync=e},jl.prototype._getMessages=function(){return this._vm.messages},jl.prototype._getDateTimeFormats=function(){return this._vm.dateTimeFormats},jl.prototype._getNumberFormats=function(){return this._vm.numberFormats},jl.prototype._warnDefault=function(e,t,n,r,a,i){if(!Zc(n))return n;if(this._missing){var o=this._missing.apply(null,[e,t,r,a]);if(Wc(o))return o}else 0;if(this._formatFallbackMessages){var s=Xc.apply(void 0,a);return this._render(t,i,s.params,t)}return t},jl.prototype._isFallbackRoot=function(e){return(this._fallbackRootWithEmptyString?!e:Zc(e))&&!Zc(this._root)&&this._fallbackRoot},jl.prototype._isSilentFallbackWarn=function(e){return this._silentFallbackWarn instanceof RegExp?this._silentFallbackWarn.test(e):this._silentFallbackWarn},jl.prototype._isSilentFallback=function(e,t){return this._isSilentFallbackWarn(t)&&(this._isFallbackRoot()||e!==this.fallbackLocale)},jl.prototype._isSilentTranslationWarn=function(e){return this._silentTranslationWarn instanceof RegExp?this._silentTranslationWarn.test(e):this._silentTranslationWarn},jl.prototype._interpolate=function(e,t,n,r,a,i,o){if(!t)return null;var s,c=this._path.getPathValue(t,n);if(Gc(c)||Yc(c))return c;if(Zc(c)){if(!Yc(t))return null;if(!Wc(s=t[n])&&!Jc(s))return null}else{if(!Wc(c)&&!Jc(c))return null;s=c}return Wc(s)&&(s.indexOf("@:")>=0||s.indexOf("@.")>=0)&&(s=this._link(e,t,s,r,"raw",i,o)),this._render(s,a,i,n)},jl.prototype._link=function(e,t,n,r,a,i,o){var s=n,c=s.match(Sl);for(var l in c)if(c.hasOwnProperty(l)){var u=c[l],h=u.match(Ol),d=h[0],p=h[1],f=u.replace(d,"").replace(El,"");if(el(o,f))return s;o.push(f);var m=this._interpolate(e,t,f,r,"raw"===a?"string":a,"raw"===a?void 0:i,o);if(this._isFallbackRoot(m)){if(!this._root)throw Error("unexpected error");var g=this._root.$i18n;m=g._translate(g._getMessages(),g.locale,g.fallbackLocale,f,r,a,i)}m=this._warnDefault(e,f,m,r,Gc(i)?i:[i],a),this._modifiers.hasOwnProperty(p)?m=this._modifiers[p](m):Il.hasOwnProperty(p)&&(m=Il[p](m)),o.pop(),s=m?s.replace(u,m):s}return s},jl.prototype._createMessageContext=function(e,t,n,r){var a=this,i=Gc(e)?e:[],o=Vc(e)?e:{},s=this._getMessages(),c=this.locale;return{list:function(e){return i[e]},named:function(e){return o[e]},values:e,formatter:t,path:n,messages:s,locale:c,linked:function(e){return a._interpolate(c,s[c]||{},e,null,r,void 0,[e])}}},jl.prototype._render=function(e,t,n,r){if(Jc(e))return e(this._createMessageContext(n,this._formatter||Ll,r,t));var a=this._formatter.interpolate(e,n,r);return a||(a=Ll.interpolate(e,n,r)),"string"!==t||Wc(a)?a:a.join("")},jl.prototype._appendItemToChain=function(e,t,n){var r=!1;return el(e,t)||(r=!0,t&&(r="!"!==t[t.length-1],t=t.replace(/!/g,""),e.push(t),n&&n[t]&&(r=n[t]))),r},jl.prototype._appendLocaleToChain=function(e,t,n){var r,a=t.split("-");do{var i=a.join("-");r=this._appendItemToChain(e,i,n),a.splice(-1,1)}while(a.length&&!0===r);return r},jl.prototype._appendBlockToChain=function(e,t,n){for(var r=!0,a=0;a<t.length&&"boolean"==typeof r;a++){var i=t[a];Wc(i)&&(r=this._appendLocaleToChain(e,i,n))}return r},jl.prototype._getLocaleChain=function(e,t){if(""===e)return[];this._localeChainCache||(this._localeChainCache={});var n=this._localeChainCache[e];if(!n){t||(t=this.fallbackLocale),n=[];for(var r,a=[e];Gc(a);)a=this._appendBlockToChain(n,a,t);(a=Wc(r=Gc(t)?t:Vc(t)?t.default?t.default:null:t)?[r]:r)&&this._appendBlockToChain(n,a,null),this._localeChainCache[e]=n}return n},jl.prototype._translate=function(e,t,n,r,a,i,o){for(var s,c=this._getLocaleChain(t,n),l=0;l<c.length;l++){var u=c[l];if(!Zc(s=this._interpolate(u,e[u],r,a,i,o,[r])))return s}return null},jl.prototype._t=function(e,t,n,r){for(var a,i=[],o=arguments.length-4;o-- >0;)i[o]=arguments[o+4];if(!e)return"";var s=Xc.apply(void 0,i);this._escapeParameterHtml&&(s.params=il(s.params));var c=s.locale||t,l=this._translate(n,c,this.fallbackLocale,e,r,"string",s.params);if(this._isFallbackRoot(l)){if(!this._root)throw Error("unexpected error");return(a=this._root).$t.apply(a,[e].concat(i))}return l=this._warnDefault(c,e,l,r,i,"string"),this._postTranslation&&null!=l&&(l=this._postTranslation(l,e)),l},jl.prototype.t=function(e){for(var t,n=[],r=arguments.length-1;r-- >0;)n[r]=arguments[r+1];return(t=this)._t.apply(t,[e,this.locale,this._getMessages(),null].concat(n))},jl.prototype._i=function(e,t,n,r,a){var i=this._translate(n,t,this.fallbackLocale,e,r,"raw",a);if(this._isFallbackRoot(i)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.i(e,t,a)}return this._warnDefault(t,e,i,r,[a],"raw")},jl.prototype.i=function(e,t,n){return e?(Wc(t)||(t=this.locale),this._i(e,t,this._getMessages(),null,n)):""},jl.prototype._tc=function(e,t,n,r,a){for(var i,o=[],s=arguments.length-5;s-- >0;)o[s]=arguments[s+5];if(!e)return"";void 0===a&&(a=1);var c={count:a,n:a},l=Xc.apply(void 0,o);return l.params=Object.assign(c,l.params),o=null===l.locale?[l.params]:[l.locale,l.params],this.fetchChoice((i=this)._t.apply(i,[e,t,n,r].concat(o)),a)},jl.prototype.fetchChoice=function(e,t){if(!e||!Wc(e))return null;var n=e.split("|");return n[t=this.getChoiceIndex(t,n.length)]?n[t].trim():e},jl.prototype.tc=function(e,t){for(var n,r=[],a=arguments.length-2;a-- >0;)r[a]=arguments[a+2];return(n=this)._tc.apply(n,[e,this.locale,this._getMessages(),null,t].concat(r))},jl.prototype._te=function(e,t,n){for(var r=[],a=arguments.length-3;a-- >0;)r[a]=arguments[a+3];var i=Xc.apply(void 0,r).locale||t;return this._exist(n[i],e)},jl.prototype.te=function(e,t){return this._te(e,this.locale,this._getMessages(),t)},jl.prototype.getLocaleMessage=function(e){return Qc(this._vm.messages[e]||{})},jl.prototype.setLocaleMessage=function(e,t){"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||this._checkLocaleMessage(e,this._warnHtmlInMessage,t),this._vm.$set(this._vm.messages,e,t)},jl.prototype.mergeLocaleMessage=function(e,t){"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||this._checkLocaleMessage(e,this._warnHtmlInMessage,t),this._vm.$set(this._vm.messages,e,rl(void 0!==this._vm.messages[e]&&Object.keys(this._vm.messages[e]).length?Object.assign({},this._vm.messages[e]):{},t))},jl.prototype.getDateTimeFormat=function(e){return Qc(this._vm.dateTimeFormats[e]||{})},jl.prototype.setDateTimeFormat=function(e,t){this._vm.$set(this._vm.dateTimeFormats,e,t),this._clearDateTimeFormat(e,t)},jl.prototype.mergeDateTimeFormat=function(e,t){this._vm.$set(this._vm.dateTimeFormats,e,rl(this._vm.dateTimeFormats[e]||{},t)),this._clearDateTimeFormat(e,t)},jl.prototype._clearDateTimeFormat=function(e,t){for(var n in t){var r=e+"__"+n;this._dateTimeFormatters.hasOwnProperty(r)&&delete this._dateTimeFormatters[r]}},jl.prototype._localizeDateTime=function(e,t,n,r,a,i){for(var o=t,s=r[o],c=this._getLocaleChain(t,n),l=0;l<c.length;l++){var u=c[l];if(o=u,!Zc(s=r[u])&&!Zc(s[a]))break}if(Zc(s)||Zc(s[a]))return null;var h,d=s[a];if(i)h=new Intl.DateTimeFormat(o,Object.assign({},d,i));else{var p=o+"__"+a;(h=this._dateTimeFormatters[p])||(h=this._dateTimeFormatters[p]=new Intl.DateTimeFormat(o,d))}return h.format(e)},jl.prototype._d=function(e,t,n,r){if(!n)return(r?new Intl.DateTimeFormat(t,r):new Intl.DateTimeFormat(t)).format(e);var a=this._localizeDateTime(e,t,this.fallbackLocale,this._getDateTimeFormats(),n,r);if(this._isFallbackRoot(a)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.d(e,n,t)}return a||""},jl.prototype.d=function(e){for(var t=[],n=arguments.length-1;n-- >0;)t[n]=arguments[n+1];var r=this.locale,a=null,i=null;return 1===t.length?(Wc(t[0])?a=t[0]:Vc(t[0])&&(t[0].locale&&(r=t[0].locale),t[0].key&&(a=t[0].key)),i=Object.keys(t[0]).reduce((function(e,n){var r;return el(Nc,n)?Object.assign({},e,((r={})[n]=t[0][n],r)):e}),null)):2===t.length&&(Wc(t[0])&&(a=t[0]),Wc(t[1])&&(r=t[1])),this._d(e,r,a,i)},jl.prototype.getNumberFormat=function(e){return Qc(this._vm.numberFormats[e]||{})},jl.prototype.setNumberFormat=function(e,t){this._vm.$set(this._vm.numberFormats,e,t),this._clearNumberFormat(e,t)},jl.prototype.mergeNumberFormat=function(e,t){this._vm.$set(this._vm.numberFormats,e,rl(this._vm.numberFormats[e]||{},t)),this._clearNumberFormat(e,t)},jl.prototype._clearNumberFormat=function(e,t){for(var n in t){var r=e+"__"+n;this._numberFormatters.hasOwnProperty(r)&&delete this._numberFormatters[r]}},jl.prototype._getNumberFormatter=function(e,t,n,r,a,i){for(var o=t,s=r[o],c=this._getLocaleChain(t,n),l=0;l<c.length;l++){var u=c[l];if(o=u,!Zc(s=r[u])&&!Zc(s[a]))break}if(Zc(s)||Zc(s[a]))return null;var h,d=s[a];if(i)h=new Intl.NumberFormat(o,Object.assign({},d,i));else{var p=o+"__"+a;(h=this._numberFormatters[p])||(h=this._numberFormatters[p]=new Intl.NumberFormat(o,d))}return h},jl.prototype._n=function(e,t,n,r){if(!jl.availabilities.numberFormat)return"";if(!n)return(r?new Intl.NumberFormat(t,r):new Intl.NumberFormat(t)).format(e);var a=this._getNumberFormatter(e,t,this.fallbackLocale,this._getNumberFormats(),n,r),i=a&&a.format(e);if(this._isFallbackRoot(i)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.n(e,Object.assign({},{key:n,locale:t},r))}return i||""},jl.prototype.n=function(e){for(var t=[],n=arguments.length-1;n-- >0;)t[n]=arguments[n+1];var r=this.locale,a=null,i=null;return 1===t.length?Wc(t[0])?a=t[0]:Vc(t[0])&&(t[0].locale&&(r=t[0].locale),t[0].key&&(a=t[0].key),i=Object.keys(t[0]).reduce((function(e,n){var r;return el(Fc,n)?Object.assign({},e,((r={})[n]=t[0][n],r)):e}),null)):2===t.length&&(Wc(t[0])&&(a=t[0]),Wc(t[1])&&(r=t[1])),this._n(e,r,a,i)},jl.prototype._ntp=function(e,t,n,r){if(!jl.availabilities.numberFormat)return[];if(!n)return(r?new Intl.NumberFormat(t,r):new Intl.NumberFormat(t)).formatToParts(e);var a=this._getNumberFormatter(e,t,this.fallbackLocale,this._getNumberFormats(),n,r),i=a&&a.formatToParts(e);if(this._isFallbackRoot(i)){if(!this._root)throw Error("unexpected error");return this._root.$i18n._ntp(e,t,n,r)}return i||[]},Object.defineProperties(jl.prototype,Rl),Object.defineProperty(jl,"availabilities",{get:function(){if(!Pl){var e="undefined"!=typeof Intl;Pl={dateTimeFormat:e&&void 0!==Intl.DateTimeFormat,numberFormat:e&&void 0!==Intl.NumberFormat}}return Pl}}),jl.install=vl,jl.version="8.28.2";var $l=jl;
/*!
 * vssue - A vue-powered issue-based comment plugin
 *
 * @version v1.4.8
 * @link https://vssue.js.org
 * @license MIT
 * @copyright 2018-2021 meteorlxy
 */
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */function Dl(e,t,n,r){var a,i=arguments.length,o=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(a=e[s])&&(o=(i<3?a(o):i>3?a(t,n,o):a(t,n))||o);return i>3&&o&&Object.defineProperty(t,n,o),o}var zl=Wn.extend({name:"Iconfont"});function Ul(e,t,n,r,a,i,o,s,c,l){"boolean"!=typeof o&&(c=s,s=o,o=!1);const u="function"==typeof n?n.options:n;let h;if(e&&e.render&&(u.render=e.render,u.staticRenderFns=e.staticRenderFns,u._compiled=!0,a&&(u.functional=!0)),r&&(u._scopeId=r),i?(h=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),t&&t.call(this,c(e)),e&&e._registeredComponents&&e._registeredComponents.add(i)},u._ssrRegister=h):t&&(h=o?function(e){t.call(this,l(e,this.$root.$options.shadowRoot))}:function(e){t.call(this,s(e))}),h)if(u.functional){const e=u.render;u.render=function(t,n){return h.call(n),e(t,n)}}else{const e=u.beforeCreate;u.beforeCreate=e?[].concat(e,h):[h]}return n}"undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());const Bl=Ul({render:function(e,t){var n=t._c;return n("svg",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}]},[n("symbol",{attrs:{id:"vssue-icon-bitbucket",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M579.5522464 489.45249493q4.8371808 38.38537173-30.81752427 61.55702827t-67.95459093 3.66689493q-23.79580907-10.37653333-32.6119616-35.34262826t-0.31207573-50.01020907 31.67573333-35.34262827q21.92335253-11.00068587 44.1587808-7.33379093t39.00952427 21.61127573 16.77409493 41.1160384zM647.19476053 476.65737173q-8.50407573-65.22392427-68.8908192-99.9424t-120.07131413-7.9579424q-38.38537173 17.08617173-61.24495253 53.9111616t-21.0651424 78.95527574q2.41859093 55.4715424 47.20152426 94.48106666t100.87862827 34.1723424q55.4715424-4.8371808 92.60860907-51.18049493t30.50544746-102.43900907zM792.93434133 146.32472427q-12.17097173-16.4620192-34.1723424-27.15062827t-35.34262826-13.41927573-43.30057174-7.64586667q-177.33729493-28.63299093-345.00022826 1.24830507-26.2144 4.29104747-40.25782827 7.33379093t-33.54819093 13.41927573-30.50544747 26.2144q18.2564576 17.08617173 46.34331413 27.6967616t44.78293334 13.41927574 53.36502826 7.02171413q138.95192427 17.71032427 273.06666667 0.62415253 38.38537173-4.8371808 54.53531413-7.33379093t44.1587808-13.1072 45.7191616-28.32091413zM827.65281813 777.10872427q-4.8371808 15.83786667-9.44030506 46.65539093t-8.50407574 51.18049493-17.39824746 42.6764192-35.34262827 34.4064q-52.4288 29.2571424-115.46819093 43.61264747t-123.1140576 13.41927573-122.8019808-11.3127616q-28.0088384-4.8371808-49.69813334-11.00068586t-46.65539093-16.4620192-44.4708576-26.52647574-31.67573333-37.4491424q-15.21371413-58.51428587-34.71847574-177.96144746l3.66689494-9.7523808 11.00068586-5.46133334q135.9091808 90.1900192 308.72137174 90.1900192t309.34552426-90.1900192q12.79512427 3.66689493 14.5895616 14.04342827t-3.0427424 27.46270507-4.8371808 22.54750506zM937.97175147 191.41973333q-15.83786667 101.8148576-67.64251414 399.22346667-3.0427424 18.2564576-16.4620192 34.1723424t-26.52647573 24.3419424-33.23611413 18.88060907q-153.61950507 76.7707424-371.8387808 53.67710506-151.12289493-16.4620192-240.14262827-84.72868586-9.12822827-7.33379093-15.52579093-16.1499424t-10.37653334-21.2992-5.46133333-20.75306667-3.66689493-24.10788587-3.3548192-21.2992q-5.46133333-30.50544747-16.1499424-91.43832426t-17.08617174-98.4600384-14.35550506-89.8779424-13.41927574-96.27550507q1.7944384-15.83786667 10.68860907-29.5692192t19.19268587-22.8595808 27.46270506-18.2564576 28.0088384-13.73135253 29.2571424-11.3127616q76.22460907-28.0088384 190.75657174-39.00952427 231.0144-22.54750507 412.01859093 30.50544747 94.48106667 28.0088384 131.072 74.35215253 9.7523808 12.17097173 10.0644576 31.0515808t-3.3548192 32.9240384z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-gitea",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M184.31868985 236.10860742C106.94832667 235.94086648 3.32655508 285.13080468 9.02973665 408.46209936c8.93218827 192.65010787 206.32096845 210.5144844 285.20099725 212.06608453 8.63864186 36.14810496 101.48307766 160.77938883 170.21479898 167.32127321h301.09442177c180.57278288-11.99345499 315.77172611-546.07960359 215.54670217-548.09249109-165.7696721 7.79993906-264.02374305 11.74184405-348.27147151 12.41280591v166.69224585l-26.25140843-11.61603761-0.16773997-154.99233728c-96.70246985-0.04193548-181.83083757-4.52899687-343.4069947-12.49667687-20.21274496-0.12580547-48.39316992-3.5644886-78.67035236-3.64835859z m10.94507577 68.14462849h9.22573371c10.98701124 98.75729283 28.85138778 156.50200291 64.99949274 244.73357185-92.25734394-10.90314029-170.75995634-37.69970509-185.18564974-137.75698809-7.46445813-51.78991757 17.69663558-105.84433456 110.96042329-107.01851827z m358.83913087 97.07988723c6.29027343 0.08386999 12.70635233 1.25805468 18.74501482 4.02577499l31.40943263 13.54505513-22.51917887 41.05451824a28.18042496 25.03528825 0 0 0-10.10637297 1.59353561 28.18042496 25.03528825 0 0 0-16.98373825 32.038459 28.18042496 25.03528825 0 0 0 4.69673781 7.29671718l-38.83195528 70.70267333a28.18042496 25.03528825 0 0 0-9.30960467 1.59353659 28.18042496 25.03528825 0 0 0-16.98373825 32.038459 28.18042496 25.03528825 0 0 0 36.06423497 15.09665623 28.18042496 25.03528825 0 0 0 16.94180276-32.08039449 28.18042496 25.03528825 0 0 0-6.62575434-9.22573468l37.82551056-68.85752581a28.18042496 25.03528825 0 0 0 12.28700044-1.25805469 28.18042496 25.03528825 0 0 0 8.93218826-4.69673783c14.59343435 6.12253248 26.54495386 11.11281671 35.14166122 15.34826717 12.91602778 6.37414341 17.48696012 10.60959485 18.87082027 15.30633169 1.38386015 4.61286685-0.12580547 13.50312062-7.42252263 29.10299872-5.45157063 11.61603859-14.46762889 28.09655497-25.11915823 47.51253164a28.18042496 25.03528825 0 0 0-10.52572486 1.59353659 28.18042496 25.03528825 0 0 0-16.98373826 32.038459 28.18042496 25.03528825 0 0 0 36.06423498 15.09665623 28.18042496 25.03528825 0 0 0 16.94180278-32.03845901 28.18042496 25.03528825 0 0 0-5.74511608-8.47090188c10.52572388-19.20630122 19.58371762-35.72875308 25.41270465-48.14155897 7.88380904-16.85793279 11.99345499-29.39654416 8.38703091-41.51580463-3.60642311-12.11926046-14.67730434-20.0030695-29.35460966-27.25785217-9.6450856-4.73867233-21.68047607-9.77089106-36.06423399-15.80955357a28.18042496 25.03528825 0 0 0-1.59353562-10.022502 28.18042496 25.03528825 0 0 0-6.08059796-8.7644483l22.14176246-40.38355541 122.61839638 52.96410227c22.14176247 9.6031511 31.2836262 33.12877372 20.54822685 52.8382968l-84.28966393 154.32137544c-10.77733482 19.66758857-37.23841869 27.80300855-59.38018118 18.24179293l-173.48574115-74.98005927c-22.14176247-9.5612156-31.32556167-33.12877372-20.54822687-52.83829679l84.28966395-154.27943995c7.38058716-13.54505513 22.22563246-21.59660511 37.951317-22.22563246h2.68384935z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-gitee",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M978.404275 409.561604H455.061338c-25.117645 0-45.499734 20.382089-45.499734 45.499734l-0.031997 113.781333c0 25.117645 20.350092 45.499734 45.499734 45.531731h318.594132c25.117645 0 45.499734 20.382089 45.499734 45.499735v22.749867a136.5312 136.5312 0 0 1-136.5312 136.5312H250.248539a45.499734 45.499734 0 0 1-45.499734-45.499734V341.343999a136.5312 136.5312 0 0 1 136.5312-136.5312L978.308284 204.780802c25.117645 0 45.499734-20.350092 45.499734-45.467738L1023.904009 45.531731h0.031997A45.499734 45.499734 0 0 0 978.468269 0h-0.031997L341.343999 0.031997C152.84967 0.031997 0.031997 152.84967 0.031997 341.343999v637.092273c0 25.117645 20.382089 45.499734 45.499734 45.499734h671.233072a307.171203 307.171203 0 0 0 307.171203-307.171203v-261.671468c0-25.117645-20.382089-45.499734-45.499734-45.499734z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-github",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M512 20.4425c-278.334 0-504 225.6345-504 504 0 222.6735 144.4275 411.6105 344.673 478.233 25.2 4.662 34.461-10.9305 34.461-24.255 0-12.0015-0.4725-51.723-0.693-93.8385-140.238 30.492-169.8165-59.472-169.8165-59.472-22.932-58.2435-55.944-73.7415-55.944-73.7415-45.738-31.2795 3.465-30.6495 3.465-30.6495 50.589 3.5595 77.238 51.9435 77.238 51.9435 44.9505 77.049 117.9045 54.7785 146.664 41.895 4.5045-32.571 17.577-54.81 32.004-67.41-111.951-12.726-229.635-55.9755-229.635-249.0705 0-55.0305 19.6875-99.981 51.9435-135.2925-5.229-12.6945-22.491-63.945 4.8825-133.371 0 0 42.336-13.545 138.6315 51.66 40.194-11.1825 83.3175-16.758 126.1575-16.9785 42.8085 0.189 85.9635 5.796 126.252 16.9785 96.201-65.205 138.4425-51.66 138.4425-51.66 27.4365 69.426 10.1745 120.6765 4.9455 133.371 32.319 35.28 51.8805 80.262 51.8805 135.2925 0 193.5675-117.9045 236.187-230.139 248.6925 18.081 15.6555 34.1775 46.305 34.1775 93.3345 0 67.4415-0.5985 121.716-0.5985 138.3165 0 13.419 9.072 29.1375 34.6185 24.192 200.151-66.717 344.3895-255.5595 344.3895-478.17 0-278.3655-225.666-504-504-504z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-gitlab",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M66.61375986 405.11600042L512.11376028 976.03999972 23.84576 621.65599958a39.312 39.312 0 0 1-14.07600042-43.30799944l56.8080007-173.26800028z m259.88400014 0h371.26800014L512.14975986 976.03999972zM215.11376 60.88400042l111.384 344.232H66.61375986l111.384-344.232a19.72800014 19.72800014 0 0 1 37.11600014 0z m742.49999972 344.232l56.8080007 173.2679993a39.23999986 39.23999986 0 0 1-14.07600042 43.30800042l-488.26800028 354.38400014 445.50000042-570.92400028z m0 0h-259.88400014l111.384-344.232a19.72800014 19.72800014 0 0 1 37.11600014 0z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-loading",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M843.307 742.24c0 3.217 2.607 5.824 5.824 5.824s5.824-2.607 5.824-5.824a5.823 5.823 0 0 0-5.824-5.824 5.823 5.823 0 0 0-5.824 5.824zM714.731 874.912c0 6.398 5.186 11.584 11.584 11.584s11.584-5.186 11.584-11.584-5.186-11.584-11.584-11.584-11.584 5.186-11.584 11.584zM541.419 943.2c0 9.614 7.794 17.408 17.408 17.408s17.408-7.794 17.408-17.408-7.794-17.408-17.408-17.408-17.408 7.794-17.408 17.408z m-186.56-9.152c0 12.795 10.373 23.168 23.168 23.168s23.168-10.373 23.168-23.168-10.373-23.168-23.168-23.168-23.168 10.373-23.168 23.168zM189.355 849.12c0 16.012 12.98 28.992 28.992 28.992s28.992-12.98 28.992-28.992-12.98-28.992-28.992-28.992-28.992 12.98-28.992 28.992zM74.731 704.736c0 19.228 15.588 34.816 34.816 34.816s34.816-15.588 34.816-34.816-15.588-34.816-34.816-34.816-34.816 15.588-34.816 34.816z m-43.008-177.28c0 22.41 18.166 40.576 40.576 40.576s40.576-18.166 40.576-40.576-18.166-40.576-40.576-40.576-40.576 18.166-40.576 40.576z m35.392-176.128c0 25.626 20.774 46.4 46.4 46.4s46.4-20.774 46.4-46.4c0-25.626-20.774-46.4-46.4-46.4-25.626 0-46.4 20.774-46.4 46.4z m106.176-142.016c0 28.843 23.381 52.224 52.224 52.224s52.224-23.381 52.224-52.224c0-28.843-23.381-52.224-52.224-52.224-28.843 0-52.224 23.381-52.224 52.224z m155.904-81.344c0 32.024 25.96 57.984 57.984 57.984s57.984-25.96 57.984-57.984-25.96-57.984-57.984-57.984-57.984 25.96-57.984 57.984z m175.104-5.056c0 35.24 28.568 63.808 63.808 63.808s63.808-28.568 63.808-63.808c0-35.24-28.568-63.808-63.808-63.808-35.24 0-63.808 28.568-63.808 63.808z m160.32 72.128c0 38.421 31.147 69.568 69.568 69.568s69.568-31.147 69.568-69.568-31.147-69.568-69.568-69.568-69.568 31.147-69.568 69.568z m113.92 135.488c0 41.638 33.754 75.392 75.392 75.392s75.392-33.754 75.392-75.392-33.754-75.392-75.392-75.392-75.392 33.754-75.392 75.392z m45.312 175.488c0 44.854 36.362 81.216 81.216 81.216s81.216-36.362 81.216-81.216c0-44.854-36.362-81.216-81.216-81.216-44.854 0-81.216 36.362-81.216 81.216z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-like",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M885.9 533.7c16.8-22.2 26.1-49.4 26.1-77.7 0-44.9-25.1-87.4-65.5-111.1a67.67 67.67 0 0 0-34.3-9.3H572.4l6-122.9c1.4-29.7-9.1-57.9-29.5-79.4-20.5-21.5-48.1-33.4-77.9-33.4-52 0-98 35-111.8 85.1l-85.9 311H144c-17.7 0-32 14.3-32 32v364c0 17.7 14.3 32 32 32h601.3c9.2 0 18.2-1.8 26.5-5.4 47.6-20.3 78.3-66.8 78.3-118.4 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7-0.2-12.6-2-25.1-5.6-37.1zM184 852V568h81v284h-81z m636.4-353l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 22.4-13.2 42.6-33.6 51.8H329V564.8l99.5-360.5c5.2-18.9 22.5-32.2 42.2-32.3 7.6 0 15.1 2.2 21.1 6.7 9.9 7.4 15.2 18.6 14.6 30.5l-9.6 198.4h314.4C829 418.5 840 436.9 840 456c0 16.5-7.2 32.1-19.6 43z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-unlike",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M885.9 490.3c3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-51.6-30.7-98.1-78.3-118.4-8.3-3.6-17.2-5.4-26.5-5.4H144c-17.7 0-32 14.3-32 32v364c0 17.7 14.3 32 32 32h129.3l85.8 310.8C372.9 889 418.9 924 470.9 924c29.7 0 57.4-11.8 77.9-33.4 20.5-21.5 31-49.7 29.5-79.4l-6-122.9h239.9c12.1 0 23.9-3.2 34.3-9.3 40.4-23.5 65.5-66.1 65.5-111 0-28.3-9.3-55.5-26.1-77.7zM184 456V172h81v284h-81z m627.2 160.4H496.8l9.6 198.4c0.6 11.9-4.7 23.1-14.6 30.5-6.1 4.5-13.6 6.8-21.1 6.7-19.6-0.1-36.9-13.4-42.2-32.3L329 459.2V172h415.4c20.4 9.2 33.6 29.4 33.6 51.8 0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 9.7-2.3 18.9-6.9 27.3l-14 25.5 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 19.1-11 37.5-28.8 48.4z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-heart",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M923 283.6c-13.4-31.1-32.6-58.9-56.9-82.8-24.3-23.8-52.5-42.4-84-55.5-32.5-13.5-66.9-20.3-102.4-20.3-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5-24.4 23.9-43.5 51.7-56.9 82.8-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3 0.1-35.3-7-69.6-20.9-101.9zM512 814.8S156 586.7 156 385.5C156 283.6 240.3 201 344.3 201c73.1 0 136.5 40.8 167.7 100.4C543.2 241.8 606.6 201 679.7 201c104 0 188.3 82.6 188.3 184.5 0 201.2-356 429.3-356 429.3z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-edit",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M723.2 917.76H286.72c-65.28 0-118.4-51.2-118.4-113.92V261.76C168.32 198.4 221.44 147.2 286.72 147.2h375.04c17.92 0 32 14.08 32 32s-14.08 32-32 32H286.72c-30.08 0-54.4 22.4-54.4 49.92v542.08c0 27.52 24.32 49.92 54.4 49.92H723.2c30.08 0 54.4-22.4 54.4-49.92V440.32c0-17.92 14.08-32 32-32s32 14.08 32 32v363.52c0 62.72-53.12 113.92-118.4 113.92z"}}),t._v(" "),n("path",{attrs:{d:"M499.84 602.24c-7.68 0-14.72-2.56-21.12-7.68-13.44-11.52-14.72-32-3.2-45.44L780.16 198.4c11.52-13.44 32-14.72 45.44-3.2s14.72 32 3.2 45.44L524.16 591.36c-6.4 7.04-15.36 10.88-24.32 10.88z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-delete",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M677.647059 256l0-90.352941c0-37.436235-23.461647-60.235294-61.771294-60.235294L408.094118 105.411765c-38.249412 0-61.741176 22.799059-61.741176 60.235294l0 90.352941-180.705882 0 0 60.235294 60.235294 0 0 512c0 54.272 33.972706 90.352941 90.352941 90.352941l391.529412 0c55.085176 0 90.352941-33.490824 90.352941-90.352941l0-512 60.235294 0 0-60.235294L677.647059 256zM406.588235 165.647059l210.823529 0-1.264941 90.352941L406.588235 256 406.588235 165.647059zM737.882353 858.352941l-451.764706 0 0-542.117647 451.764706 0L737.882353 858.352941zM466.823529 376.470588l-58.729412 0-1.505882 391.529412 60.235294 0L466.823529 376.470588zM617.411765 376.470588l-60.235294 0 0 391.529412 60.235294 0L617.411765 376.470588z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-reply",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M426.666667 384 426.666667 213.333333 128 512 426.666667 810.666667 426.666667 635.733333C640 635.733333 789.333333 704 896 853.333333 853.333333 640 725.333333 426.666667 426.666667 384Z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-error",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M512 720m-48 0a48 48 0 1 0 96 0 48 48 0 1 0-96 0Z"}}),t._v(" "),n("path",{attrs:{d:"M480 416v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8z"}}),t._v(" "),n("path",{attrs:{d:"M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48z m-783.5-27.9L512 239.9l339.8 588.2H172.2z"}})])])},staticRenderFns:[]},void 0,zl,void 0,!0,void 0,!1,void 0,void 0,void 0);const ql=Ul({},void 0,Wn.extend({name:"TransitionFade",functional:!0,props:{group:{type:Boolean,required:!1,default:!1},tag:{type:String,required:!1,default:"div"}},render:(e,{props:t,children:n})=>e(t.group?"TransitionGroup":"Transition",{props:{name:"fade",mode:"out-in",appear:!0,tag:t.tag}},n)}),void 0,void 0,void 0,!1,void 0,void 0,void 0);const Fl=Ul({},void 0,Wn.extend({name:"VssueIcon",functional:!0,props:{name:{type:String,required:!0},title:{type:String,required:!1,default:null}},render:(e,{props:t,data:n})=>e("svg",Object.assign(Object.assign({},n),{class:["vssue-icon","vssue-icon-"+t.name],attrs:{"aria-hidden":"true"}}),[e("title",t.title),e("use",{attrs:{"xlink:href":"#vssue-icon-"+t.name}})])}),void 0,void 0,void 0,!1,void 0,void 0,void 0);let Nl=class extends Wn{constructor(){super(...arguments),this.editMode=!1,this.editContent=this.comment.contentRaw,this.creatingReactions=[],this.isPutingComment=!1,this.isDeletingComment=!1}get currentUser(){return this.vssue.user?this.vssue.user.username:null}get content(){return this.comment.content}get author(){return this.comment.author}get createdAt(){return Bc(this.comment.createdAt)}get updatedAt(){return Bc(this.comment.updatedAt)}get showReactions(){return Boolean(this.vssue.API&&this.vssue.API.platform.meta.reactable&&this.comment.reactions&&!this.editMode)}get reactionKeys(){return["heart","like","unlike"]}get editContentRows(){return this.editContent.split("\n").length-1}get editInputRows(){return this.editContentRows<3?5:this.editContentRows+2}async postReaction({reaction:e}){try{if(this.creatingReactions.includes(e))return;this.creatingReactions.push(e);await this.vssue.postCommentReaction({commentId:this.comment.id,reaction:e})||this.vssue.$emit("error",new Error(this.vssue.$t("reactionGiven",{reaction:this.vssue.$t(e)})));const t=await this.vssue.getCommentReactions({commentId:this.comment.id});t&&(this.comment.reactions=t)}finally{this.creatingReactions.splice(this.creatingReactions.findIndex(t=>t===e),1)}}enterEdit(){this.editMode=!0,this.$nextTick(()=>{this.$refs.input.focus()})}resetEdit(){this.editMode=!1,this.editContent=this.comment.contentRaw}async putComment(){try{if(this.vssue.isPending)return;if(this.editContent!==this.comment.contentRaw){this.isPutingComment=!0,this.vssue.isUpdatingComment=!0;const e=await this.vssue.putComment({commentId:this.comment.id,content:this.editContent});e&&this.vssue.comments.data.splice(this.vssue.comments.data.findIndex(e=>e.id===this.comment.id),1,e)}this.editMode=!1}finally{this.isPutingComment=!1,this.vssue.isUpdatingComment=!1}}async deleteComment(){try{if(this.vssue.isPending)return;if(!window.confirm(this.vssue.$t("deleteConfirm")))return;this.isDeletingComment=!0,this.vssue.isUpdatingComment=!0;await this.vssue.deleteComment({commentId:this.comment.id})?(this.vssue.comments.count-=1,this.vssue.comments.data.length>1&&this.vssue.comments.data.splice(this.vssue.comments.data.findIndex(e=>e.id===this.comment.id),1),this.vssue.query.page>1&&this.vssue.query.page>Math.ceil(this.vssue.comments.count/this.vssue.query.perPage)?this.vssue.query.page-=1:await this.vssue.getComments()):this.vssue.$emit("error",new Error(this.vssue.$t("deleteFailed")))}finally{this.isDeletingComment=!1,this.vssue.isUpdatingComment=!1}}};Dl([Lc({type:Object,required:!0})],Nl.prototype,"comment",void 0),Dl([Tc()],Nl.prototype,"vssue",void 0),Nl=Dl([Pc({components:{VssueIcon:Fl}})],Nl);const Hl=Ul({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"vssue-comment",class:{"vssue-comment-edit-mode":e.editMode,"vssue-comment-disabled":e.isDeletingComment||e.isPutingComment}},[n("div",{staticClass:"vssue-comment-avatar"},[n("a",{attrs:{href:e.author.homepage,title:e.author.username,target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:e.author.avatar,alt:e.author.username}})])]),e._v(" "),n("div",{staticClass:"vssue-comment-body"},[e._t("body",[n("div",{staticClass:"vssue-comment-header"},[n("span",{staticClass:"vssue-comment-author"},[n("a",{attrs:{href:e.author.homepage,title:e.author.username,target:"_blank",rel:"noopener noreferrer"}},[e._v("\n            "+e._s(e.author.username)+"\n          ")])]),e._v(" "),n("span",{staticClass:"vssue-comment-created-at"},[e._v("\n          "+e._s(e.createdAt)+"\n        ")])]),e._v(" "),n("div",{staticClass:"vssue-comment-main"},[e.editMode?n("textarea",{directives:[{name:"model",rawName:"v-model",value:e.editContent,expression:"editContent"}],ref:"input",staticClass:"vssue-edit-comment-input",attrs:{rows:e.editInputRows},domProps:{value:e.editContent},on:{keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:t.ctrlKey?e.putComment():null},input:function(t){t.target.composing||(e.editContent=t.target.value)}}}):n("article",{staticClass:"markdown-body",domProps:{innerHTML:e._s(e.content)}})]),e._v(" "),n("div",{staticClass:"vssue-comment-footer"},[e.editMode?n("span",{staticClass:"vssue-comment-hint"},[e._v("\n          "+e._s(e.vssue.$t("editMode"))+"\n        ")]):e._e(),e._v(" "),e.showReactions?n("span",{staticClass:"vssue-comment-reactions"},e._l(e.reactionKeys,(function(t){return n("span",{key:t,staticClass:"vssue-comment-reaction",attrs:{title:e.vssue.$t(e.creatingReactions.includes(t)?"loading":t)},on:{click:function(n){return e.postReaction({reaction:t})}}},[n("VssueIcon",{attrs:{name:e.creatingReactions.includes(t)?"loading":t,title:e.vssue.$t(e.creatingReactions.includes(t)?"loading":t)}}),e._v(" "),n("span",{staticClass:"vssue-comment-reaction-number"},[e._v("\n              "+e._s(e.comment.reactions[t])+"\n            ")])],1)})),0):e._e(),e._v(" "),n("span",{staticClass:"vssue-comment-operations"},[e.comment.author.username===e.currentUser&&e.editMode?n("span",{staticClass:"vssue-comment-operation",class:{"vssue-comment-operation-muted":e.isPutingComment},attrs:{title:e.vssue.$t(e.isPutingComment?"loading":"submit")},on:{click:function(t){return e.putComment()}}},[n("VssueIcon",{directives:[{name:"show",rawName:"v-show",value:e.isPutingComment,expression:"isPutingComment"}],attrs:{name:"loading",title:e.vssue.$t("loading")}}),e._v("\n\n            "+e._s(e.vssue.$t("submit"))+"\n          ")],1):e._e(),e._v(" "),e.comment.author.username===e.currentUser&&e.editMode?n("span",{staticClass:"vssue-comment-operation vssue-comment-operation-muted",attrs:{title:e.vssue.$t("cancel")},on:{click:function(t){return e.resetEdit()}}},[e._v("\n            "+e._s(e.vssue.$t("cancel"))+"\n          ")]):e._e(),e._v(" "),e.comment.author.username===e.currentUser?n("span",{directives:[{name:"show",rawName:"v-show",value:!e.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(t){return e.enterEdit()}}},[n("VssueIcon",{attrs:{name:"edit",title:e.vssue.$t("edit")}})],1):e._e(),e._v(" "),e.comment.author.username===e.currentUser||e.vssue.isAdmin?n("span",{directives:[{name:"show",rawName:"v-show",value:!e.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(t){return e.deleteComment()}}},[n("VssueIcon",{attrs:{name:e.isDeletingComment?"loading":"delete",title:e.vssue.$t(e.isDeletingComment?"loading":"delete")}})],1):e._e(),e._v(" "),n("span",{directives:[{name:"show",rawName:"v-show",value:!e.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(t){return e.vssue.$emit("reply-comment",e.comment)}}},[n("VssueIcon",{attrs:{name:"reply",title:e.vssue.$t("reply")}})],1)])])])],2)])},staticRenderFns:[]},void 0,Nl,void 0,!1,void 0,!1,void 0,void 0,void 0);let Gl=class extends Wn{get disabled(){return this.vssue.isPending}get pageCount(){const e=Math.ceil(this.vssue.comments.count/this.vssue.comments.perPage);return e>1?e:1}get perPageOptions(){const e=[5,10,20,50];return!e.includes(this.vssue.options.perPage)&&this.vssue.options.perPage<100&&e.push(this.vssue.options.perPage),e.sort((e,t)=>e-t)}get page(){return this.vssue.query.page>this.pageCount?this.pageCount:this.vssue.query.page}set page(e){e>0&&e<=this.pageCount&&(this.vssue.query.page=e)}get perPage(){return this.vssue.query.perPage}set perPage(e){this.perPageOptions.includes(e)&&(this.vssue.query.perPage=e)}};Dl([Tc()],Gl.prototype,"vssue",void 0),Gl=Dl([Pc({components:{VssueIcon:Fl}})],Gl);const Vl=Ul({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"vssue-pagination"},[n("div",{staticClass:"vssue-pagination-per-page"},[n("label",[n("select",{directives:[{name:"model",rawName:"v-model",value:e.perPage,expression:"perPage"}],staticClass:"vssue-pagination-select",attrs:{disabled:e.disabled},on:{change:function(t){var n=Array.prototype.filter.call(t.target.options,(function(e){return e.selected})).map((function(e){return"_value"in e?e._value:e.value}));e.perPage=t.target.multiple?n:n[0]}}},e._l(e.perPageOptions,(function(t){return n("option",{key:t,domProps:{value:t}},[e._v("\n          "+e._s(t)+"\n        ")])})),0),e._v(" "),n("span",[e._v("\n        "+e._s(e.vssue.$t("perPage"))+"\n      ")])]),e._v(" "),e.vssue.API.platform.meta.sortable?n("span",{class:{"vssue-pagination-link":!0,disabled:e.disabled},attrs:{title:e.vssue.$t("sort")},on:{click:function(t){e.vssue.query.sort="asc"===e.vssue.query.sort?"desc":"asc"}}},[e._v("\n      "+e._s("asc"===e.vssue.query.sort?"↑":"↓")+"\n    ")]):e._e()]),e._v(" "),n("div",{staticClass:"vssue-pagination-page"},[n("span",{class:{"vssue-pagination-link":!0,disabled:1===e.page||e.disabled},attrs:{title:e.vssue.$t("prev")},domProps:{textContent:e._s("<")},on:{click:function(t){e.page-=1}}}),e._v(" "),n("label",[n("span",[e._v("\n        "+e._s(e.vssue.$t("page"))+"\n      ")]),e._v(" "),n("select",{directives:[{name:"show",rawName:"v-show",value:e.pageCount>1,expression:"pageCount > 1"},{name:"model",rawName:"v-model",value:e.page,expression:"page"}],staticClass:"vssue-pagination-select",attrs:{disabled:e.disabled},on:{change:function(t){var n=Array.prototype.filter.call(t.target.options,(function(e){return e.selected})).map((function(e){return"_value"in e?e._value:e.value}));e.page=t.target.multiple?n:n[0]}}},e._l(e.pageCount,(function(t){return n("option",{key:t,domProps:{value:t}},[e._v("\n          "+e._s(t)+"\n        ")])})),0),e._v(" "),n("span",{directives:[{name:"show",rawName:"v-show",value:e.pageCount<2,expression:"pageCount < 2"}],domProps:{textContent:e._s(e.page)}}),e._v(" "),n("span",{domProps:{textContent:e._s(" / "+e.pageCount+" ")}})]),e._v(" "),n("span",{class:{"vssue-pagination-link":!0,disabled:e.page===e.pageCount||e.disabled},attrs:{title:e.vssue.$t("next")},domProps:{textContent:e._s(">")},on:{click:function(t){e.page+=1}}})])])},staticRenderFns:[]},void 0,Gl,void 0,!1,void 0,!1,void 0,void 0,void 0);let Wl=class extends Wn{};Dl([Tc()],Wl.prototype,"vssue",void 0),Wl=Dl([Pc({components:{TransitionFade:ql,VssueComment:Hl,VssuePagination:Vl}})],Wl);const Kl=Ul({render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"vssue-comments"},[t("VssuePagination"),this._v(" "),t("TransitionFade",{attrs:{group:""}},this._l(this.vssue.comments.data,(function(e){return t("VssueComment",{key:e.id,attrs:{comment:e}})})),1),this._v(" "),t("VssuePagination",{directives:[{name:"show",rawName:"v-show",value:this.vssue.comments.data.length>5,expression:"vssue.comments.data.length > 5"}]})],1)},staticRenderFns:[]},void 0,Wl,void 0,!1,void 0,!1,void 0,void 0,void 0);const Yl=Ul({},void 0,Wn.extend({name:"VssueIcon",functional:!0,props:{type:{type:String,required:!1,default:"default"}},render:(e,{props:t,data:n,children:r})=>e("button",Object.assign(Object.assign({},n),{class:["vssue-button","vssue-button-"+t.type]}),r)}),void 0,void 0,void 0,!1,void 0,void 0,void 0);let Zl=class extends Wn{constructor(){super(...arguments),this.content=""}get user(){return this.vssue.user}get platform(){return this.vssue.API&&this.vssue.API.platform.name}get isInputDisabled(){return this.loading||null===this.user||null===this.vssue.issue}get isSubmitDisabled(){return""===this.content||this.vssue.isPending||null===this.vssue.issue}get loading(){return this.vssue.isCreatingComment}get contentRows(){return this.content.split("\n").length-1}get inputRows(){return this.contentRows<3?5:this.contentRows+2}created(){this.vssue.$on("reply-comment",e=>{const t=e.contentRaw.replace(/\n/g,"\n> "),n=`@${e.author.username}\n\n> ${t}\n\n`;this.content=this.content.concat(n),this.focus()})}beforeDestroy(){this.vssue.$off("reply-comment")}focus(){this.$refs.input.focus()}async submit(){this.isSubmitDisabled||(await this.vssue.postComment({content:this.content}),this.content="",await this.vssue.getComments())}};Dl([Tc()],Zl.prototype,"vssue",void 0),Zl=Dl([Pc({components:{VssueButton:Yl,VssueIcon:Fl}})],Zl);const Jl=Ul({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"vssue-new-comment"},[n("div",{staticClass:"vssue-comment-avatar"},[e.user?n("a",{attrs:{href:e.user.homepage,title:e.user.username,target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:e.user.avatar,alt:e.user.username}})]):n("VssueIcon",{attrs:{name:e.platform.toLowerCase(),title:e.vssue.$t("loginToComment",{platform:e.platform})},on:{click:function(t){return e.vssue.login()}}})],1),e._v(" "),n("div",{staticClass:"vssue-new-comment-body"},[n("textarea",{directives:[{name:"model",rawName:"v-model",value:e.content,expression:"content"}],ref:"input",staticClass:"vssue-new-comment-input",attrs:{rows:e.inputRows,disabled:e.isInputDisabled,placeholder:e.vssue.$t(e.user?"placeholder":"noLoginPlaceHolder"),spellcheck:!1,"aria-label":"leave a comment"},domProps:{value:e.content},on:{keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:t.ctrlKey?e.submit():null},input:function(t){t.target.composing||(e.content=t.target.value)}}})]),e._v(" "),n("div",{staticClass:"vssue-new-comment-footer"},[e.user?n("span",{staticClass:"vssue-current-user"},[n("span",[e._v(e._s(e.vssue.$t("currentUser"))+" - "+e._s(e.user.username)+" - ")]),e._v(" "),n("a",{staticClass:"vssue-logout",on:{click:function(t){return e.vssue.logout()}}},[e._v("\n        "+e._s(e.vssue.$t("logout"))+"\n      ")])]):n("span",{staticClass:"vssue-current-user"},[e._v("\n      "+e._s(e.vssue.$t("loginToComment",{platform:e.platform}))+"\n    ")]),e._v(" "),n("div",{staticClass:"vssue-new-comment-operations"},[e.user?n("VssueButton",{staticClass:"vssue-button-submit-comment",attrs:{type:"primary",disabled:e.isSubmitDisabled},on:{click:function(t){return e.submit()}}},[n("VssueIcon",{directives:[{name:"show",rawName:"v-show",value:e.loading,expression:"loading"}],attrs:{name:"loading"}}),e._v("\n\n        "+e._s(e.vssue.$t(e.loading?"submitting":"submitComment"))+"\n      ")],1):n("VssueButton",{staticClass:"vssue-button-login",attrs:{type:"primary",title:e.vssue.$t("loginToComment",{platform:e.platform})},on:{click:function(t){return e.vssue.login()}}},[e._v("\n        "+e._s(e.vssue.$t("login",{platform:e.platform}))+"\n      ")])],1)])])},staticRenderFns:[]},void 0,Zl,void 0,!1,void 0,!1,void 0,void 0,void 0);let Xl=class extends Wn{constructor(){super(...arguments),this.progress={show:!1,percent:0,timer:null,speed:200},this.alert={show:!1,message:null,timer:null}}onLoadingCommentsChange(e){this.vssue.comments&&(e?this.progressStart():this.progressDone())}created(){this.vssue.$on("error",e=>this.alertShow(e.message))}beforeDestroy(){this.vssue.$off("error"),null!==this.progress.timer&&window.clearTimeout(this.progress.timer),null!==this.alert.timer&&window.clearTimeout(this.alert.timer)}progressStart(){this.progress.show=!0,this.progress.percent=0,this.progress.timer=window.setInterval(()=>{this.progress.percent+=5,this.progress.percent>94&&null!==this.progress.timer&&window.clearInterval(this.progress.timer)},this.progress.speed)}progressDone(){this.progress.percent=100,null!==this.progress.timer&&window.clearTimeout(this.progress.timer),this.progress.timer=null,window.setTimeout(()=>{this.progress.show=!1},this.progress.speed)}alertShow(e){this.alert.show=!0,this.alert.message=e,null!==this.alert.timer&&window.clearTimeout(this.alert.timer),this.alert.timer=window.setTimeout(()=>{this.alertHide()},3e3)}alertHide(){this.alert.show=!1,null!==this.alert.timer&&window.clearTimeout(this.alert.timer),this.alert.timer=null}};Dl([Tc()],Xl.prototype,"vssue",void 0),Dl([jc("vssue.isLoadingComments")],Xl.prototype,"onLoadingCommentsChange",null),Xl=Dl([Pc({components:{TransitionFade:ql}})],Xl);const Ql=Ul({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"vssue-notice"},[n("div",{directives:[{name:"show",rawName:"v-show",value:e.progress.show,expression:"progress.show"}],staticClass:"vssue-progress",style:{width:e.progress.percent+"%",transition:"all "+e.progress.speed+"ms linear"}}),e._v(" "),n("TransitionFade",[n("div",{directives:[{name:"show",rawName:"v-show",value:e.alert.show,expression:"alert.show"}],staticClass:"vssue-alert",domProps:{textContent:e._s(e.alert.message)},on:{click:function(t){return e.alertHide()}}})])],1)},staticRenderFns:[]},void 0,Xl,void 0,!1,void 0,!1,void 0,void 0,void 0);let eu=class extends Wn{get status(){return this.vssue.isFailed?"failed":this.vssue.isInitializing?"initializing":this.vssue.isIssueNotCreated&&!this.vssue.isCreatingIssue?this.vssue.isAdmin||!this.vssue.isLogined?"issueNotCreated":"failed":this.vssue.isLoginRequired?"loginRequired":!this.vssue.comments||this.vssue.isCreatingIssue?"loadingComments":0===this.vssue.comments.data.length?"noComments":null}handleClick(){"issueNotCreated"===this.status?this.vssue.postIssue():"loginRequired"===this.status&&this.vssue.login()}};Dl([Tc()],eu.prototype,"vssue",void 0),eu=Dl([Pc({components:{TransitionFade:ql,VssueIcon:Fl}})],eu);const tu=Ul({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("TransitionFade",[e.status?n("div",{key:e.status,staticClass:"vssue-status"},[["failed","loadingComments","initializing"].includes(e.status)?n("VssueIcon",{attrs:{name:"failed"===e.status?"error":"loading"}}):e._e(),e._v(" "),n("p",{staticClass:"vssue-status-info"},[n(["issueNotCreated","loginRequired"].includes(e.status)?"a":"span",{tag:"Component",on:{click:e.handleClick}},[e._v("\n        "+e._s(e.vssue.$t(e.status))+"\n      ")])],1)],1):e._e()])},staticRenderFns:[]},void 0,eu,void 0,!1,void 0,!1,void 0,void 0,void 0);let nu=class extends Wn{};Dl([Tc()],nu.prototype,"vssue",void 0),nu=Dl([Pc({components:{TransitionFade:ql,VssueIcon:Fl,VssueComments:Kl,VssueNewComment:Jl,VssueNotice:Ql,VssueStatus:tu}})],nu);const ru=Ul({render:function(){var e=this.$createElement,t=this._self._c||e;return t("TransitionFade",[this.vssue.isInitializing?t("VssueStatus"):t("div",{staticClass:"vssue-body"},[this.vssue.API?t("VssueNewComment"):this._e(),this._v(" "),t("VssueNotice"),this._v(" "),t("TransitionFade",[this.vssue.comments&&this.vssue.comments.data.length>0?t("VssueComments"):t("VssueStatus")],1)],1)],1)},staticRenderFns:[]},void 0,nu,void 0,!1,void 0,!1,void 0,void 0,void 0);let au=class extends Wn{};Dl([Tc()],au.prototype,"vssue",void 0),au=Dl([Pc],au);const iu=Ul({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"vssue-header"},[n("a",{staticClass:"vssue-header-comments-count",attrs:{href:e.vssue.issue?e.vssue.issue.link:null,target:"_blank",rel:"noopener noreferrer"}},[n("span",[e._v("\n      "+e._s(e.vssue.comments?e.vssue.$tc("comments",e.vssue.comments.count,{count:e.vssue.comments.count}):e.vssue.$tc("comments",0))+"\n    ")])]),e._v(" "),n("span",{staticClass:"vssue-header-powered-by"},[n("span",[e._v("Powered by")]),e._v(" "),e.vssue.API?n("span",[n("a",{attrs:{href:e.vssue.API.platform.link,title:e.vssue.API.platform.name+" API "+e.vssue.API.platform.version,target:"_blank",rel:"noopener noreferrer"}},[e._v("\n        "+e._s(e.vssue.API.platform.name)+"\n      ")]),e._v(" "),n("span",[e._v("&")])]):e._e(),e._v(" "),n("a",{attrs:{href:"https://github.com/meteorlxy/vssue",title:"Vssue v"+e.vssue.version,target:"_blank",rel:"noopener noreferrer"}},[e._v("\n      Vssue\n    ")])])])},staticRenderFns:[]},void 0,au,void 0,!1,void 0,!1,void 0,void 0,void 0),ou={login:"Login with {platform}",logout:"Logout",currentUser:"Current User",loading:"Loading",submit:"Submit",submitting:"Submitting",submitComment:"Submit Comment",cancel:"Cancel",edit:"Edit",editMode:"Edit Mode",delete:"Delete",reply:"Reply",heart:"Heart",like:"Like",unlike:"Unlike",perPage:"Comments per page",sort:"Click to change the sort direction",page:"Page",prev:"Previous Page",next:"Next Page",comments:"Comments | {count} Comment | {count} Comments",loginToComment:"Login with {platform} account to leave a comment",placeholder:"Leave a comment. Styling with Markdown is supported. Ctrl + Enter to submit.",noLoginPlaceHolder:"Login to leave a comment. Styling with Markdown is supported. ",failed:"Failed to load comments",initializing:"Initializing...",issueNotCreated:"Click to create issue",loadingComments:"Loading comments...",loginRequired:"Login to view comments",noComments:"No comments yet. Leave the first comment !",reactionGiven:"Already given '{reaction}' reaction",deleteConfirm:"Confirm to delete this comment ?",deleteFailed:"Failed to delete comment"},su={login:"使用 {platform} 登录",logout:"退出登录",currentUser:"当前用户",loading:"加载中",submit:"提交",submitting:"发表中",submitComment:"发表评论",cancel:"取消",edit:"编辑",editMode:"编辑模式",delete:"删除",reply:"回复",heart:"喜欢",like:"赞",unlike:"踩",perPage:"每页评论数",sort:"点击改变排序方式",page:"页数",prev:"上一页",next:"下一页",comments:"评论 | {count} 条评论 | {count} 条评论",loginToComment:"使用 {platform} 帐号登录后发表评论",placeholder:"留下你的评论丨支持 Markdown 语法丨Ctrl + Enter 发表评论",noLoginPlaceHolder:"登录后才能发表评论丨支持 Markdown 语法",failed:"评论加载失败",initializing:"正在初始化...",issueNotCreated:"点击创建 Issue",loadingComments:"正在加载评论...",loginRequired:"登录后查看评论",noComments:"还没有评论，来发表第一条评论吧！",reactionGiven:"已经添加过 '{reaction}' 了",deleteConfirm:"确认要删除该评论吗？",deleteFailed:"评论删除失败"},cu={login:"Entrar com {platform}",logout:"Sair",currentUser:"Usuário Atual",loading:"Carregando",submit:"Enviar",submitting:"Enviando",submitComment:"Enviar Comentário",cancel:"Cancelar",edit:"Editar",editMode:"Modo de Edição",delete:"Apagar",reply:"Responder",heart:"Heart",like:"Like",unlike:"Unlike",perPage:"Comentários por página",sort:"Clique para alterar a ordenação",page:"Página",prev:"Página Anterior",next:"Próxima Página",comments:"Comentários | {count} Comentário | {count} Comentários",loginToComment:"Entre com uma conta {platform} para deixar um comentário",placeholder:"Deixe um comentário. Estilos com Markdown suportados. Ctrl + Enter para enviar.",noLoginPlaceHolder:"Entre para deixar um comentário. Estilos com Markdown suportados. ",failed:"Falha ao carregar comentários",initializing:"Inicializando...",issueNotCreated:"Click to create issue",loadingComments:"Carregando comentários...",loginRequired:"Entrar para visualizar comentários",noComments:"Nenhum comentário. Deixe o primeiro comentário!",reactionGiven:"Já reagiu com '{reaction}'",deleteConfirm:"Apagar este comentário?",deleteFailed:"Falha ao apagar comentário"},lu={login:"{platform} でログイン",logout:"ログアウト",currentUser:"現在のユーザー",loading:"読み込み中",submit:"送信",submitting:"送信中",submitComment:"コメントを送信",cancel:"キャンセル",edit:"編集",editMode:"編集モード",delete:"削除",reply:"返信",heart:"ハート",like:"高評価",unlike:"低評価",perPage:"コメント/ページ",sort:"並び順を変更するにはクリックしてください",page:"ページ",prev:"前のページ",next:"次のページ",comments:"コメント | {count} コメント | {count} コメント",loginToComment:"コメントを残すには {platform} アカウントでログインしてください。",placeholder:"コメントを残してください。Markdown 記法をサポートしています。 Ctrl + Enter で送信できます。",noLoginPlaceHolder:"コメントを残すにはログインしてください。マークダウン記法をサポートしています。",failed:"コメントの読み込みに失敗しました",initializing:"初期化中...",issueNotCreated:"Click to create issue",loadingComments:"コメントの読み込み中...",loginRequired:"コメントを見るにはログインしてください",noComments:"まだコメントがありません。最初のコメントを残しましょう！",reactionGiven:"既に '{reaction}' のリアクションをしています",deleteConfirm:"本当にコメントを削除してもいいですか？",deleteFailed:"コメントの削除に失敗しました"},uu={login:"התחברו עם {platform}",logout:"התנתקו",currentUser:"משתמש/ת נוכחי/ת",loading:"טוען",submit:"שליחה",submitting:"שולח",submitComment:"שליחת תגובה",cancel:"ביטל",edit:"עריכה",editMode:"מצב עריכה",delete:"מחיקה",reply:"תשובה",heart:"לב",like:"לייק",unlike:"אנלייק",perPage:"תגובות לדף",sort:"לחצו כדי לשנות את כיוון המיון",page:"דף",prev:"הדף הקודם",next:"הדף הבא",comments:"תגובות | {count} תגובה | {count} תגובות",loginToComment:"התחברו עם חשבון {platform} כדי להשאיר תגובה",placeholder:"השאירו תגובה. יש תמיכה בעיצוב בעזרת Markdown. Ctrl + Enter כדי לשלוח.",noLoginPlaceHolder:"התחברו כדי להשאיר תגובה. יש תמיכה בעיצוב בעזרת Markdown. ",failed:"כשלון בטעינת התגובות",initializing:"מאתחל...",issueNotCreated:"לחצו ליצירת issue",loadingComments:"טוען תגובות...",loginRequired:"התחברו כדי לצפות בתגובות",noComments:"עדיין אין תגובות. השאירו תגובה ראשונה !",reactionGiven:"כבר ניתן חיווי '{reaction}'",deleteConfirm:"בטוחים במחיקת התגובה ?",deleteFailed:"כשלון במחיקת התגובה"};Object.prototype.hasOwnProperty.call(Wn,"$i18n")||Wn.use($l);const hu=new $l({locale:"en",fallbackLocale:"en",messages:{en:ou,"en-US":ou,zh:su,"zh-CN":su,pt:cu,"pt-BR":cu,ja:lu,"ja-JP":lu,he:uu,"he-IL":uu}});let du=class extends Wn{constructor(){super(...arguments),this.title=e=>`${e.prefix}${document.title}`,this.issueId=null,this.options=null,this.API=null,this.accessToken=null,this.user=null,this.issue=null,this.comments=null,this.query={page:1,perPage:10,sort:"desc"},this.isInitializing=!0,this.isIssueNotCreated=!1,this.isLoginRequired=!1,this.isFailed=!1,this.isCreatingIssue=!1,this.isLoadingComments=!1,this.isCreatingComment=!1,this.isUpdatingComment=!1}get version(){return"1.4.8"}get issueTitle(){return null===this.options?"":"function"==typeof this.title?this.title(this.options):`${this.options.prefix}${this.title}`}get isPending(){return this.isLoadingComments||this.isCreatingComment||this.isUpdatingComment}get isLogined(){return null!==this.accessToken&&null!==this.user}get isAdmin(){return null!==this.options&&null!==this.accessToken&&null!==this.user&&(this.user.username===this.options.owner||this.options.admins.includes(this.user.username))}get accessTokenKey(){return this.API?`Vssue.${this.API.platform.name.toLowerCase()}.access_token`:""}onQueryPerPageChange(){this.query.page=1,this.getComments()}onQueryChange(){this.getComments()}setOptions(e){this.options=Object.assign({labels:["Vssue"],state:"Vssue",prefix:"[Vssue]",admins:[],perPage:10,proxy:e=>"https://cors-anywhere.azm.workers.dev/"+e,issueContent:({url:e})=>e,autoCreateIssue:!1},e);const t=["api","owner","repo","clientId"];for(const e of t)this.options[e]||console.warn(`[Vssue] the option '${e}' is required`);if(this.options.locale)this.$i18n.locale=this.options.locale;else{const e=Object.keys(this.$i18n.messages),t=window.navigator.languages;this.$i18n.locale=t.filter(t=>e.includes(t)).shift()||"en"}}async init(){try{await this.initStore(),await this.initComments()}catch(e){e.response&&[401,403].includes(e.response.status)?this.isLoginRequired=!0:this.isFailed=!0,console.error(e)}}async initStore(){try{if(!this.options)throw new Error("Options are required to initialize Vssue");this.API=null,this.accessToken=null,this.user=null,this.issue=null,this.comments=null,this.query={page:1,perPage:this.options.perPage,sort:"desc"},this.isInitializing=!0,this.isIssueNotCreated=!1,this.isLoginRequired=!1,this.isFailed=!1,this.isCreatingIssue=!1,this.isLoadingComments=!1,this.isCreatingComment=!1,this.isUpdatingComment=!1;const e=this.options.api;this.API=new e({baseURL:this.options.baseURL,labels:this.options.labels,state:this.options.state,owner:this.options.owner,repo:this.options.repo,clientId:this.options.clientId,clientSecret:this.options.clientSecret,proxy:this.options.proxy}),await this.handleAuth()}finally{this.isInitializing=!1}}async initComments(){if(this.API&&this.options)if(this.issueId){const[e,t]=await Promise.all([this.API.getIssue({accessToken:this.accessToken,issueId:this.issueId}),this.API.getComments({accessToken:this.accessToken,issueId:this.issueId,query:this.query})]);this.issue=e,this.comments=t}else this.issue=await this.API.getIssue({accessToken:this.accessToken,issueTitle:this.issueTitle}),null===this.issue?(this.isIssueNotCreated=!0,this.options.autoCreateIssue&&await this.postIssue()):await this.getComments()}async postIssue(){if(this.API&&this.options&&!this.issue&&!this.issueId&&(this.isLogined||this.login(),this.isAdmin))try{this.isCreatingIssue=!0;const e=await this.API.postIssue({title:this.issueTitle,content:await this.options.issueContent({options:this.options,url:qc(window.location.href)}),accessToken:this.accessToken});this.issue=e,this.isIssueNotCreated=!1,await this.getComments()}catch(e){this.isFailed=!0}finally{this.isCreatingIssue=!1}}async getComments(){try{if(!this.API||!this.issue||this.isLoadingComments)return;this.isLoadingComments=!0;const e=await this.API.getComments({accessToken:this.accessToken,issueId:this.issue.id,query:this.query});return this.comments=e,this.query.page!==e.page&&(this.query.page=e.page),this.query.perPage!==e.perPage&&(this.query.perPage=e.perPage),e}catch(e){if(!e.response||![401,403].includes(e.response.status)||this.isLogined)throw this.$emit("error",e),e;this.isLoginRequired=!0}finally{this.isLoadingComments=!1}}async postComment({content:e}){try{if(!this.API||!this.issue||this.isCreatingComment)return;this.isCreatingComment=!0;return await this.API.postComment({accessToken:this.accessToken,content:e,issueId:this.issue.id})}catch(e){throw this.$emit("error",e),e}finally{this.isCreatingComment=!1}}async putComment({commentId:e,content:t}){try{if(!this.API||!this.issue)return;return await this.API.putComment({accessToken:this.accessToken,issueId:this.issue.id,commentId:e,content:t})}catch(e){throw this.$emit("error",e),e}}async deleteComment({commentId:e}){try{if(!this.API||!this.issue)return;return await this.API.deleteComment({accessToken:this.accessToken,issueId:this.issue.id,commentId:e})}catch(e){throw this.$emit("error",e),e}}async getCommentReactions({commentId:e}){try{if(!this.API||!this.issue)return;return await this.API.getCommentReactions({accessToken:this.accessToken,issueId:this.issue.id,commentId:e})}catch(e){throw this.$emit("error",e),e}}async postCommentReaction({commentId:e,reaction:t}){try{if(!this.API||!this.issue)return!1;return await this.API.postCommentReaction({accessToken:this.accessToken,issueId:this.issue.id,commentId:e,reaction:t})}catch(e){throw this.$emit("error",e),e}}login(){this.API&&this.API.redirectAuth()}logout(){this.setAccessToken(null),this.user=null}async handleAuth(){if(!this.API)return;const e=await this.API.handleAuth();e?(this.setAccessToken(e),this.user=await this.API.getUser({accessToken:e})):this.getAccessToken()?this.user=await this.API.getUser({accessToken:this.accessToken}):(this.setAccessToken(null),this.user=null)}getAccessToken(){return this.accessToken=window.localStorage.getItem(this.accessTokenKey),this.accessToken}setAccessToken(e){null===e?window.localStorage.removeItem(this.accessTokenKey):window.localStorage.setItem(this.accessTokenKey,e),this.accessToken=e}};Dl([jc("query.perPage")],du.prototype,"onQueryPerPageChange",null),Dl([jc("query.page"),jc("query.sort")],du.prototype,"onQueryChange",null),du=Dl([Pc({i18n:hu})],du);var pu=du;let fu=class extends Wn{constructor(){super(...arguments),this.vssue=new pu}onOptionsChange(e){this.vssue.setOptions(e)}mounted(){null!==this.title&&(this.vssue.title=this.title),null!==this.issueId&&(this.vssue.issueId=this.issueId),this.vssue.setOptions(this.options),this.vssue.init()}};var mu;Dl([Lc({type:[String,Function],required:!1,default:null})],fu.prototype,"title",void 0),Dl([Lc({type:[String,Number],required:!1,default:null})],fu.prototype,"issueId",void 0),Dl([Lc({type:Object,required:!1,default:()=>({})})],fu.prototype,"options",void 0),Dl([(mu="vssue",wc((function(e,t){var n=e.provide;Oc(n)&&(n=e.provide=Sc(n)),n.managed[t]=mu||t})))],fu.prototype,"vssue",void 0),Dl([jc("options",{deep:!0})],fu.prototype,"onOptionsChange",null),fu=Dl([Pc({components:{Iconfont:Bl,VssueBody:ru,VssueHeader:iu}})],fu);const gu=Ul({render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"vssue"},[t("Iconfont"),this._v(" "),t("VssueHeader"),this._v(" "),t("VssueBody")],1)},staticRenderFns:[]},void 0,fu,void 0,!1,void 0,!1,void 0,void 0,void 0);var yu=n(114),vu=n.n(yu);function bu(e){return{username:e.login,avatar:e.avatar_url,homepage:e.html_url}}function wu(e){return{id:e.number,title:e.title,content:e.body,link:e.html_url}}function _u(e){return{like:e["+1"],unlike:e[-1],heart:e.heart}}function xu(e){return{id:e.id,content:e.body_html,contentRaw:e.body,author:bu(e.user),createdAt:e.created_at,updatedAt:e.updated_at,reactions:_u(e.reactions)}}function ku(e){return"like"===e?"+1":"unlike"===e?"-1":e}class Cu{constructor({baseURL:e="https://github.com",owner:t,repo:n,labels:r,clientId:a,clientSecret:i,state:o,proxy:s}){if(void 0===i||void 0===s)throw new Error("clientSecret and proxy is required for GitHub V3");this.baseURL=e,this.owner=t,this.repo=n,this.labels=r,this.clientId=a,this.clientSecret=i,this.state=o,this.proxy=s,this.$http=vu.a.create({baseURL:"https://github.com"===e?"https://api.github.com":Dc(e,"api/v3"),headers:{Accept:"application/vnd.github.v3+json"}}),this.$http.interceptors.response.use(e=>e.data&&e.data.error?Promise.reject(new Error(e.data.error_description)):e,e=>(void 0===e.response&&"Network Error"===e.message&&(e.response={status:403}),Promise.reject(e)))}get platform(){return{name:"GitHub",link:this.baseURL,version:"v3",meta:{reactable:!0,sortable:!1}}}redirectAuth(){window.location.href=$c(Dc(this.baseURL,"login/oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,scope:"public_repo",state:this.state})}async handleAuth(){const e=(t=window.location.search,Object(Rc.parse)(t,{ignoreQueryPrefix:!0}));var t;if(e.code){if(e.state!==this.state)return null;const t=e.code;delete e.code,delete e.state;const n=$c(qc(window.location.href),e)+window.location.hash;window.history.replaceState(null,"",n);return await this.getAccessToken({code:t})}return null}async getAccessToken({code:e}){const t=Dc(this.baseURL,"login/oauth/access_token"),n="function"==typeof this.proxy?this.proxy(t):this.proxy,{data:r}=await this.$http.post(n,{client_id:this.clientId,client_secret:this.clientSecret,code:e},{headers:{Accept:"application/json"}});return r.access_token}async getUser({accessToken:e}){const{data:t}=await this.$http.get("user",{headers:{Authorization:"token "+e}});return bu(t)}async getIssue({accessToken:e,issueId:t,issueTitle:n}){const r={};if(e&&(r.headers={Authorization:"token "+e}),!t){r.params={q:[`"${n}"`,"is:issue","in:title",`repo:${this.owner}/${this.repo}`,"is:public",...this.labels.map(e=>"label:"+e)].join(" "),timestamp:Date.now()};const{data:e}=await this.$http.get("search/issues",r);return e.items.map(wu).find(e=>e.title===n)||null}try{r.params={timestamp:Date.now()};const{data:e}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/${t}`,r);return wu(e)}catch(e){if(e.response&&404===e.response.status)return null;throw e}}async postIssue({accessToken:e,title:t,content:n}){const{data:r}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues`,{title:t,body:n,labels:this.labels},{headers:{Authorization:"token "+e}});return wu(r)}async getComments({accessToken:e,issueId:t,query:{page:n=1,perPage:r=10}={}}){const a={params:{timestamp:Date.now()}},i={params:{page:n,per_page:r,timestamp:Date.now()},headers:{Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}};e&&(a.headers={Authorization:"token "+e},i.headers.Authorization="token "+e);const[o,s]=await Promise.all([this.$http.get(`repos/${this.owner}/${this.repo}/issues/${t}`,a),this.$http.get(`repos/${this.owner}/${this.repo}/issues/${t}/comments`,i)]),c=s.headers.link||null,l=/rel="next"/.test(c)?Number(c.replace(/^.*[^_]page=(\d*).*rel="next".*$/,"$1"))-1:/rel="prev"/.test(c)?Number(c.replace(/^.*[^_]page=(\d*).*rel="prev".*$/,"$1"))+1:1,u=c?Number(c.replace(/^.*per_page=(\d*).*$/,"$1")):r;return{count:Number(o.data.comments),page:l,perPage:u,data:s.data.map(xu)}}async postComment({accessToken:e,issueId:t,content:n}){const{data:r}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/${t}/comments`,{body:n},{headers:{Authorization:"token "+e,Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}});return xu(r)}async putComment({accessToken:e,commentId:t,content:n}){const{data:r}=await this.$http.patch(`repos/${this.owner}/${this.repo}/issues/comments/${t}`,{body:n},{headers:{Authorization:"token "+e,Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}});return xu(r)}async deleteComment({accessToken:e,commentId:t}){const{status:n}=await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${t}`,{headers:{Authorization:"token "+e}});return 204===n}async getCommentReactions({accessToken:e,commentId:t}){const{data:n}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/comments/${t}`,{params:{timestamp:Date.now()},headers:{Authorization:"token "+e,Accept:"application/vnd.github.squirrel-girl-preview"}});return _u(n.reactions)}async postCommentReaction({accessToken:e,commentId:t,reaction:n}){const r=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/comments/${t}/reactions`,{content:ku(n)},{headers:{Authorization:"token "+e,Accept:"application/vnd.github.squirrel-girl-preview"}});return 200===r.status?this.deleteCommentReaction({accessToken:e,commentId:t,reactionId:r.data.id}):201===r.status}async deleteCommentReaction({accessToken:e,commentId:t,reactionId:n}){return 204===(await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${t}/reactions/${n}`,{headers:{Authorization:"token "+e,Accept:"application/vnd.github.squirrel-girl-preview"}})).status}}var Mu=n(115),Au=n.n(Mu),Pu=(n(317),{components:{VssueComponent:gu},data:()=>({isLoad:!1}),watch:{"$page.key"(e,t){e&&t!==e&&this.initialize()}},mounted(){this.$nextTick(()=>{this.initialize()})},methods:{initialize(){this.$el.remove(),this.isLoad=!1,setTimeout(()=>{if(this.needComment(this.$frontmatter)){document.querySelector("main").appendChild(this.$el),this.title=Au.a.render("[Comment]<%- frontmatter.title %>",{frontmatter:this.$frontmatter}),this.options={api:Cu,autoCreateIssue:!0,clientId:"adb9fb0ac1159e00ce7f",clientSecret:"27da8dc85f808c2bd1b6e44da5ae69c4ddf17d8d",owner:"eryajf",repo:"qishao-notes"},this.isLoad=!0}},1e3)},needComment:e=>!1!==e.comment&&!1!==e.comments}}),Tu=Object(ac.a)(Pu,(function(){var e=this._self._c;return this.isLoad?e("div",[e("VssueComponent",{attrs:{title:this.title,options:this.options}})],1):this._e()}),[],!1,null,null,null).exports,Su=[({Vue:e,options:t,router:n,siteData:r})=>{},({Vue:e,options:t,router:n,siteData:r})=>{r.pages.map(e=>{const{frontmatter:{date:t,author:n}}=e;"string"==typeof t&&"Z"===t.charAt(t.length-1)&&(e.frontmatter.date=function(e){e instanceof Date||(e=new Date(e));return`${e.getUTCFullYear()}-${dc(e.getUTCMonth()+1)}-${dc(e.getUTCDate())} ${dc(e.getUTCHours())}:${dc(e.getUTCMinutes())}:${dc(e.getUTCSeconds())}`}(t)),n?e.author=n:r.themeConfig.author&&(e.author=r.themeConfig.author)}),e.mixin(hc)},{},({Vue:e})=>{e.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{},({Vue:e})=>{e.component("Vssue",Tu)}],Ou=["Vssue"];class Eu extends class{constructor(){this.store=new Wn({data:{state:{}}})}$get(e){return this.store.state[e]}$set(e,t){Wn.set(this.store.state,e,t)}$emit(...e){this.store.$emit(...e)}$on(...e){this.store.$on(...e)}}{}Object.assign(Eu.prototype,{getPageAsyncComponent:ss,getLayoutAsyncComponent:cs,getAsyncComponent:ls,getVueComponent:us});var Iu={install(e){const t=new Eu;e.$vuepress=t,e.prototype.$vuepress=t}};function Lu(e,t){return e.options.routes.filter(e=>e.path.toLowerCase()===t.toLowerCase()).length>0}var ju={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(e){const t=this.pageKey||this.$parent.$page.key;return ds("pageKey",t),Wn.component(t)||Wn.component(t,ss(t)),Wn.component(t)?e(t):e("")}},Ru={functional:!0,props:{slotKey:String,required:!0},render:(e,{props:t,slots:n})=>e("div",{class:["content__"+t.slotKey]},n()[t.slotKey])},$u={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Du=(n(318),n(319),Object(ac.a)($u,(function(){var e=this._self._c;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),zu={functional:!0,render(e,{parent:t,children:n}){if(t._isMounted)return n;t.$once("hook:mounted",()=>{t.$forceUpdate()})}};Wn.config.productionTip=!1,Wn.use(Go),Wn.use(Iu),Wn.mixin(function(e,t,n=Wn){!function(e){e.locales&&Object.keys(e.locales).forEach(t=>{e.locales[t].path=t});Object.freeze(e)}(t),n.$vuepress.$set("siteData",t);const r=new(e(n.$vuepress.$get("siteData"))),a=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(r)),i={};return Object.keys(a).reduce((e,t)=>(t.startsWith("$")&&(e[t]=a[t].get),e),i),{computed:i}}(e=>class{setPage(e){this.__page=e}get $site(){return e}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:e={}}=this.$site;let t,n;for(const r in e)"/"===r?n=e[r]:0===this.$page.path.indexOf(r)&&(t=e[r]);return t||n||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:e}=this.$page.frontmatter;return"string"==typeof e&&e}get $title(){const e=this.$page,{metaTitle:t}=this.$page.frontmatter;if("string"==typeof t)return t;const n=this.$siteTitle,r=e.frontmatter.home?null:e.frontmatter.title||e.title;return n?r?r+" | "+n:n:r||"VuePress"}get $description(){const e=function(e){if(e){const t=e.filter(e=>"description"===e.name)[0];if(t)return t.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(r.path.toLowerCase()===t.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},sc)),Wn.component("Content",ju),Wn.component("ContentSlotsDistributor",Ru),Wn.component("OutboundLink",Du),Wn.component("ClientOnly",zu),Wn.component("Layout",cs("Layout")),Wn.component("NotFound",cs("NotFound")),Wn.prototype.$withBase=function(e){const t=this.$site.base;return"/"===e.charAt(0)?t+e.slice(1):e},window.__VUEPRESS__={version:"1.8.0",hash:"91d7d61"},async function(e){const t="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:sc.routerBase||sc.base,n=new Go({base:t,mode:"history",fallback:!1,routes:oc,scrollBehavior:(e,t,n)=>n||(e.hash?!Wn.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(e.hash)}:{x:0,y:0})});!function(e){e.beforeEach((t,n,r)=>{if(Lu(e,t.path))r();else if(/(\/|\.html)$/.test(t.path))if(/\/$/.test(t.path)){const n=t.path.replace(/\/$/,"")+".html";Lu(e,n)?r(n):r()}else r();else{const n=t.path+"/",a=t.path+".html";Lu(e,a)?r(a):Lu(e,n)?r(n):r()}})}(n);const r={};try{await Promise.all(Su.filter(e=>"function"==typeof e).map(t=>t({Vue:Wn,options:r,router:n,siteData:sc,isServer:e})))}catch(e){console.error(e)}return{app:new Wn(Object.assign(r,{router:n,render:e=>e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},Ou.map(t=>e(t)))])})),router:n}}(!1).then(({app:e,router:t})=>{t.onReady(()=>{e.$mount("#app")})})}]);